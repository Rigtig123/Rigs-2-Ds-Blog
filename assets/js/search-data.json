{
  
    
        "post0": {
            "title": "Quiz",
            "content": "{ “cells”: [ { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “# Quiz Code n”, “&gt; Code. n”, “ n”, “- toc: true n”, “- badges: true n”, “- comments: true n”, “- categories: [jupyter] n”, “- image: images/chart-preview.png n”, “ n” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “ n”, “Planning: I wanted to make a Geogrpahy quiz using country outlines with 4 options per question and 3 modes: Easy, Normal, and Hard mode. I finished two of the modes. Hard mode is coming soon. n”, “ n”, “ n”, “ n”, “I made the quiz completely on my own through trial and error. The first thing I did was learn how to bind buttons with screens so the user could see if they got it wrong in Easy mode. The Normal Mode I used an On Event in the Ui controls and for each button I made sure it would show up if it was correct or incorrect right away and I put a timer on the set screen so the user could see if they got it right before the screen changed to the next question. I also added an info about why I created it. I also made a Settings page were they could press the music button to turn off and on the music if they wanted to listen to it while taking the quiz. “ ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “https://studio.code.org/projects/applab/bYO5QNczfGnFlLXQwivUmJwkX4no5v-YHkHYyfKbc5Y “ ] }, { “cell_type”: “code”, “execution_count”: null, “metadata”: {}, “outputs”: [], “source”: [ “onEvent(&quot;Play&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen1&quot;); n”, “}); n”, “onEvent(&quot;Info&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen20&quot;); n”, “}); n”, “onEvent(&quot;back&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;HomePage&quot;); n”, “}); n”, “onEvent(&quot;easy&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen2&quot;); n”, “ playSound(&quot;sound://category_achievements/peaceful_win_1.mp3&quot;, false); n”, “}); n”, “onEvent(&quot;hard&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen12&quot;); n”, “ playSound(&quot;sound://category_achievements/melodic_win_1.mp3&quot;, false); n”, “}); n”, “onEvent(&quot;normal&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen7&quot;); n”, “ playSound(&quot;sound://category_explosion/melodic_loss_6.mp3&quot;, false); n”, “}); n”, “onEvent(&quot;italy&quot;, &quot;click&quot;, function(event ) { n”, “ setScreen(&quot;screen3&quot;); n”, “}); n”, “onEvent(&quot;netherlands&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen18&quot;); n”, “}); n”, “onEvent(&quot;germany&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen18&quot;); n”, “}); n”, “onEvent(&quot;france&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen18&quot;); n”, “}); n”, “onEvent(&quot;incorrect&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;HomePage&quot;); n”, “}); n”, “onEvent(&quot;UK&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen4&quot;); n”, “}); n”, “onEvent(&quot;Ireland&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen18&quot;); n”, “}); n”, “onEvent(&quot;Australia&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen18&quot;); n”, “}); n”, “onEvent(&quot;Spain&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen18&quot;); n”, “}); n”, “onEvent(&quot;SK&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen5&quot;); n”, “}); n”, “onEvent(&quot;NK&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen18&quot;); n”, “}); n”, “onEvent(&quot;Japan&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen18&quot;); n”, “}); n”, “onEvent(&quot;China&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen18&quot;); n”, “}); n”, “onEvent(&quot;Canada&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen18&quot;); n”, “}); n”, “onEvent(&quot;Brazil&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen6&quot;); n”, “}); n”, “onEvent(&quot;Mexico&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen18&quot;); n”, “}); n”, “onEvent(&quot;USA&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen18&quot;); n”, “}); n”, “onEvent(&quot;India&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen21&quot;); n”, “}); n”, “onEvent(&quot;Egypt&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen18&quot;); n”, “}); n”, “onEvent(&quot;Russia&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen18&quot;); n”, “}); n”, “onEvent(&quot;Bang&quot;, &quot;click&quot;, function(event ) { n”, “ setScreen(&quot;screen18&quot;); n”, “}); n”, “onEvent(&quot;end&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;HomePage&quot;); n”, “}); n”, “onEvent(&quot;Malay&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;rightt&quot;); n”, “ playSound(&quot;sound://category_male_voiceover/correct_male.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;screenchile&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;Philli&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;wrongg&quot;); n”, “ playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;screenchile&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;NZ&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;wrongg&quot;); n”, “ playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;screenchile&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;Indo&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;wrongg&quot;); n”, “ playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;screenchile&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;chile&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;rightt2&quot;); n”, “ playSound(&quot;sound://category_male_voiceover/correct_male.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;screen9&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;ecuador&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;wrongg2&quot;); n”, “ playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;screen9&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;suriname&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;wrongg2&quot;); n”, “ playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;screen9&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;peru&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;wrongg2&quot;); n”, “ playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;screen9&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;pakistan&quot;, &quot;click&quot;, function(event ) { n”, “ showElement(&quot;righttTwo&quot;); n”, “ playSound(&quot;sound://category_male_voiceover/correct_male.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;swiss&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;Iran&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;wronggtwo&quot;); n”, “ playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;swiss&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;Iraq&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;wronggtwo&quot;); n”, “ playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;swiss&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;Saudi&quot;, &quot;click&quot;, function(event ) { n”, “ showElement(&quot;wronggtwo&quot;); n”, “ playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;swiss&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;swis&quot;, &quot;click&quot;, function(event ) { n”, “ showElement(&quot;rightt3&quot;); n”, “ playSound(&quot;sound://category_male_voiceover/correct_male.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;screen11&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;Czechia&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;wrongg3&quot;); n”, “ playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;screen11&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;Hungary&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;wrongg3&quot;); n”, “ playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;screen11&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;romania&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;wrongg3&quot;); n”, “ playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;screen11&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;tanzania&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;rightt4&quot;); n”, “ playSound(&quot;sound://category_male_voiceover/correct_male.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;HomePage&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;morocco&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;wrongg4&quot;); n”, “ playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;HomePage&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;repofcongo&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;wrongg4&quot;); n”, “ playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;HomePage&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;zimbabwe&quot;, &quot;click&quot;, function(event) { n”, “ showElement(&quot;wrongg4&quot;); n”, “ playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); n”, “ setTimeout(function() { n”, “ setScreen(&quot;HomePage&quot;); n”, “ }, 2000); n”, “}); n”, “onEvent(&quot;Settings1&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;screen22&quot;); n”, “}); n”, “onEvent(&quot;Back2&quot;, &quot;click&quot;, function(event) { n”, “ setScreen(&quot;HomePage&quot;); n”, “}); n”, “onEvent(&quot;Musicc&quot;, &quot;click&quot;, function(event) { n”, “ playSound(&quot;sound://category_background/gametime.mp3&quot;, false); n”, “ textLabel(&quot;Musicc&quot;, &quot;Hi&quot;); n”, “}); n”, “onEvent(&quot;Musicc&quot;, &quot;click&quot;, function(event) { n”, “ stopSound(&quot;sound://category_background/gametime.mp3&quot;); n”, “}); n” ] } ], “metadata”: { “kernelspec”: { “display_name”: “Python 3.8.2 64-bit”, “language”: “python”, “name”: “python3” }, “language_info”: { “name”: “python”, “version”: “3.8.2” }, “orig_nbformat”: 4, “vscode”: { “interpreter”: { “hash”: “31f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6” } } }, “nbformat”: 4, “nbformat_minor”: 2 } .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2022/09/13/Quiz.ipynb",
            "relUrl": "/2022/09/13/Quiz.ipynb",
            "date": " • Sep 13, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Youtube Channel",
            "content": "&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/rFY2X6Y4tPY&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt; .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2022/09/12/Youtube-Channel.html",
            "relUrl": "/jupyter/2022/09/12/Youtube-Channel.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Python Lists and Dictionaries",
            "content": "print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) name = &quot;Luke Riggins&quot; print(&quot;name&quot;, name, type(name)) print() # variable of type integer print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) age = 17 print(&quot;age&quot;, age, type(age)) print() # variable of type float print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) score = 90.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) print(&quot;What is variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection?&quot;) print(&quot;What is different about the list output?&quot;) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;Bash&quot;] # *I added bash as a language* print(&quot;langs&quot;, langs, type(langs), &quot;length&quot;, len(langs)) print(&quot;- langs[3]&quot;, langs[3], type(langs[3])) # *I changed the index from 0 to 3 so that the print command will print Bash instead of Python* print() # variable of type dictionary (a group of keys and values) print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) print(&quot;What is different about the dictionary output?&quot;) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person), &quot;length&quot;, len(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . What is the variable name/key? value? type? primitive or collection, why? name Luke Riggins &lt;class &#39;str&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? age 17 &lt;class &#39;int&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? score 90.0 &lt;class &#39;float&#39;&gt; What is variable name/key? value? type? primitive or collection? What is different about the list output? langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;] &lt;class &#39;list&#39;&gt; length 4 - langs[3] Bash &lt;class &#39;str&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? What is different about the dictionary output? person {&#39;name&#39;: &#39;Luke Riggins&#39;, &#39;age&#39;: 17, &#39;score&#39;: 90.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;]} &lt;class &#39;dict&#39;&gt; length 4 - person[&#34;name&#34;] Luke Riggins &lt;class &#39;str&#39;&gt; . InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Ethan&quot;, &quot;LastName&quot;: &quot;Nyguen&quot;, &quot;DOB&quot;: &quot;October 3&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;EthanN45233@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Luke&quot;, &quot;LastName&quot;: &quot;Riggins&quot;, &quot;DOB&quot;: &quot;December 2&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;luker56233@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;Volkswagon Passat&quot;] }) # PUTTING MY INFORMATION (HACK!) InfoDb.append({ &quot;FirstName&quot;: &quot;Luke&quot;, &quot;LastName&quot;: &quot;Riggins&quot;, &quot;DOB&quot;: &quot;December 2&quot;, &quot;Residence&quot;: &quot;Rancho Bernardo&quot;, &quot;Email&quot;: &quot;luke120204@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;Toyota&quot;] }) # PUTTING MY PARTER&#39;S INFORMATION (HACK!) InfoDb.append({ &quot;FirstName&quot;: &quot;Jeffery&quot;, &quot;LastName&quot;: &quot;Lee&quot;, &quot;DOB&quot;: &quot;December 27&quot;, &quot;Residence&quot;: &quot;4S Ranch&quot;, &quot;Email&quot;: &quot;jefferyl56783@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;Honda Accord&quot;] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;Ethan&#39;, &#39;LastName&#39;: &#39;Nyguen&#39;, &#39;DOB&#39;: &#39;October 3&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;EthanN45233@stu.powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]}, {&#39;FirstName&#39;: &#39;Luke&#39;, &#39;LastName&#39;: &#39;Riggins&#39;, &#39;DOB&#39;: &#39;December 2&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;luker56233@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;Volkswagon Passat&#39;]}, {&#39;FirstName&#39;: &#39;Luke&#39;, &#39;LastName&#39;: &#39;Riggins&#39;, &#39;DOB&#39;: &#39;December 2&#39;, &#39;Residence&#39;: &#39;Rancho Bernardo&#39;, &#39;Email&#39;: &#39;luke120204@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Toyota&#39;]}, {&#39;FirstName&#39;: &#39;Jeffery&#39;, &#39;LastName&#39;: &#39;Lee&#39;, &#39;DOB&#39;: &#39;December 27&#39;, &#39;Residence&#39;: &#39;4S Ranch&#39;, &#39;Email&#39;: &#39;jefferyl56783@stu.powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;Honda Accord&#39;]}] . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Formatted output of List/Dictionary - for loop . Prepare a function to format the data . | Prepare a function to iterate through the list . | Activate your function . | . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Alternate Methods for iteration . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Recursion . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Creating a For Loop with Index . for indx, record in enumerate(InfoDb): print(&quot;Record #&quot; + str(indx+1) + &quot;: &quot;, end = &quot;&quot;) print_data(record) . Record #1: Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Record #2: Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Record #3: Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Record #4: Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Reverse Order . for record in reversed(InfoDb): print_data(record) . Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2022/09/12/Dcitionaries-Lists-and-Dictionaries.html",
            "relUrl": "/jupyter/2022/09/12/Dcitionaries-Lists-and-Dictionaries.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Changing Remote Theme Temporarily",
            "content": "Changed value for key remote_theme . . Reverted back: . . How I did it . I went to APCSP website and copied the midnight code which is pages-themes/midnight@v0.2.0 and put it in config in place of jekyll/minima under remote themes . .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%202/2022/09/08/Changing-Theme-Temp.html",
            "relUrl": "/week%202/2022/09/08/Changing-Theme-Temp.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "College Apps Timeline",
            "content": "Python Lists and Dictionaries . toc: true layout: post description: How to use Bash. categories: [markdown] title: Lukes Second Blog . Timeline for when to finish my College APPs . UC Prompts . Letters of Rec (Completed) . UC Prompt 1 (Completed) UC Prompt 4 (Completed) UC Prompt 6 (Completed) UC Prompt 7 (Completed) . Common App . UW Complete Common App supplemental essay (Completed) Complete Common App Application (Finish by September 1st) Covid Supplement (Finish by September 1st) . University of Oregon . Complete Common App supplemental essay (Completed) Complete Common App Application (Finish by September 8th) Covid Supplement (Finish by September 8th) . Boston University . Complete Common App supplemental essay (Finish by September 15th) Complete Common App Application (Finish by September 15th) Covid Supplement (Finish by September 15th) . Santa Clara . Complete Common App supplemental essay (Finish by September 22) Complete Common App Application (Finish by September 22) Covid Supplement (Finish by September 22) Complete Essay 2 (Finish by September 22) . NYU . Complete Common App supplemental essay (Finish by September 29) Complete Common App Application (Finish by September 29) Covid Supplement (Finish by September 29) Complete Essay 2 (Finish by September 29) . Indiana Bloomington . Complete Common App supplemental essay (Finish by October 6) Complete Common App Application (Finish by October 6) Covid Supplement (Finish by October 6) . USC . Complete Common App supplemental essay (Finish by October 13) Complete Common App Application (Finish by October 13) Covid Supplement (Finish by October 13) Complete Essay 2 (Finish by October 13) . University of Virginia . Complete Common App supplemental essay (Finish by October 21) Complete Common App Application (Finish by October 21) Covid Supplement (Finish by October 21) Complete Essay 2 (Finish by October 21) Complete CSS Profile (Finish by October 21) . University of Michigan . Complete Common App supplemental essay (Finish by October 28) Complete Common App Application (Finish by October 28) Covid Supplement (Finish by October 28) Complete Essay 2 (Finish by October 28) . CMC . Complete CMC Application (Finish by November 4) . ##CSU . SDSU . COmplete CSU Application (Finish by November 11) . Cal Poly SLO . Complete CSU Application (Finish by November 18) . Mcgill Regular Decision by January 15th .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2020/01/14/College-Apps-Timeline.html",
            "relUrl": "/2020/01/14/College-Apps-Timeline.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}