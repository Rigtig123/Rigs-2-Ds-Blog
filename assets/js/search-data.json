{
  
    
        "post0": {
            "title": "Playing around with Java Script",
            "content": "Math.round(93.5); . 94 . const removeDuplicates = (arr) =&gt; [...new Set(arr)] removeDuplicates([31, 56, 12, 31, 45, 12, 31]) //[ 31, 56, 12, 45 ] . [ 31, 56, 12, 45 ] . const dayDif = (date1, date2) =&gt; Math.ceil(Math.abs(date1.getTime() - date2.getTime()) / 86400000) dayDif(new Date(&quot;2022-09-30&quot;), new Date(&quot;2022-10-13&quot;)) . 13 .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2023/03/21/Playing-around-Java-Script-copy.html",
            "relUrl": "/jupyter/2023/03/21/Playing-around-Java-Script-copy.html",
            "date": " • Mar 21, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "Vocab and Agile Notes",
            "content": "",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2023/03/21/NATM.html",
            "relUrl": "/2023/03/21/NATM.html",
            "date": " • Mar 21, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "Python Lists and Dictionaries",
            "content": "print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) name = &quot;Luke Riggins&quot; print(&quot;name&quot;, name, type(name)) print() # variable of type integer print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) age = 17 print(&quot;age&quot;, age, type(age)) print() # variable of type float print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) score = 90.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) print(&quot;What is variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection?&quot;) print(&quot;What is different about the list output?&quot;) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;Bash&quot;] # *I added bash as a language* print(&quot;langs&quot;, langs, type(langs), &quot;length&quot;, len(langs)) print(&quot;- langs[3]&quot;, langs[3], type(langs[3])) # *I changed the index from 0 to 3 so that the print command will print Bash instead of Python* print() # variable of type dictionary (a group of keys and values) print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) print(&quot;What is different about the dictionary output?&quot;) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person), &quot;length&quot;, len(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . What is the variable name/key? value? type? primitive or collection, why? name Luke Riggins &lt;class &#39;str&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? age 17 &lt;class &#39;int&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? score 90.0 &lt;class &#39;float&#39;&gt; What is variable name/key? value? type? primitive or collection? What is different about the list output? langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;] &lt;class &#39;list&#39;&gt; length 4 - langs[3] Bash &lt;class &#39;str&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? What is different about the dictionary output? person {&#39;name&#39;: &#39;Luke Riggins&#39;, &#39;age&#39;: 17, &#39;score&#39;: 90.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;]} &lt;class &#39;dict&#39;&gt; length 4 - person[&#34;name&#34;] Luke Riggins &lt;class &#39;str&#39;&gt; . InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Ethan&quot;, &quot;LastName&quot;: &quot;Nyguen&quot;, &quot;DOB&quot;: &quot;October 3&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;EthanN45233@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Luke&quot;, &quot;LastName&quot;: &quot;Riggins&quot;, &quot;DOB&quot;: &quot;December 2&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;luker56233@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;Volkswagon Passat&quot;] }) # PUTTING MY INFORMATION (HACK!) InfoDb.append({ &quot;FirstName&quot;: &quot;Luke&quot;, &quot;LastName&quot;: &quot;Riggins&quot;, &quot;DOB&quot;: &quot;December 2&quot;, &quot;Residence&quot;: &quot;Rancho Bernardo&quot;, &quot;Email&quot;: &quot;luke120204@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;Toyota&quot;] }) # PUTTING MY PARTER&#39;S INFORMATION (HACK!) InfoDb.append({ &quot;FirstName&quot;: &quot;Jeffery&quot;, &quot;LastName&quot;: &quot;Lee&quot;, &quot;DOB&quot;: &quot;December 27&quot;, &quot;Residence&quot;: &quot;4S Ranch&quot;, &quot;Email&quot;: &quot;jefferyl56783@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;Honda Accord&quot;] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;Ethan&#39;, &#39;LastName&#39;: &#39;Nyguen&#39;, &#39;DOB&#39;: &#39;October 3&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;EthanN45233@stu.powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]}, {&#39;FirstName&#39;: &#39;Luke&#39;, &#39;LastName&#39;: &#39;Riggins&#39;, &#39;DOB&#39;: &#39;December 2&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;luker56233@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;Volkswagon Passat&#39;]}, {&#39;FirstName&#39;: &#39;Luke&#39;, &#39;LastName&#39;: &#39;Riggins&#39;, &#39;DOB&#39;: &#39;December 2&#39;, &#39;Residence&#39;: &#39;Rancho Bernardo&#39;, &#39;Email&#39;: &#39;luke120204@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Toyota&#39;]}, {&#39;FirstName&#39;: &#39;Jeffery&#39;, &#39;LastName&#39;: &#39;Lee&#39;, &#39;DOB&#39;: &#39;December 27&#39;, &#39;Residence&#39;: &#39;4S Ranch&#39;, &#39;Email&#39;: &#39;jefferyl56783@stu.powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;Honda Accord&#39;]}] . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Formatted output of List/Dictionary - for loop . Prepare a function to format the data . | Prepare a function to iterate through the list . | Activate your function . | . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Alternate Methods for iteration . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Recursion . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Creating a For Loop with Index . for indx, record in enumerate(InfoDb): print(&quot;Record #&quot; + str(indx+1) + &quot;: &quot;, end = &quot;&quot;) print_data(record) . Record #1: Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Record #2: Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Record #3: Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Record #4: Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Reverse Order . for record in reversed(InfoDb): print_data(record) . Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2023/03/21/Dcitionaries-Lists-and-Dictionaries.html",
            "relUrl": "/jupyter/2023/03/21/Dcitionaries-Lists-and-Dictionaries.html",
            "date": " • Mar 21, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "2.4 Notes",
            "content": "Notes 2.4 a. . Database and SQLAlchemy . In this blog we will explore using programs with data, focused on Databases. We will use SQLite Database to learn more about using Programs with Data. Use Debugging through these examples to examine Objects created in Code. . College Board talks about ideas like . Program Usage. “iterative and interactive way when processing information” Managing Data. “classifying data are part of the process in using programs”, “data files in a Table” Insight “insight and knowledge can be obtained from … digitally represented information” Filter systems. ‘tools for finding information and recognizing patterns” Application. “the preserve has two databases”, “an employee wants to count the number of book” PBL, Databases, Iterative/OOP . Iterative. Refers to a sequence of instructions or code being repeated until a specific end result is achieved OOP. A computer programming model that organizes software design around data, or objects, rather than functions and logic SQL. Structured Query Language, abbreviated as SQL, is a language used in programming, managing, and structuring data Imports and Flask Objects Defines and key object creations . Comment on where you have observed these working? Provide a defintion of purpose. Flask app object The flask object implements a WSGI application and acts as the central object. It is passed the name of the module or package of the application. Once it is created it will act as a central registry for the view functions, the URL rules, template configuration and much more. SQLAlchemy db object SQLAlchemy is a library that facilitates the communication between Python programs and databases. Most of the times, this library is used as an Object Relational Mapper (ORM) tool that translates Python classes to tables on relational databases and automatically converts function calls to SQL statements. . Initial Data Uses SQLALchemy db.create_all() to initialize rows into sqlite.db . Comment on how these work? Create All Tables from db Object db Object is organized in a structured manner. Create All tables creates the table. User Object Constructors User object constructors ensures model users are consistent and be used various of times. Try / Except This accounts for error. . Use of ORM Query object and custom methods to identify user to credentials uid and password . ORM = Object Relational Model - in SQLAlchemy, ORM on top of the python that works with databases. Comment on purpose of following User.query.filter_by Filters with the parameter, parameter is uid, so it filters by the username ids. user.password Checks to see if the password is correct, if yes, returns true, is not, returns false . Create a new User in table in Sqlite.db Uses SQLALchemy and custom user.create() method to add row. . Comment on purpose of following user.find_by_uid() and try/except User find by uid finds user by their usernames, checks through usernames until matches the same one input, if not, it passes or keeps going. user = User(…) This initializes the user object before date, getting the name, uid, and password first. user.dob and try/except Enter user’s date of birth, looks for one that matches with the try function, if not, goes to except with keeps going through all, if none can be found then it prints invalid date. user.create() and try/except Creates a new user for the data base, if try works the prints new user was created, except will happen if error occurred while creating new user. . Reading users table in sqlite.db Uses SQLALchemy query.all method to read data . Comment on purpose of following User.query.all This is extracting all users from database and turns them into JSON, the user query all queues all users to read them. json_ready assignment, google List Comprehension Believe that it comprehends each user reading it, then adding it to the list. . 2.4 b. . What is the purpose of identity Column in SQL database? . In SQL databases, an identity column is a special type of column that automatically generates unique numeric values for each row that is inserted into a table. The purpose of an identity column is to provide a unique identifier for each row in the table, without requiring the user to manually enter a value for that column. . What is the purpose of a primary key in SQL database? . In SQL databases, a primary key is a column or set of columns that uniquely identifies each row in a table. The purpose of a primary key is to ensure that each row in the table can be uniquely identified and retrieved, and that the data in the table is organized and structured in a consistent and efficient manner. . What are the Data Types in SQL table? . Some example types are booleans, blob, string, integer, and binary. . Reading Users table in Sqlite.db . What is a connection object? After you google it, what do you think it does? . A connection object is an object that represents a connection to a database or other data source. It is used to establish a connection between an application and a database, and to manage that connection throughout the lifetime of the application. . Same for cursor object? After reading what it is on Google, I believe that it process each row that are queued in the database, and thats how it reads it in order to display the results. Look at conn object and cursor object in VSCode debugger. What attributes are in the object? Attributes in conn are create, menu, read, schema, database, file, ipykernel, os, sqlite3 and sys. Attributes in cursor are conn, create, meny, read, schema, database, file, ipykernel, os, sqlite3, sys. . Is “results” an object? How do you know? . Results is an object because an object has functions and data, which is what is shown when we debug it and look at the results, there are special variables, function variables, etc. . Create a new User in table in Sqlite.db . Compore create() in both SQL lessons. What is better or worse in the two implementations? . The 2.4a lesson does create by has try and excepts for each one individually, while this one lists all the things being created then has the try and except functions after. Im not to sure what is better or worse, but I think that off of looks that this cell below seems better when trying to create a lot of things at once. . Explain purpose of SQL INSERT. Is this the same as User init? . The purpose fo SQL insert is to add new data into the database, I think it is because user init initializes the data meaning it assigns an initial value for a variable or data object. However I think init should be used to make the dataset then insert should be just strictly for adding new data in. . Updating a User in table in Sqlite.db . Uses SQL UPDATE to modify password . I think that hacked part helps towards encrypting the password so it is not as easily accessible. Explain try/except, when would except occur? . Try would happen when a user wants to reset or make new password, I think except would occur if the problem was not that no user id has been found or row for password was changed, bur not entirely sure exactly what the problem would be for this to happen. . What code seems to be repeated in each of these examples to point, why is it repeated? . It seems to be close cursor or connection, I think it is done so that it finishes processing, therefore results can be displayed. . Delete a User in table in Sqlite.db . Is DELETE a dangerous operation? Why? . It is not dangerous because deleting is part of the process of data if things are put incorrectly, and you can always input new data anyways. . In the print statemements, what is the “f” and what does {uid} do? . I think f find the userid, the bracket uid displays that certain uid found . Menu Interface to CRUD operations . Why does the menu repeat? . Menu repeats because it is the main thing that connects you to CRUD or S. . Could you refactor this menu? Make it work with a List? . I am not entirely sure, but it does sound possible. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2020/2023/03/21/2.4-Notes-for-A-and-B.html",
            "relUrl": "/week%2020/2023/03/21/2.4-Notes-for-A-and-B.html",
            "date": " • Mar 21, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "College Board Corrections 25Q",
            "content": ". . . Answer B is correct, filtering by photographer will remove any entries with unknown photographers. Filtering by year will remove any entries with unknown years. Sorting by year will sort the remaining entries in column C from least to greatest, putting the photograph with the lowest year value in the first row of the spreadsheet. D is correct which I did not put, sorting by year will sort the spreadsheet on column C from least to greatest. Filtering by year will remove any entries with unknown years. Filtering by photographer will remove any entries with unknown photographers. Since the order of the entries is not affected by the filters, the photograph with the lowest year value will be in the first row of the spreadsheet. I put C which is wrong, this sequence of steps does not remove any entries with an unknown year, so the entry in the first row of the spreadsheet will have a year value of -1. . Reflection . Overall, I did this test with one of my friends and we tried to work together to figure out the questions and this helped a lot and even allowed me to learn new concepts because my friend taught me some things I was unaware of and I did the same with him. This coding gave me new things to learn and incorporate into my code and overall I think taking this test helped a lot. The usage of programs is very useful with databases. They help to be able to efficiently go through and get the data required. I learned the definition of heuristic solutions, how to deal with repeats and loops, and many other coding things that I can use when I try to code myself. The test took a long time also but there are a lot of different coding topics and languages that helped me and though the help of others, and looking up some of the answers to understand how to do certain things, I was able to take a lot from this experience and learn. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2020/2023/03/20/college-board-corrections.html",
            "relUrl": "/week%2020/2023/03/20/college-board-corrections.html",
            "date": " • Mar 20, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "2.2 and 2.3 Notes and Qs",
            "content": "Notes 2.4 a. . Database and SQLAlchemy . In this blog we will explore using programs with data, focused on Databases. We will use SQLite Database to learn more about using Programs with Data. Use Debugging through these examples to examine Objects created in Code. . College Board talks about ideas like . Program Usage. “iterative and interactive way when processing information” Managing Data. “classifying data are part of the process in using programs”, “data files in a Table” Insight “insight and knowledge can be obtained from … digitally represented information” Filter systems. ‘tools for finding information and recognizing patterns” Application. “the preserve has two databases”, “an employee wants to count the number of book” PBL, Databases, Iterative/OOP . Iterative. Refers to a sequence of instructions or code being repeated until a specific end result is achieved OOP. A computer programming model that organizes software design around data, or objects, rather than functions and logic SQL. Structured Query Language, abbreviated as SQL, is a language used in programming, managing, and structuring data Imports and Flask Objects Defines and key object creations . Comment on where you have observed these working? Provide a defintion of purpose. Flask app object The flask object implements a WSGI application and acts as the central object. It is passed the name of the module or package of the application. Once it is created it will act as a central registry for the view functions, the URL rules, template configuration and much more. SQLAlchemy db object SQLAlchemy is a library that facilitates the communication between Python programs and databases. Most of the times, this library is used as an Object Relational Mapper (ORM) tool that translates Python classes to tables on relational databases and automatically converts function calls to SQL statements. . Initial Data Uses SQLALchemy db.create_all() to initialize rows into sqlite.db . Comment on how these work? Create All Tables from db Object db Object is organized in a structured manner. Create All tables creates the table. User Object Constructors User object constructors ensures model users are consistent and be used various of times. Try / Except This accounts for error. . Use of ORM Query object and custom methods to identify user to credentials uid and password . ORM = Object Relational Model - in SQLAlchemy, ORM on top of the python that works with databases. Comment on purpose of following User.query.filter_by Filters with the parameter, parameter is uid, so it filters by the username ids. user.password Checks to see if the password is correct, if yes, returns true, is not, returns false . Create a new User in table in Sqlite.db Uses SQLALchemy and custom user.create() method to add row. . Comment on purpose of following user.find_by_uid() and try/except User find by uid finds user by their usernames, checks through usernames until matches the same one input, if not, it passes or keeps going. user = User(…) This initializes the user object before date, getting the name, uid, and password first. user.dob and try/except Enter user’s date of birth, looks for one that matches with the try function, if not, goes to except with keeps going through all, if none can be found then it prints invalid date. user.create() and try/except Creates a new user for the data base, if try works the prints new user was created, except will happen if error occurred while creating new user. . Reading users table in sqlite.db Uses SQLALchemy query.all method to read data . Comment on purpose of following User.query.all This is extracting all users from database and turns them into JSON, the user query all queues all users to read them. json_ready assignment, google List Comprehension Believe that it comprehends each user reading it, then adding it to the list. . 2.4 b. . What is the purpose of identity Column in SQL database? . In SQL databases, an identity column is a special type of column that automatically generates unique numeric values for each row that is inserted into a table. The purpose of an identity column is to provide a unique identifier for each row in the table, without requiring the user to manually enter a value for that column. . What is the purpose of a primary key in SQL database? . In SQL databases, a primary key is a column or set of columns that uniquely identifies each row in a table. The purpose of a primary key is to ensure that each row in the table can be uniquely identified and retrieved, and that the data in the table is organized and structured in a consistent and efficient manner. . What are the Data Types in SQL table? . Some example types are booleans, blob, string, integer, and binary. . Reading Users table in Sqlite.db . What is a connection object? After you google it, what do you think it does? . A connection object is an object that represents a connection to a database or other data source. It is used to establish a connection between an application and a database, and to manage that connection throughout the lifetime of the application. . Same for cursor object? After reading what it is on Google, I believe that it process each row that are queued in the database, and thats how it reads it in order to display the results. Look at conn object and cursor object in VSCode debugger. What attributes are in the object? Attributes in conn are create, menu, read, schema, database, file, ipykernel, os, sqlite3 and sys. Attributes in cursor are conn, create, meny, read, schema, database, file, ipykernel, os, sqlite3, sys. . Is “results” an object? How do you know? . Results is an object because an object has functions and data, which is what is shown when we debug it and look at the results, there are special variables, function variables, etc. . Create a new User in table in Sqlite.db . Compore create() in both SQL lessons. What is better or worse in the two implementations? . The 2.4a lesson does create by has try and excepts for each one individually, while this one lists all the things being created then has the try and except functions after. Im not to sure what is better or worse, but I think that off of looks that this cell below seems better when trying to create a lot of things at once. . Explain purpose of SQL INSERT. Is this the same as User init? . The purpose fo SQL insert is to add new data into the database, I think it is because user init initializes the data meaning it assigns an initial value for a variable or data object. However I think init should be used to make the dataset then insert should be just strictly for adding new data in. . Updating a User in table in Sqlite.db . Uses SQL UPDATE to modify password . I think that hacked part helps towards encrypting the password so it is not as easily accessible. Explain try/except, when would except occur? . Try would happen when a user wants to reset or make new password, I think except would occur if the problem was not that no user id has been found or row for password was changed, bur not entirely sure exactly what the problem would be for this to happen. . What code seems to be repeated in each of these examples to point, why is it repeated? . It seems to be close cursor or connection, I think it is done so that it finishes processing, therefore results can be displayed. . Delete a User in table in Sqlite.db . Is DELETE a dangerous operation? Why? . It is not dangerous because deleting is part of the process of data if things are put incorrectly, and you can always input new data anyways. . In the print statemements, what is the “f” and what does {uid} do? . I think f find the userid, the bracket uid displays that certain uid found . Menu Interface to CRUD operations . Why does the menu repeat? . Menu repeats because it is the main thing that connects you to CRUD or S. . Could you refactor this menu? Make it work with a List? . I am not entirely sure, but it does sound possible. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2020/2023/03/20/2.4-a-and-b-Notes.html",
            "relUrl": "/week%2020/2023/03/20/2.4-a-and-b-Notes.html",
            "date": " • Mar 20, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "2.4 Hacks",
            "content": "import sqlite3 def create_connection(db): connection = None try: connection = sqlite3.connect(db) return connection except Error as e: print(e) return connection def create_table(connection, createTblSql): try: cursor = connection.cursor() cursor.execute(createTblSql) except Error as e: print(e) def main(): database = &#39;instance/basketball.db&#39; createTblSql = &quot;&quot;&quot; CREATE TABLE IF NOT EXISTS basketball ( _id integer PRIMARY KEY, _player text NOT NULL, _nationality text NOT NULL, _strengths text NOT NULL, _weaknesses text NOT NULL ); &quot;&quot;&quot; connection = create_connection(database) # create basketball table if connection is not None: create_table(connection, createTblSql) else: print(&#39;Connection Error&#39;) if __name__ == &#39;__main__&#39;: main() . Create . def create(): database = &#39;instance/basketball.db&#39; player = input(&quot;Enter the player name&quot;) nationality = input(&quot;Enter nationality&quot;) strengths = input(&quot;Enter player strengths&quot;) weaknesses = input(&quot;Enter your player weaknesses&quot;) # Connecting to the database, create cursor to execute the SQL command connection = sqlite3.connect(database) cursor = connection.cursor() try: # Execute SQL to insert record in to db cursor.execute(&quot;INSERT INTO basketball (_player, _nationality, _strengths, _weaknesses) VALUES (?, ?, ?, ?)&quot;, (player, nationality, strengths, weaknesses)) # Commit the changes connection.commit() print(f&quot;New basketball with {player} is added.&quot;) except sqlite3.Error as error: print(&quot;Error while inserting record&quot;, error) # Closing cursor and connection cursor.close() connection.close() create() . New basketball with Mugsy Bogues is added. . Read . def read(): database = &#39;instance/basketball.db&#39; # Connecting to the database, create cursor to execute the SQL command connection = sqlite3.connect(database) cursor = connection.cursor() # Fetch all the records from basketball table results = cursor.execute(&#39;SELECT * FROM basketball&#39;).fetchall() if len(results) != 0: for row in results: print(row) else: print(&quot;No basketball&quot;) # Closing cursor and connection cursor.close() connection.close() read() . (1, &#39;Lebron James&#39;, &#39;American&#39;, &#39;Clutch&#39;, &#39;Shooting&#39;) (2, &#39;Kevin Durant&#39;, &#39;American&#39;, &#39;Shooting&#39;, &#39;Strength&#39;) (3, &#39;Mugsy Bogues&#39;, &#39;American&#39;, &#39;Dunking&#39;, &#39;Short&#39;) . Update . import sqlite3 # updating review def update(): database = &#39;instance/basketball.db&#39; basketballId = input(&quot;Enter a basketball id to update the review&quot;) weaknesses = input(&quot;Enter new weakness&quot;) # Connecting to the database, create cursor to execute the SQL command connection = sqlite3.connect(database) cursor = connection.cursor() try: # Updating review for the basketball cursor.execute(&quot;UPDATE basketball SET _weaknesses = ? WHERE _id = ?&quot;, (weaknesses, basketballId)) if cursor.rowcount != 0: print(f&quot;Review for the basketball is updated to {weaknesses}&quot;) connection.commit() else: print(f&quot;basketball not found&quot;) except sqlite3.Error as error: print(&quot;Error occurred&quot;, error) # Closing cursor and connection cursor.close() connection.close() update() . Review for the basketball is updated to Shooting . Delete . import sqlite3 def delete(): database = &#39;instance/basketball.db&#39; basketballId = input(&quot;Enter basketball id to delete&quot;) # Connecting to the database, create cursor to execute the SQL command connection = sqlite3.connect(database) cursor = connection.cursor() try: cursor.execute(&quot;DELETE FROM basketball WHERE _id = ?&quot;, (basketballId,)) if cursor.rowcount == 0: print(f&quot;{basketballId} does not exist&quot;) else: print(f&quot;Successfully deleted player with id {basketballId}&quot;) connection.commit() except sqlite3.Error as error: print(&quot;Error occurred: &quot;, error) # Closing cursor and connection cursor.close() connection.close() delete() . Successfully deleted book with id 2 . Menu . def process(): endpoint = input(&quot;r for read, d for delete, u for update, c for create&quot;) if endpoint == &quot;r&quot;: with app.app_context(): table = User.query.all() json_ready = [user.read() for user in table] # &quot;List Comprehensions&quot;, for each user add user.read() to list return json_ready elif endpoint == &quot;d&quot;: delete() elif endpoint == &quot;u&quot;: update() elif endpoint == &quot;c&quot;: create() else: print(&#39;function not found&#39;) process() . New basketball with Nikola Jokic is added. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2023/03/20/2.4-Hacks.html",
            "relUrl": "/2023/03/20/2.4-Hacks.html",
            "date": " • Mar 20, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "Unit 2.4b Using Programs with Data - NBA Addition",
            "content": "Database Programming is Program with Data . Schema of Users table in Sqlite.db . Uses PRAGMA statement to read schema. . Describe Schema, here is resource Resource- What is a database schema? . What is the purpose of identity Column in SQL database? | What is the purpose of a primary key in SQL database? | What are the Data Types in SQL table? | . import sqlite3 database = &#39;instance/sqlite.db&#39; # this is location of database def schema(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Fetch results of Schema results = cursor.execute(&quot;PRAGMA table_info(&#39;users&#39;)&quot;).fetchall() # Print the results for row in results: print(row) # Close the database connection conn.close() schema() . Traceback (most recent call last): File &#34;_pydevd_bundle/pydevd_cython.pyx&#34;, line 1078, in _pydevd_bundle.pydevd_cython.PyDBFrame.trace_dispatch File &#34;_pydevd_bundle/pydevd_cython.pyx&#34;, line 297, in _pydevd_bundle.pydevd_cython.PyDBFrame.do_wait_suspend File &#34;/Users/lukeriggins/opt/anaconda3/lib/python3.9/site-packages/debugpy/_vendored/pydevd/pydevd.py&#34;, line 1976, in do_wait_suspend keep_suspended = self._do_wait_suspend(thread, frame, event, arg, suspend_type, from_this_thread, frames_tracker) File &#34;/Users/lukeriggins/opt/anaconda3/lib/python3.9/site-packages/debugpy/_vendored/pydevd/pydevd.py&#34;, line 2011, in _do_wait_suspend time.sleep(0.01) KeyboardInterrupt . KeyboardInterrupt Traceback (most recent call last) /var/folders/rb/cg1zlcqx3kd5jwkb_g7zw1980000gn/T/ipykernel_73546/27105271.py in &lt;module&gt; 21 conn.close() 22 &gt; 23 schema() /var/folders/rb/cg1zlcqx3kd5jwkb_g7zw1980000gn/T/ipykernel_73546/27105271.py in schema() 6 7 # Connect to the database file -&gt; 8 conn = sqlite3.connect(database) 9 10 # Create a cursor object to execute SQL queries /var/folders/rb/cg1zlcqx3kd5jwkb_g7zw1980000gn/T/ipykernel_73546/27105271.py in schema() 6 7 # Connect to the database file -&gt; 8 conn = sqlite3.connect(database) 9 10 # Create a cursor object to execute SQL queries _pydevd_bundle/pydevd_cython.pyx in _pydevd_bundle.pydevd_cython.SafeCallWrapper.__call__() _pydevd_bundle/pydevd_cython.pyx in _pydevd_bundle.pydevd_cython.PyDBFrame.trace_dispatch() _pydevd_bundle/pydevd_cython.pyx in _pydevd_bundle.pydevd_cython.PyDBFrame.trace_dispatch() _pydevd_bundle/pydevd_cython.pyx in _pydevd_bundle.pydevd_cython.PyDBFrame.trace_dispatch() _pydevd_bundle/pydevd_cython.pyx in _pydevd_bundle.pydevd_cython.PyDBFrame.do_wait_suspend() ~/opt/anaconda3/lib/python3.9/site-packages/debugpy/_vendored/pydevd/pydevd.py in do_wait_suspend(self, thread, frame, event, arg, exception_type) 1974 1975 with self._threads_suspended_single_notification.notify_thread_suspended(thread_id, stop_reason): -&gt; 1976 keep_suspended = self._do_wait_suspend(thread, frame, event, arg, suspend_type, from_this_thread, frames_tracker) 1977 1978 frames_list = None ~/opt/anaconda3/lib/python3.9/site-packages/debugpy/_vendored/pydevd/pydevd.py in _do_wait_suspend(self, thread, frame, event, arg, suspend_type, from_this_thread, frames_tracker) 2009 2010 self.process_internal_commands() -&gt; 2011 time.sleep(0.01) 2012 2013 self.cancel_async_evaluation(get_current_thread_id(thread), str(id(frame))) KeyboardInterrupt: . Reading Users table . import sqlite3 def read(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Execute a SELECT statement to retrieve data from a table results = cursor.execute(&#39;SELECT * FROM users&#39;).fetchall() # Print the results if len(results) == 0: print(&quot;Table is empty&quot;) else: for row in results: print(row) # Close the cursor and connection objects cursor.close() conn.close() read() . OperationalError Traceback (most recent call last) /var/folders/rb/cg1zlcqx3kd5jwkb_g7zw1980000gn/T/ipykernel_73546/3854437116.py in &lt;module&gt; 22 conn.close() 23 &gt; 24 read() /var/folders/rb/cg1zlcqx3kd5jwkb_g7zw1980000gn/T/ipykernel_73546/3854437116.py in read() 9 10 # Execute a SELECT statement to retrieve data from a table &gt; 11 results = cursor.execute(&#39;SELECT * FROM users&#39;).fetchall() 12 13 # Print the results OperationalError: no such table: users . Create a new User . import sqlite3 def create(): name = input(&quot;Enter your name:&quot;) uid = input(&quot;Enter your user id:&quot;) password = input(&quot;Enter your password&quot;) dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to insert data into a table cursor.execute(&quot;INSERT INTO users (_name, _uid, _password, _dob) VALUES (?, ?, ?, ?)&quot;, (name, uid, password, dob)) # Commit the changes to the database conn.commit() print(f&quot;A new user record {uid} has been created&quot;) except sqlite3.Error as error: print(&quot;Error while executing the INSERT:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #create() . Updating a User . import sqlite3 def update(): uid = input(&quot;Enter user id to update&quot;) password = input(&quot;Enter updated password&quot;) if len(password) &lt; 2: message = &quot;hacked&quot; password = &#39;gothackednewpassword123&#39; else: message = &quot;successfully updated&quot; # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to update data in a table cursor.execute(&quot;UPDATE users SET _password = ? WHERE _uid = ?&quot;, (password, uid)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: print(f&quot;The row with user id {uid} the password has been {message}&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the UPDATE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #update() . Delete a User in table in Sqlite.db . Uses a delete function to remove a user based on a user input of the id. . Is DELETE a dangerous operation? Why? | In the print statemements, what is the &quot;f&quot; and what does {uid} do? | . import sqlite3 def delete(): uid = input(&quot;Enter user id to delete&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: cursor.execute(&quot;DELETE FROM users WHERE _uid = ?&quot;, (uid,)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: # The uid was found in the table and the row was deleted print(f&quot;The row with uid {uid} was successfully deleted&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the DELETE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #delete() . Menu Interface to CRUD operations . CRUD and Schema interactions from one location by running menu. Observe input at the top of VSCode, observe output underneath code cell. . Why does the menu repeat? | Could you refactor this menu? Make it work with a List? | . def menu(): operation = input(&quot;Enter: (C)reate (R)ead (U)pdate or (D)elete or (S)chema&quot;) if operation.lower() == &#39;c&#39;: create() elif operation.lower() == &#39;r&#39;: read() elif operation.lower() == &#39;u&#39;: update() elif operation.lower() == &#39;d&#39;: delete() elif operation.lower() == &#39;s&#39;: schema() elif len(operation)==0: # Escape Key return else: print(&quot;Please enter c, r, u, or d&quot;) menu() # recursion, repeat menu try: menu() # start menu except: print(&quot;Perform Jupyter &#39;Run All&#39; prior to starting menu&quot;) .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2023/03/16/AP-unit2-4b.html",
            "relUrl": "/2023/03/16/AP-unit2-4b.html",
            "date": " • Mar 16, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "Unit 2.4a Using Programs with Data, SQLAlchemy",
            "content": "Database and SQLAlchemy . In this blog we will explore using programs with data, focused on Databases. We will use SQLite Database to learn more about using Programs with Data. Use Debugging through these examples to examine Objects created in Code. . College Board talks about ideas like . Program Usage. &quot;iterative and interactive way when processing information&quot; | Managing Data. &quot;classifying data are part of the process in using programs&quot;, &quot;data files in a Table&quot; | Insight &quot;insight and knowledge can be obtained from ... digitally represented information&quot; | Filter systems. &#39;tools for finding information and recognizing patterns&quot; | Application. &quot;the preserve has two databases&quot;, &quot;an employee wants to count the number of book&quot; | . | PBL, Databases, Iterative/OOP . Iterative. Refers to a sequence of instructions or code being repeated until a specific end result is achieved | OOP. A computer programming model that organizes software design around data, or objects, rather than functions and logic | SQL. Structured Query Language, abbreviated as SQL, is a language used in programming, managing, and structuring data | . | . Imports and Flask Objects . Defines and key object creations . Comment on where you have observed these working? Provide a defintion of purpose. Flask app object | SQLAlchemy db object | | . The Flask app object is a core component of the Flask web framework, which is a popular Python web framework for building web applications. The purpose of the Flask app object is to provide a central interface for configuring and managing a Flask application. It is responsible for handling requests, routing URLs to appropriate view functions, managing configuration settings, and handling errors. When you create a Flask application, you create an instance of the Flask class, which represents the application. This instance is stored in the app variable and is the primary way you interact with the application. You can use the app object to register routes, create views, configure settings, and manage the application&#39;s overall behavior. It is also used to start the application&#39;s web server, allowing it to receive and respond to incoming HTTP requests. Overall, the Flask app object provides a convenient and flexible way to build and manage web applications in Python. . | | &quot;&quot;&quot; These imports define the key objects &quot;&quot;&quot; from flask import Flask from flask_sqlalchemy import SQLAlchemy &quot;&quot;&quot; These object and definitions are used throughout the Jupyter Notebook. &quot;&quot;&quot; # Setup of key Flask object (app) app = Flask(__name__) # Setup SQLAlchemy object and properties for the database (db) database = &#39;sqlite:///basketball.db&#39; # path and filename of database app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy() # This belongs in place where it runs once per project db.init_app(app) . Model Definition . Define columns, initialization, and CRUD methods for users table in sqlite.db . Comment on these items in the class, purpose and defintion. class User | db.Model inheritance | init method | @property, @&lt;column&gt;.setter | create, read, update, delete methods | . | . &quot;&quot;&quot; database dependencies to support sqlite examples &quot;&quot;&quot; import datetime from datetime import datetime import json from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash &#39;&#39;&#39; Tutorial: https://www.sqlalchemy.org/library.html#tutorials, try to get into a Python shell and follow along &#39;&#39;&#39; # Define the User class to manage actions in the &#39;users&#39; table # -- Object Relational Mapping (ORM) is the key concept of SQLAlchemy # -- a.) db.Model is like an inner layer of the onion in ORM # -- b.) User represents data we want to store, something that is built on db.Model # -- c.) SQLAlchemy ORM is layer on top of SQLAlchemy Core, then SQLAlchemy engine, SQL class User(db.Model): __tablename__ = &#39;users&#39; # table name is plural, class name is singular # Define the User schema with &quot;vars&quot; from object id = db.Column(db.Integer, primary_key=True) _name = db.Column(db.String(255), unique=False, nullable=False) _uid = db.Column(db.String(255), unique=True, nullable=False) _password = db.Column(db.String(255), unique=False, nullable=False) _dob = db.Column(db.Date) # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password=&quot;123qwerty&quot;, dob=datetime.today()): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts uid from object @property def uid(self): return self._uid # a setter function, allows uid to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional method used for setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter against stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # dob property is returned as string, a string represents date outside object @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob setter, verifies date type before it is set or default to today @dob.setter def dob(self, dob): if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob # age is calculated field, age is returned according to date of birth @property def age(self): today = datetime.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) # output content using str(object) is in human readable form # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.read()) # CRUD create/add a new record to the table # returns self or None on error def create(self): try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read converts self to dictionary # returns dictionary def read(self): return { &quot;id&quot;: self.id, &quot;name&quot;: self.name, &quot;uid&quot;: self.uid, &quot;dob&quot;: self.dob, &quot;age&quot;: self.age, } # CRUD update: updates user name, password, phone # returns self def update(self, name=&quot;&quot;, uid=&quot;&quot;, password=&quot;&quot;): &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(name) &gt; 0: self.name = name if len(uid) &gt; 0: self.uid = uid if len(password) &gt; 0: self.set_password(password) db.session.commit() return self # CRUD delete: remove self # None def delete(self): db.session.delete(self) db.session.commit() return None . Initial Data . Uses SQLALchemy db.create_all() to initialize rows into sqlite.db . Comment on how these work? Create All Tables from db Object | User Object Constructors | Try / Except | | . &quot;&quot;&quot;Database Creation and Testing &quot;&quot;&quot; # Builds working data for testing def initUsers(): with app.app_context(): &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; db.create_all() &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, dob=datetime(1847, 2, 11)) u2 = User(name=&#39;Nikola Tesla&#39;, uid=&#39;niko&#39;, password=&#39;123niko&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;whit&#39;, password=&#39;123whit&#39;) u5 = User(name=&#39;Indiana Jones&#39;, uid=&#39;indi&#39;, dob=datetime(1920, 10, 21)) u6 = User(name=&#39;Marion Ravenwood&#39;, uid=&#39;raven&#39;, dob=datetime(1921, 10, 21)) users = [u1, u2, u3, u4, u5, u6] &quot;&quot;&quot;Builds sample user/note(s) data&quot;&quot;&quot; for user in users: try: &#39;&#39;&#39;add user to table&#39;&#39;&#39; object = user.create() print(f&quot;Created new uid {object.uid}&quot;) except: # error raised if object nit created &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; print(f&quot;Records exist uid {user.uid}, or error.&quot;) initUsers() . Check for given Credentials in users table in sqlite.db . Use of ORM Query object and custom methods to identify user to credentials uid and password . Comment on purpose of following User.query.filter_by | user.password | | . def find_by_uid(uid): with app.app_context(): user = User.query.filter_by(_uid=uid).first() return user # returns user object # Check credentials by finding user and verify password def check_credentials(uid, password): # query email and return user record user = find_by_uid(uid) if user == None: return False if (user.is_password(password)): return True return False #check_credentials(&quot;indi&quot;, &quot;123qwerty&quot;) . Create a new User in table in Sqlite.db . Uses SQLALchemy and custom user.create() method to add row. . Comment on purpose of following user.find_by_uid() and try/except | user = User(...) | user.dob and try/except | user.create() and try/except | | . def create(): # optimize user time to see if uid exists uid = input(&quot;Enter your user id:&quot;) user = find_by_uid(uid) try: print(&quot;Found n&quot;, user.read()) return except: pass # keep going # request value that ensure creating valid object name = input(&quot;Enter your name:&quot;) password = input(&quot;Enter your password&quot;) # Initialize User object before date user = User(name=name, uid=uid, password=password ) # create user.dob, fail with today as dob dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) try: user.dob = datetime.strptime(dob, &#39;%Y-%m-%d&#39;).date() except ValueError: user.dob = datetime.today() print(f&quot;Invalid date {dob} require YYYY-mm-dd, date defaulted to {user.dob}&quot;) # write object to database with app.app_context(): try: object = user.create() print(&quot;Created n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error uid {uid}&quot;) create() . Reading users table in sqlite.db . Uses SQLALchemy query.all method to read data . Comment on purpose of following User.query.all | json_ready assignment, google List Comprehension | | . # SQLAlchemy extracts all users from database, turns each user into JSON def read(): with app.app_context(): table = User.query.all() json_ready = [user.read() for user in table] # &quot;List Comprehensions&quot;, for each user add user.read() to list return json_ready read() . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | Change blog to your own database. | Add additional CRUD Add Update functionality to this blog. | Add Delete functionality to this blog. | . | .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2023/03/13/AP-unit2-4a.html",
            "relUrl": "/2023/03/13/AP-unit2-4a.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "2.2 and 2.3 Notes and Qs",
            "content": "Notes 2.2 . Files are shrunk in order to reduce the storage they take up and therefore make work faster | Lossy data shrinks data but is unable to recover the original data | Lossless data shrinks the data and is able to recover the original | It is important to be able to navigate through directories | We use various methods to go through directories on Windows and Mac 2.3 | Pandas and dataframes are things which people can use to create their careers | Pandas is python tool which lets us work with dataframes | Headers are usually metadata and the inner area is data(more essential) | It is important to clean data in order to analyze and use it | De Morgan’s Law: the complement of the product of all the terms is equal to the sum of the complement of each term | When using dataframes which are long, head refers to the front of the list and tail is the end of the list | Collegeboard Questions I completed all the collegeboard assignment and here is my reflection on the questions. I tried thinking of different applications of the knowledge. | . Data Compression Q1 . Q: Which of the following is an advantage of a lossless compression algorithm over a lossy compression algorithm? | A: A lossless compression algorithm can guarantee reconstruction of original data, while a lossy compression algorithm cannot. | This means that the lossless compression algorithm will be able to save all the data of a file, while a lossy compression algorithm will maintain mostly the essential information. | This can be applied to how a lossy compression algorithm can be used to reduce files to the smallest size possible and lossless compression algorithms can be used to maintain the same data of a file even after compression. Q2 | Q: A user wants to save a data file on an online storage site. The user wants to reduce the size of the file, if possible, and wants to be able to completely restore the file to its original version. Which of the following actions best supports the user’s needs? | A: Compressing the file using a lossless compression algorithm before uploading it | A lossless algorithm allows the original file to be restored, which may be the reason of the name of lossless | A lossless algorithm can help maintain information of a file but help cut down on file size. This could be used for important things like word processing or database records. Q3 | Q: A programmer is developing software for a social media platform. The programmer is planning to use compression when users send attachments to other users. Which of the following is a true statement about the use of compression? | A: Lossy compression of an image file generally provides a greater reduction in transmission time than lossless compression does. Lossy compression will reduce the image file to have only the minimum data necessary, but a lossless compression will be able to restore all data. So, it makes sense for lossy images to be able to transmit faster. | A lossy compressed image will be used when a lot of files need to be stored and something needs to be reduced to the minimum. Reflection | Lossy and lossless compression are very important to understand. They both have different implications for a file. They also have different pros and cons for files. Being able to understand when to use the different types of compressions will be important as a developer in order to create quality algorithms which fit my overall purpose well. | . Extracting Information from Data . Q1 . Q: Upon compiling the data, the researcher identifies a problem due to the fact that neither data source uses a unique ID number for each student. Which of the following best describes the problem caused by the lack of unique ID numbers? | A: Students who have the same name may be confused with each other. | Since both datasets had first name and last name, but no unique identification, it would be possible to confuse two students for the same person. | This shows how important it is to have distinct characteristics for each piece of data. Using ID numbers can help solve this problem. Q2 | Q: A team of researchers wants to create a program to analyze the amount of pollution reported in roughly 3,000 counties across the United States. The program is intended to combine county data sets and then process the data. Which of the following is most likely to be a challenge in creating the program? | A: Different counties may organize data in different ways. | Not all areas would have the same way of ordering and organizing data, so there could be different forms of data sets. | This is why data cleaning is important for data collectors, in order to make all the data in the same style so that programs will be able to easily run on them. Q3 | Q: A student is creating a Web site that is intended to display information about a city based on a city name that a user enters in a text field. Which of the following are likely to be challenges associated with processing city names that users might provide as input? | A: Users might enter abbreviations for the names of cities.; Users might misspell the name of the city. | There are many types of errors which can arise when taking in user input. So, it is important to have checks in order to make sure that there is no garbage which will be able to get into the data set. | Implementing checks will be able to ensure that the user gets the best experience. Q4 | Q: Which of the following additional pieces of information would be most useful in determining the artist with the greatest attendance during a particular month? | A: Average ticket price | Given that the total dollar amount of all tickets sold is given, dividing that number by average ticket price would give a good estimate of the amount of tickets which are sold. Q5 | Q: A camera mounted on the dashboard of a car captures an image of the view from the driver’s seat every second. Each image is stored as data. Along with each image, the camera also captures and stores the car’s speed, the date and time, and the car’s GPS location as metadata. Which of the following can best be determined using only the data and none of the metadata? | A: The number of bicycles the car passed on a particular day | The dashboard of the car will be able to tell how much distance is traveled, the time, or the speed. These can all be estimated, but will never be accurate. However, the number of bicycles passed will be able to be compiled from the photos, thus making this the correct answer. | This shows how some important things like metadata may not be able to be accessed from the direct photo, but from metadata, while other things can only be found in the photo. Thus, it is important to be able to identify where to get the data from. Q6 | Q: Which of the following questions about the students who responded to the survey can the teacher answer by analyzing the survey results? Do students who enjoy the subject material tend to spend more time on homework each night than the other students do? Do students who spend more time on homework each night tend to spend less time studying for tests than the other students do? Do students who spend more time studying for tests tend to earn higher grades in the class than the other students do? | A: I and II | The last question can’t be answered because the data set does not include a way to reference the answers to a student, since it is anonymous. So, the third question can’t be answered. | It is important to be able to tell what type of data is stored in a data set to ensure there are efficient programs being used. | . Reflection These questions showed me the multiple ways that data can be received. They also show the importance of being able to go through databases and get the data which you want. This is essential to creating the algorithms which you want, because you want to be able to understand what the data you have can and can’t do. . Using Programs Q1 . Q: For a given row in the spreadsheet, suppose genre contains the genre as a string, num contains the number of copies in stock as a number, and cost contains the cost as a number. Which of the following expressions will evaluate to true if the book should be counted and evaluates to false otherwise? | A: (genre = “mystery”) AND ((1 ≤ num) AND (cost &lt; 10.00)) | This makes sure that all the necessary requirements are met through AND conditionals/ Q2 | Q: Using only the data collected during the 7-day period, which of the following statements is true? | A: The total number of items purchased on a given date can be determined by searching the data for all transactions that occurred on the given date and then adding the number of items purchased for each matching transaction. | This is the only answer choice which uses data from the given dataset, so it is the only correct answer. Q3 | Q: A new rechargeable battery pack is available for products that use AA batteries. Which of the following best explains how the data files in the table can be used to send a targeted e-mail to only those customers who have purchased products that use AA batteries to let them know about the new accessory? | A: Use the products file to generate a list of product IDs that use AA batteries, then use the list of product IDs to search the purchases file to generate a list of customer IDs, then use the list of customer IDs to search the customers file to generate a list of e-mail addresses | This answer specifically finds customers who have purchased products using AA batteries and emails them. This is important to a efficient algorithm which helps both the business and the consumers. Q4 | Q: Which of the following sequences of steps can be used to identify the desired entry? | A: Filter by photographer, then filter by year, then sort by year; Sort by year, then filter by year, then filter by photographer | These both make sure that the picture selected is of a confirmed photographer and year. This ensures all requirements are met. Q5 | Q: For a given row in the spreadsheet, suppose genre contains the genre as a string and day contains the day as a string. Which of the following expressions will evaluate to true if the show should be counted and evaluates to false otherwise? | A: (genre = “talk”) AND ((day = “Saturday”) OR (day = “Sunday”)) | This answer uses both AND and OR to meet the required conditions. This is important because one has to happen and one is either or. Q6 -Q: Which of the following explains how the two databases can be used to develop the interactive exhibit? | A: Both databases are needed. Each database can be searched by animal name to find all information to be displayed. | Each database has part of the information needed, but not all of it, so they need to be combined in order to help the interactive exhibit work. | . Reflection The usage of programs is very useful with databases. They help to be able to efficiently go through and get the data required. However, it is also essential to write good code which meets the requirements. It is also necessary to have a good understanding of the information the database can give you, in order to make sure you can get the most out of your code with good accuracy. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2020/2023/03/13/2.2-and2.3-Notes.html",
            "relUrl": "/week%2020/2023/03/13/2.2-and2.3-Notes.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "Unit 2.3 Extracting Information from Data, Pandas",
            "content": "Files To Get . Save this file to your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/2023-03-09-AP-unit2-3.ipynb . Save these files into a subfolder named files in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/data.csv . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/grade.json . Save this image into a subfolder named images in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/images/table_dataframe.png . Pandas and DataFrames . In this lesson we will be exploring data analysis using Pandas. . College Board talks about ideas like Tools. &quot;the ability to process data depends on users capabilities and their tools&quot; | Combining Data. &quot;combine county data sets&quot; | Status on Data&quot;determining the artist with the greatest attendance during a particular month&quot; | Data poses challenge. &quot;the need to clean data&quot;, &quot;incomplete data&quot; | . | . From Pandas Overview -- When working with tabular data, such as data stored in spreadsheets or databases, pandas is the right tool for you. pandas will help you to explore, clean, and process your data. In pandas, a data table is called a DataFrame. | . from PIL import Image dfimage = Image.open(&quot;../_notebooks/files/table_dataframe.png&quot;) display(dfimage) . &#39;&#39;&#39;Pandas is used to gather data sets through its DataFrames implementation&#39;&#39;&#39; import pandas as pd . Cleaning Data . When looking at a data set, check to see what data needs to be cleaned. Examples include: . Missing Data Points | Invalid Data | Inaccurate Data | . Run the following code to see what needs to be cleaned . df = pd.read_json(&#39;files/grade.json&#39;) print(df) # What part of the data set needs to be cleaned? # The data which needs to be cleaned are the ones which are inconsistent(ex. words for grades, no student ids) # From PBL learning, what is a good time to clean data? Hint, remember Garbage in, Garbage out? # A good time to clean would be when we are getting the data in. So, we could remove the garbage when getting data from the dataframe. . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 2 578 12 2.78 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 6 145 12 2.95 7 167 10 3.90 8 235 9th Grade 3.15 9 nil 9 2.80 10 469 11 3.45 11 456 10 2.75 . Extracting Info . Take a look at some features that the Pandas library has that extracts info from the dataset . DataFrame Extract Column . print(df[[&#39;GPA&#39;]]) print() #try two columns and remove the index from print statement print(df[[&#39;Student ID&#39;,&#39;GPA&#39;]].to_string(index=False)) . GPA 0 3.57 1 4.00 2 2.78 3 3.45 4 4.75 5 3.33 6 2.95 7 3.90 8 3.15 9 2.80 10 3.45 11 2.75 Student ID GPA 123 3.57 246 4.00 578 2.78 469 3.45 324 4.75 313 3.33 145 2.95 167 3.90 235 3.15 nil 2.80 469 3.45 456 2.75 . DataFrame Sort . print(df.sort_values(by=[&#39;GPA&#39;])) print() #sort the values in reverse order print(df.sort_values(by=[&#39;GPA&#39;], ascending=False)) . Student ID Year in School GPA 11 456 10 2.75 2 578 12 2.78 9 nil 9 2.80 6 145 12 2.95 8 235 9th Grade 3.15 5 313 20 3.33 3 469 11 3.45 10 469 11 3.45 0 123 12 3.57 7 167 10 3.90 1 246 10 4.00 4 324 Junior 4.75 Student ID Year in School GPA 4 324 Junior 4.75 1 246 10 4.00 7 167 10 3.90 0 123 12 3.57 3 469 11 3.45 10 469 11 3.45 5 313 20 3.33 8 235 9th Grade 3.15 6 145 12 2.95 9 nil 9 2.80 2 578 12 2.78 11 456 10 2.75 . DataFrame Selection or Filter . print(df[df.GPA &gt; 3.00]) . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 7 167 10 3.90 8 235 9th Grade 3.15 10 469 11 3.45 . DataFrame Selection Max and Min . print(df[df.GPA == df.GPA.max()]) print() print(df[df.GPA == df.GPA.min()]) . Student ID Year in School GPA 4 324 Junior 4.75 Student ID Year in School GPA 11 456 10 2.75 . Create your own DataFrame . Using Pandas allows you to create your own DataFrame in Python. . Python Dictionary to Pandas DataFrame . import pandas as pd #the data can be stored as a python dictionary dict = { &quot;calories&quot;: [420, 380, 390], &quot;duration&quot;: [50, 40, 45] } #stores the data in a data frame print(&quot;-Dict_to_DF&quot;) df = pd.DataFrame(dict) print(df) print(&quot;-Dict_to_DF_labels--&quot;) #or with the index argument, you can label rows. df = pd.DataFrame(dict, index = [&quot;day1&quot;, &quot;day2&quot;, &quot;day3&quot;]) print(df) . -Dict_to_DF calories duration 0 420 50 1 380 40 2 390 45 -Dict_to_DF_labels-- calories duration day1 420 50 day2 380 40 day3 390 45 . Examine DataFrame Rows . print(&quot;-Examine Selected Rows&quot;) #use a list for multiple labels: print(df.loc[[&quot;day1&quot;, &quot;day3&quot;]]) #refer to the row index: print(&quot;--Examine Single Row--&quot;) print(df.loc[&quot;day1&quot;]) . -Examine Selected Rows calories duration day1 420 50 day3 390 45 --Examine Single Row-- calories 420 duration 50 Name: day1, dtype: int64 . Pandas DataFrame Information . print(df.info()) . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; Index: 3 entries, day1 to day3 Data columns (total 2 columns): # Column Non-Null Count Dtype -- -- 0 calories 3 non-null int64 1 duration 3 non-null int64 dtypes: int64(2) memory usage: 180.0+ bytes None . Example of larger data set . Pandas can read CSV and many other types of files, run the following code to see more features with a larger data set . import pandas as pd #read csv and sort &#39;Duration&#39; largest to smallest df = pd.read_csv(&#39;files/data.csv&#39;).sort_values(by=[&#39;Duration&#39;], ascending=False) print(&quot;--Duration Top 10&quot;) print(df.head(10)) print(&quot;--Duration Bottom 10&quot;) print(df.tail(10)) . --Duration Top 10 Duration Pulse Maxpulse Calories 69 300 108 143 1500.2 79 270 100 131 1729.0 109 210 137 184 1860.4 60 210 108 160 1376.0 106 180 90 120 800.3 90 180 101 127 600.1 65 180 90 130 800.4 61 160 110 137 1034.4 62 160 109 135 853.0 67 150 107 130 816.0 --Duration Bottom 10 Duration Pulse Maxpulse Calories 68 20 106 136 110.4 100 20 95 112 77.7 89 20 83 107 50.3 135 20 136 156 189.0 94 20 150 171 127.4 95 20 151 168 229.4 139 20 141 162 222.4 64 20 110 130 131.4 112 15 124 139 124.2 93 15 80 100 50.5 . APIs are a Source for Writing Programs with Data . 3rd Party APIs are a great source for creating Pandas Data Frames. . Data can be fetched and resulting json can be placed into a Data Frame | Observe output, this looks very similar to a Database | . &#39;&#39;&#39;Pandas can be used to analyze data&#39;&#39;&#39; import pandas as pd import requests def fetch(): &#39;&#39;&#39;Obtain data from an endpoint&#39;&#39;&#39; url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot; fetch = requests.get(url) json = fetch.json() # filter data for requirement df = pd.DataFrame(json[&#39;countries_stat&#39;]) # filter endpoint for country stats print(df.loc[0:5, &#39;country_name&#39;:&#39;deaths&#39;]) # show row 0 through 5 and columns country_name through deaths fetch() . country_name cases deaths 0 USA 82,649,779 1,018,316 1 India 43,057,545 522,193 2 Brazil 30,345,654 662,663 3 France 28,244,977 145,020 4 Germany 24,109,433 134,624 5 UK 21,933,206 173,352 . Hacks . Early Seed award . Add this Blog to you own Blogging site. | Have all lecture files saved to your files directory before Tech Talk starts. Have data.csv open in vscode. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In blog add College Board practice problems for 2.3. | . The next 4 weeks, Teachers want you to improve your understanding of data. Look at the blog and others on Unit 2. Your intention is to find some things to differentiate your individual College Board project. . Create or Find your own dataset. The suggestion is to use a JSON file, integrating with your PBL project would be Fambulous. | . When choosing a data set, think about the following:- Does it have a good sample size? - Is there bias in the data? - Does the data set need to be cleaned? - What is the purpose of the data set? - ... . Continue this Blog using Pandas extract info from that dataset (ex. max, min, mean, median, mode, etc.) | . Hack Helpers . Here is how Mort started on this assignment by asking ChatGPT ... Regarding Python Pandas, what are some data sets that would be good for learning Pandas? . There are many data sets that are suitable for learning pandas, depending on your interests and the skills you want to develop. Here are some suggestions:- Titanic Dataset: This is a classic dataset for data analysis and machine learning, and is often used as an introduction to pandas. The dataset contains information about passengers on the Titanic, including their demographics, ticket class, and survival status. . Iris Dataset: This is another classic dataset that is often used in machine learning and data analysis courses. The dataset contains information about iris flowers, including their sepal length, sepal width, petal length, and petal width. . | NBA Player Stats: This dataset contains information about NBA players, including their stats for various games, their positions, and their salaries. It is a great dataset for learning how to clean and manipulate data using pandas. . | Housing Prices Dataset: This dataset contains information about housing prices in a particular city or region, including variables such as the number of bedrooms, square footage, and price. It is a great dataset for learning how to manipulate and analyze numerical data using pandas. . | COVID-19 Dataset: This dataset contains information about the COVID-19 pandemic, including the number of cases, deaths, and recoveries in various countries and regions. It is a great dataset for learning how to manipulate and analyze time-series data using pandas. . | World Bank Dataset: This dataset contains information about economic indicators from various countries, such as GDP, population, and poverty rates. It is a great dataset for learning how to manipulate and analyze large datasets using pandas. . | . | These are just a few examples of the many datasets that are suitable for learning pandas. The best dataset for you will depend on your interests and the specific skills you want to develop. . Follow up question, &quot;where can I find Titanic data set?&quot; . | The Titanic dataset is a popular dataset for data analysis and machine learning, and it can be found on various websites and data repositories. Here are a few places where you can find the Titanic dataset:- Kaggle: The Titanic dataset is available on Kaggle, which is a popular platform for data scientists and machine learning enthusiasts. You can download the dataset from the Kaggle website after creating an account. . UCI Machine Learning Repository: The Titanic dataset is also available on the UCI Machine Learning Repository, which is a collection of datasets that are commonly used for machine learning research. You can download the dataset from the UCI Machine Learning Repository website. . | Seaborn library: If you have the Seaborn library installed in your Python environment, you can load the Titanic dataset directly from the library using the following code: . import seaborn as sns titanic_data = sns.load_dataset(&#39;titanic&#39;) . | . | . Titanic Data . Look at a sample of data. . import seaborn as sns # Load the titanic dataset titanic_data = sns.load_dataset(&#39;titanic&#39;) print(&quot;Titanic Data&quot;) print(titanic_data.columns) # titanic data set print(titanic_data[[&#39;survived&#39;,&#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;class&#39;, &#39;fare&#39;, &#39;embark_town&#39;]]) # look at selected columns . Use Pandas to clean the data. Most analysis, like Machine Learning or even Pandas in general like data to be in standardized format. This is called &#39;Training&#39; or &#39;Cleaning&#39; data. . # Preprocess the data from sklearn.preprocessing import OneHotEncoder td = titanic_data td.drop([&#39;alive&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;class&#39;, &#39;embark_town&#39;, &#39;deck&#39;], axis=1, inplace=True) td.dropna(inplace=True) td[&#39;sex&#39;] = td[&#39;sex&#39;].apply(lambda x: 1 if x == &#39;male&#39; else 0) td[&#39;alone&#39;] = td[&#39;alone&#39;].apply(lambda x: 1 if x == True else 0) # Encode categorical variables enc = OneHotEncoder(handle_unknown=&#39;ignore&#39;) enc.fit(td[[&#39;embarked&#39;]]) onehot = enc.transform(td[[&#39;embarked&#39;]]).toarray() cols = [&#39;embarked_&#39; + val for val in enc.categories_[0]] td[cols] = pd.DataFrame(onehot) td.drop([&#39;embarked&#39;], axis=1, inplace=True) td.dropna(inplace=True) print(td) . The result of &#39;Training&#39; data is making it easier to analyze or make conclusions. In looking at the Titanic, as you clean you would probably want to make assumptions on likely chance of survival. . This would involve analyzing various factors (such as age, gender, class, etc.) that may have affected a person&#39;s chances of survival, and using that information to make predictions about whether an individual would have survived or not. . Data description:- Survival - Survival (0 = No; 1 = Yes). Not included in test.csv file. - Pclass - Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd) . Name - Name | Sex - Sex | Age - Age | Sibsp - Number of Siblings/Spouses Aboard | Parch - Number of Parents/Children Aboard | Ticket - Ticket Number | Fare - Passenger Fare | Cabin - Cabin | Embarked - Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton) | . | Perished Mean/Average . | . print(titanic_data.query(&quot;survived == 0&quot;).mean()) . Survived Mean/Average | . print(td.query(&quot;survived == 1&quot;).mean()) . Survived Max and Min Stats . print(td.query(&quot;survived == 1&quot;).max()) print(td.query(&quot;survived == 1&quot;).min()) . Machine Learning . From Tutorials Point%20is,a%20consistence%20interface%20in%20Python). Scikit-learn (Sklearn) is the most useful and robust library for machine learning in Python. It provides a selection of efficient tools for machine learning and statistical modeling including classification, regression, clustering and dimensionality reduction via a consistence interface in Python.&gt; Description from ChatGPT. The Titanic dataset is a popular dataset for data analysis and machine learning. In the context of machine learning, accuracy refers to the percentage of correctly classified instances in a set of predictions. In this case, the testing data is a subset of the original Titanic dataset that the decision tree model has not seen during training......After training the decision tree model on the training data, we can evaluate its performance on the testing data by making predictions on the testing data and comparing them to the actual outcomes. The accuracy of the decision tree classifier on the testing data tells us how well the model generalizes to new data that it hasn&#39;t seen before......For example, if the accuracy of the decision tree classifier on the testing data is 0.8 (or 80%), this means that 80% of the predictions made by the model on the testing data were correct....Chance of survival could be done using various machine learning techniques, including decision trees, logistic regression, or support vector machines, among others. . Code Below prepares data for further analysis and provides an Accuracy. IMO, you would insert a new passenger and predict survival. Datasets could be used on various factors like prediction if a player will hit a Home Run, or a Stock will go up or down. Decision Trees, prediction by a piecewise constant approximation. - Logistic Regression, the probabilities describing the possible outcomes. | . | . from sklearn.model_selection import train_test_split from sklearn.tree import DecisionTreeClassifier from sklearn.linear_model import LogisticRegression from sklearn.metrics import accuracy_score # Split arrays or matrices into random train and test subsets. X = td.drop(&#39;survived&#39;, axis=1) y = td[&#39;survived&#39;] X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42) # Train a decision tree classifier dt = DecisionTreeClassifier() dt.fit(X_train, y_train) # Test the model y_pred = dt.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;DecisionTreeClassifier Accuracy:&#39;, accuracy) # Train a logistic regression model logreg = LogisticRegression() logreg.fit(X_train, y_train) # Test the model y_pred = logreg.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;LogisticRegression Accuracy:&#39;, accuracy) . My Hacks . Testing Pandas by myself . I have decided to use a csv file to get my data. This csv file has data from the top streamed songs on Spotify. . Spotify contains many songs of many different genres, so this provides a very large sample size. | There is not bias in data for the top streamed songs in the data, since this is numerical data. However, this does not represent the most popular songs of all time because songs released when Spotify was an app are more likely to be streamed on Spotify, rather than older songs. | The data set is maintained by a user on kaggle, so there does not need to be cleaning. | The purpose of this data set is to track the top streamed songs on Spotify. | . import pandas as pd streamdf = pd.read_csv(&#39;files/streams.csv&#39;) # using csv file for top streamed spotify songs topsong = streamdf.iloc[0] streams = streamdf[&quot;Streams (Billions)&quot;] meanstreams = streams.mean() topstreams = streamdf[streamdf[&quot;Streams (Billions)&quot;] &gt; 2.5] print(&quot;The top streamed song on Spotify is:&quot;) print(topsong) print(&quot; Break &quot;) print(&quot;The mean number of streams(in billions) of songs on this database:&quot;) print(meanstreams) print(&quot; Break &quot;) print(&quot;The songs with over 2.5 billion streams are:&quot;) print(topstreams) . The top streamed song on Spotify is: Song Blinding Lights Artist The Weeknd Streams (Billions) 3.449 Release Date 29-Nov-19 Name: 0, dtype: object Break The mean number of streams of songs on this database: 1.895999999999999 Break The songs with over 2.5 billion streams are: Song Artist Streams (Billions) 0 Blinding Lights The Weeknd 3.449 1 Shape of You Ed Sheeran 3.398 2 Dance Monkey Tones And I 2.770 3 Someone You Loved Lewis Capaldi 2.680 4 Rockstar Post Malone featuring 21 Savage 2.620 5 Sunflower Post Malone and Swae Lee 2.575 6 One Dance Drake featuring Wizkid and Kyla 2.556 Release Date 0 29-Nov-19 1 06-Jan-17 2 10-May-19 3 08-Nov-18 4 15-Sep-17 5 18-Oct-18 6 05-Apr-16 . Working with others . Adi and Alex decided to use the tips dataframe, so I decided to work with them. We first imported the dataframe and figured out the columns of the database. . import seaborn as sns # Load the titanic dataset tips_data = sns.load_dataset(&#39;tips&#39;) print(&quot;Tips Data&quot;) print(tips_data.columns) # titanic data set fr print(tips_data.head()) . Tips Data Index([&#39;total_bill&#39;, &#39;tip&#39;, &#39;sex&#39;, &#39;smoker&#39;, &#39;day&#39;, &#39;time&#39;, &#39;size&#39;], dtype=&#39;object&#39;) total_bill tip sex smoker day time size 0 16.99 1.01 Female No Sun Dinner 2 1 10.34 1.66 Male No Sun Dinner 3 2 21.01 3.50 Male No Sun Dinner 3 3 23.68 3.31 Male No Sun Dinner 2 4 24.59 3.61 Female No Sun Dinner 4 . Then, we decided to change some of the properties inside the dataframe and add new columns. . from sklearn.preprocessing import OneHotEncoder td = tips_data td[&#39;sex&#39;] = td[&#39;sex&#39;].apply(lambda x: 1 if x == &#39;Male&#39; else 0) td[&#39;time&#39;] = td[&#39;time&#39;].apply(lambda x: 1 if x == &#39;Dinner&#39; else 0) td[&#39;percentage&#39;] = (td[&#39;tip&#39;]/td[&#39;total_bill&#39;]) * 100 print(td.head()) . total_bill tip sex smoker day time size percentage 0 16.99 1.01 0 No Sun 0 2 5.944673 1 10.34 1.66 0 No Sun 0 3 16.054159 2 21.01 3.50 0 No Sun 0 3 16.658734 3 23.68 3.31 0 No Sun 0 2 13.978041 4 24.59 3.61 0 No Sun 0 4 14.680765 . We also used sklearn to create a plot and a linear regression line of the total bill vs the percentage tip given. Based on this, there appears to be a decreasing trend between cost of meal and the percentage of tip given. I learned that there are many ways to use dataframe data and they can help complete many tasks, from simple data storage to complex analysis. . from sklearn.linear_model import LinearRegression import matplotlib.pyplot as plt df = pd.DataFrame(td) model = LinearRegression() # fit the model to the data model.fit(df[[&#39;total_bill&#39;]], df[[&#39;percentage&#39;]]) # predict the y values using the model y_pred = model.predict(df[[&#39;total_bill&#39;]]) # plot the data and the regression line plt.scatter(df[&#39;total_bill&#39;], df[&#39;percentage&#39;]) plt.plot(df[&#39;total_bill&#39;], y_pred, color=&#39;red&#39;) plt.show() . import pandas as pd #read csv and sort &#39;Duration&#39; largest to smallest df = pd.read_csv(&#39;files/nba.csv&#39;).sort_values(by=[&#39;Name&#39;], ascending=False) print(&quot;--Name Top 10&quot;) print(df.head(10)) print(&quot;--Name Bottom 10&quot;) print(df.tail(10)) . --Name Top 10 Name Team Number Position Age 237 Zaza Pachulia Dallas Mavericks 27.0 C 32.0 271 Zach Randolph Memphis Grizzlies 50.0 PF 34.0 402 Zach LaVine Minnesota Timberwolves 8.0 PG 21.0 270 Xavier Munford Memphis Grizzlies 14.0 PG 24.0 386 Wilson Chandler Denver Nuggets 21.0 SF 29.0 25 Willie Reed Brooklyn Nets 33.0 PF 26.0 141 Willie Cauley-Stein Sacramento Kings 0.0 C 22.0 385 Will Barton Denver Nuggets 5.0 SF 25.0 233 Wesley Matthews Dallas Mavericks 23.0 SG 29.0 97 Wesley Johnson Los Angeles Clippers 33.0 SF 28.0 Height Weight College Salary 237 6-11 275.0 NaN 5200000.0 271 6-9 260.0 Michigan State 9638555.0 402 6-5 189.0 UCLA 2148360.0 270 6-3 180.0 Rhode Island NaN 386 6-8 225.0 DePaul 10449438.0 25 6-10 220.0 Saint Louis 947276.0 141 7-0 240.0 Kentucky 3398280.0 385 6-6 175.0 Memphis 3533333.0 233 6-5 220.0 Marquette 16407500.0 97 6-7 215.0 Syracuse 1100602.0 --Name Bottom 10 Name Team Number Position Age Height 135 Alan Williams Phoenix Suns 15.0 C 23.0 6-8 368 Alan Anderson Washington Wizards 6.0 SG 33.0 6-6 428 Al-Farouq Aminu Portland Trail Blazers 8.0 SF 25.0 6-9 330 Al Jefferson Charlotte Hornets 25.0 C 31.0 6-10 312 Al Horford Atlanta Hawks 15.0 C 30.0 6-10 404 Adreian Payne Minnesota Timberwolves 33.0 PF 25.0 6-10 328 Aaron Harrison Charlotte Hornets 9.0 SG 21.0 6-6 356 Aaron Gordon Orlando Magic 0.0 PF 20.0 6-9 152 Aaron Brooks Chicago Bulls 0.0 PG 31.0 6-0 457 NaN NaN NaN NaN NaN NaN Weight College Salary 135 260.0 UC Santa Barbara 83397.0 368 220.0 Michigan State 4000000.0 428 215.0 Wake Forest 8042895.0 330 289.0 NaN 13500000.0 312 245.0 Florida 12000000.0 404 237.0 Michigan State 1938840.0 328 210.0 Kentucky 525093.0 356 220.0 Arizona 4171680.0 152 161.0 Oregon 2250000.0 457 NaN NaN NaN .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/python/2023/03/09/AP-unit2-3.html",
            "relUrl": "/python/2023/03/09/AP-unit2-3.html",
            "date": " • Mar 9, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "College board Unit 2 corrections",
            "content": "Test Corrections for Unit 2 Test . . I put option C which is incorrect. In the simulation, the variable flip_counter represents the number of times a coin was flipped. When flip_counter equals 2, only two coins have been flipped. This information does not lead to knowledge about the result of the simulation. Option D is correct. It is because there are 4 trials in the simulation, and the goal is to determine if there were an equal number of head and tails, or, in other words, 2 heads. In Step 2, heads_counter is incremented when coin_flip represents heads. The simulation will result in an equal number of heads and tails if heads_counter = 2. . . I put option C thinking that there would be an actual number that show up but since it was not defined when to stop, the number count would still infinitley go up and therefore there would be no number displayed because it is an infinite loop. . . . I put option D and this option is incorrect. Only one number should display. Option A is correct. The initial value of count is 1, which is less than 5. The variable count is incremented to 2, then 3, then 4, then 5. At this point the condition count &lt; 5 is false, and the algorithm displays the value 5. . . I put answer D, This option is incorrect. The value of the variable j starts at 1 and increases by 2. If is replaced with the expression j &gt; 7, the expression will evaluate to true when j is 9 and the loop will end. Option A is correct. Because the value of the variable j starts at 1 and increases by 2, the value of j will always be odd. Thus the value of j will never equal 6. If is replaced with the expression j = 6, the expression will always evaluate to false, and the loop will never end. . . . I put answer C, this option is correct. After one iteration of the Repeat 2 times loop, the robot will end up in the upper-right square facing to the left. After the second iteration of the Repeat 2 times loop, the robot will end up in the upper-left square facing down. The robot has finished in the gray square. The other option I put was D, this option is incorrect. After completing the inner Repeat 2 times loop, the robot will be in the center square of the grid facing down. Since this loop is nested inside another Repeat 2 times loop, these commands are executed again. At the end of execution, the robot will be in the same position at which it started. . . I put A, this option is incorrect. In program II, the value of i starts at n and finishes at 1, so that result stores the sum of n + (n - 1) + … + 3 + 2 + 1. This is the same as 1 + 2 + 3 + … + n. The answer C is correct. In program I, the value of i starts at 1 and finishes at n, so that result stores the sum of 1 + 2 + 3 + … + n. In program II the value of i starts at n and finishes at 1, so that result stores the sum of n + ( n - 1 ) + … + 3 + 2 + 1. Both programs display the correct sum. . . I put answer A which is wrong. A was: When the problem can be solved in a reasonable time and an approximate solution is acceptable. The correct answer was C which is: When the problem cannot be solved in a reasonable time and an approximate solution is acceptable. This makes sense because a heuristic solution cannot be determined if not a lot of time is allotted to do so getting an approximation is better then doing it incorrect. . Reflection . Overall, I did this test with one of my friends and we tried to work together to figure out the questions and this helped a lot and even allowed me to learn new concepts because my friend taught me some things I was unaware of and I did the same with him. This coding gave me new things to learn and incorporate into my code and overall I think taking this test helped a lot. I learned the definition of heuristic solutions, how to deal with repeats and loops, and many other coding things that I can use when I try to code myself. The test took a long time also but there are a lot of different coding topics and languages that helped me and though the help of others, and looking up some of the answers to understand how to do certain things, I was able to take a lot from this experience and learn. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2025/2023/03/08/College-Board-Unit-Test-2.html",
            "relUrl": "/week%2025/2023/03/08/College-Board-Unit-Test-2.html",
            "date": " • Mar 8, 2023"
        }
        
    
  
    
        ,"post12": {
            "title": "Unit 2.2 Data Compression, Images",
            "content": "Enumerate &quot;Data&quot; Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner ... . &quot;Data compression is the reduction of the number of bits needed to represent data&quot; | &quot;Data compression is used to save transmission time and storage space.&quot; | &quot;lossy data can reduce data but the original data is not recovered&quot; | &quot;lossless data lets you restore and recover&quot; | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. - Clouds Impression . Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression ... . File Type, PNG and JPG are two types used in this lab: Not every file type is compatible for the same type of resizing, compression, etc. For instance, a jpg and png file may not use the same type of compression method. | Size, height and width, number of pixels: When managing image files, the height, width, and size can be adjusted when compressing. Later on in my hacks, we can see how I reduced the height and width of an original jpg file by 4x. | Visual perception, lossy compression: Lossy compression is when the file size of an image is compressed, and the visual perception experience of the image deteriorates; for instance, an image&#39;s quality becomes more fuzzy and less clear. | . Python Libraries and Concepts used for Jupyter and Files/Directories . Introduction to displaying images in Jupyter notebook . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS&#39;s), pathlib is a solution to this problem. . What are commands you use in terminal to access files? I do not have too much experience with Windows because I have only used MacBooks. However, after some research, I learned that dir and cd are some commands which can be used with Windows to access files. | What are the command you use in Windows terminal to access files? I do not have too much experience with Windows because I have only used MacBooks. However, after some research, I learned that dir and cd are some commands which can be used with Windows to access files. | What are some of the major differences? Windows uses c:&quot;file path&quot; in order to find the file path, while Mac usually uses /. Additionally, Windows uses , while Linux and Mac use /. The letter in front of the file path generally represents the hard drive which the file is stored on. Provide what you observed, struggled with, or leaned while playing with this code. | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images? Path is a big deal when working with images because it is important to have the right path or else the computer will not know which file or folder to access. | How does the meta data source and label relate to Unit 5 topics? | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? IPython seems interesting because it allows Python to have a lot of capability. For example, IPython allows us to have an interactive shell which we can use for images. from IPython.display import Image, display | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image green_square = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}]) image_display(green_square) # display default images from image_data() default_images = image_data() image_display(default_images) . Reading and Encoding Images (2 implementations follow) . PIL (Python Image Library) . Pillow or PIL provides the ability to work with images in Python. Geeks for Geeks shows some ideas on working with images. . base64 . Image formats (JPG, PNG) are often called *Binary File formats, it is difficult to pass these over HTTP. Thus, base64 converts binary encoded data (8-bit, ASCII/Unicode) into a text encoded scheme (24 bits, 6-bit Base64 digits). Thus base64 is used to transport and embed binary images into textual assets such as HTML and CSS.- How is Base64 similar or different to Binary and Hexadecimal?: Base64 is similar to binary and hex, since it is an encoding format which can convert a normal string/number into a series of encoded characters. It is different from binary and hexadecimal in the base that it uses. Base64 uses base 64 (0-63), while binary uses base 2 (0-1) and hexadecimal uses base 16 (0-9 and A-F). . Translate first 3 letters of your name to Base64.: Var --&gt; VmFy My name in Base64 is THVrZQ | . numpy . Numpy is described as &quot;The fundamental package for scientific computing with Python&quot;. In the Image Lab, a Numpy array is created from the image data in order to simplify access and change to the RGB values of the pixels, converting pixels to grey scale. . io, BytesIO . Input and Output (I/O) is a fundamental of all Computer Programming. Input/output (I/O) buffering is a technique used to optimize I/O operations. In large quantities of data, how many frames of input the server currently has queued is the buffer. In this example, there is a very large picture that lags. . Where have you been a consumer of buffering?:I have been a consumer of buffering on sites like YouTube and news sites with many ads. I have always been a consumer of buffering when I have a lot of tabs open.- From your consumer experience, what effects have you experienced from buffering? When my computer has buffering, things take time to load and my computer runs slowly. This is bad for the user because it makes them frustrated and less likely to use a website. | How do these effects apply to images?: When I have buffering, images don&#39;t load up instantly, which can make the website look confusing and bad for the user. | . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed?:This code looks like a series of steps are being performed to take the image, convert it to base64, and then turn it into grey scale. | Describe Grey Scale algorithm in English or Pseudo code?: The steps are that program loads up all the images. Then, the values of the pixels are averaged up to get a grey scale representation and then a new image is recreated based on the new averages. | Describe scale image? What is before and after on pixels in three images?: What is before and after on pixels in three images? Scale image allows the images to be resized. Before the pixels are their normal size, but now they are averaged up to be able to compress the images. | . Is scale image a type of compression? If so, line it up with College Board terms described?:If so, line it up with College Board terms described? Scaling an image is lossy compression. The quality of the file is reduced but the file size is also compressed. | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;../images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_grey(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;gray_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;gray_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;gray_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) def image_management_add_html_red(image): img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;red_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ scaler = 255 - (pixel[0]) average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;red_data&#39;].append((scaler, average, average, pixel[3])) # PNG format else: image[&#39;red_data&#39;].append((scaler, average, average)) # end for loop for pixels img.putdata(image[&#39;red_data&#39;]) image[&#39;html_red&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) def image_management_add_html_blue(image): img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;blue_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ scaler = 255 - (pixel[1]) average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;blue_data&#39;].append((average, scaler, average, pixel[3])) # PNG format else: image[&#39;blue_data&#39;].append((average, scaler, average)) # end for loop for pixels img.putdata(image[&#39;blue_data&#39;]) image[&#39;html_blue&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) def image_management_add_html_green(image): img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;green_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ scaler = 255 - (pixel[2]) average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;green_data&#39;].append((average, average, scaler, pixel[3])) # PNG format else: image[&#39;green_data&#39;].append((average, average, scaler)) # end for loop for pixels img.putdata(image[&#39;green_data&#39;]) image[&#39;html_green&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; grey image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) print(&quot; red scale image &quot;) image_management_add_html_red(image) display(HTML(image[&#39;html_red&#39;])) print(&quot; blue scale image &quot;) image_management_add_html_green(image) display(HTML(image[&#39;html_green&#39;])) print(&quot; green scale image &quot;) image_management_add_html_blue(image) display(HTML(image[&#39;html_blue&#39;])) print() . ModuleNotFoundError Traceback (most recent call last) Cell In[3], line 3 1 from IPython.display import HTML, display 2 from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f -&gt; 3 from PIL import Image as pilImage # as pilImage is used to avoid conflicts 4 from io import BytesIO 5 import base64 ModuleNotFoundError: No module named &#39;PIL&#39; . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these ... . PIL:Stands for Python Imaging Library, and it adds many capabilities for processing different types of images. It is an open-source library, and it is often used to manipulate imported image properties.- numpy: This is another type of library that allows for the processing of mathematical functions in programs. | base64: This is an encoding algorithm representing binary data as text. | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average, average, average, pixel[3])) # PNG format else: grey_data.append((average, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print() . - meta data -- Green Square Internet green-square-16.png PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- scaled image -- . grey image . - meta data -- Clouds Impression Peter Carolin clouds-impression.png PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- scaled image -- . grey image . - meta data -- Lassen Volcano Peter Carolin lassen-volcano.jpg JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- scaled image -- . grey image . . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | . Programming Paradigm . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_red(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;red_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;red_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;red_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;red_data&#39;]) image[&#39;html_red&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;-- red image --&quot;) display(HTML(image[&#39;html&#39;])) print() . -- red image -- . .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2023/03/07/Unit-2.2.html",
            "relUrl": "/2023/03/07/Unit-2.2.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post13": {
            "title": "Unit 2.2 Data Compression, Images",
            "content": "Enumerate &quot;Data&quot; Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner ... . &quot;Data compression is the reduction of the number of bits needed to represent data&quot; | &quot;Data compression is used to save transmission time and storage space.&quot; | &quot;lossy data can reduce data but the original data is not recovered&quot; | &quot;lossless data lets you restore and recover&quot; | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. . Clouds Impression | Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression ... . File Type, PNG and JPG are two types used in this lab | Size, height and width, number of pixels | Visual perception, lossy compression | . Displaying images in Python Jupyter notebook . Python Libraries and Concepts used for Jupyter and Files/Directories . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS&#39;s), pathlib is a solution to this problem. . What are commands you use in terminal to access files? | What are the command you use in Windows terminal to access files? | What are some of the major differences? | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images? | How does the meta data source and label relate to Unit 5 topics? | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image green_square = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}]) image_display(green_square) # display default images from image_data() default_images = image_data() image_display(default_images) . Reading and Encoding Images (2 implementations follow) . PIL (Python Image Library) . Pillow or PIL provides the ability to work with images in Python. Geeks for Geeks shows some ideas on working with images. . base64 . Image formats (JPG, PNG) are often called *Binary File formats, it is difficult to pass these over HTTP. Thus, base64 converts binary encoded data (8-bit, ASCII/Unicode) into a text encoded scheme (24 bits, 6-bit Base64 digits). Thus base64 is used to transport and embed binary images into textual assets such as HTML and CSS.- How is Base64 similar or different to Binary and Hexadecimal? . Translate first 3 letters of your name to Base64. | . numpy . Numpy is described as &quot;The fundamental package for scientific computing with Python&quot;. In the Image Lab, a Numpy array is created from the image data in order to simplify access and change to the RGB values of the pixels, converting pixels to grey scale. . io, BytesIO . Input and Output (I/O) is a fundamental of all Computer Programming. Input/output (I/O) buffering is a technique used to optimize I/O operations. In large quantities of data, how many frames of input the server currently has queued is the buffer. In this example, there is a very large picture that lags. . Where have you been a consumer of buffering? | From your consumer experience, what effects have you experienced from buffering? | How do these effects apply to images? | . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed? | Describe Grey Scale algorithm in English or Pseudo code? | Describe scale image? What is before and after on pixels in three images? | Is scale image a type of compression? If so, line it up with College Board terms described? | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_grey(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;gray_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;gray_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;gray_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; grey image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) print() . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these ... . PIL | numpy | base64 | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average, average, average, pixel[3])) # PNG format else: grey_data.append((average, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print() . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2023/03/07/AP-unit2-2.html",
            "relUrl": "/2023/03/07/AP-unit2-2.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post14": {
            "title": "NATM2",
            "content": ". Night at the Museum . . One of the first things I noticed when walking into the ceramics room was the Orange octopus because of how skillfully crafted it was. As someone who has done ceramics in the past, I recognize how hard it is to produce small pieces that connect together because it is super easy for them to break apart. Another thing I liked about the octopus is the coloring od it because the orange and dark orange makes the photo look very cool. Last thing I want to praise in this photo is tat the octopus tenticals are all the ame length and width which is very hard to maintain. . . I also liked looking at Jefferys website. It was very well made because the frontend as well as the features he put in where very cool. When imputing things into the searchbar, actual results, although not fully working, displayed which shows the connection of an API which I can respect a lot because I personally tried to do that and was unsuccessful. . . I like the photo of Ben Lee going up for a basket when looking in the photo room because it perfectly shows the sport in action. I like the contrasting colors between te black and red torrey pines team and the white and blue of the Del Norte jersey colors. Another thing I liked is how the only orange in the photo is the basketball so my eye was drawn to the ball which seems to be the focal point of the image. There is also leading like in the photo from the lines on the court to the lines of the flag pointing downward. . reflection In all honesty Night at the Museum did not go that well for us because we came unprepared and willing to take a massive L. This was 100 percent our fault, all we had was a quiz made in the front end and nothing else. We showed a few people and all they could do was laugh. we should it to Mr.Yeung and he was dissapointed but I understood why. As a result we worked very hard to have a finished product by the end of break. Natm was a wake up call. Besides my experience personally the event was very cool because the ceramic was very ornate and well put together. The photos looked legit and taken by actual pros. One photo not depicted here was a photo of a flower which seems boring but the detail was breath taking and insane. The code i saw was lowkey dissapointing because most people did not have everything complete also. It gave us hope to keep working. Other Photos I took while there: .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2020/2023/02/27/Night-At-The-M-2.html",
            "relUrl": "/week%2020/2023/02/27/Night-At-The-M-2.html",
            "date": " • Feb 27, 2023"
        }
        
    
  
    
        ,"post15": {
            "title": "NATM2",
            "content": ". Night at the Museum . . One of the first things I noticed when walking into the ceramics room was the Orange octopus because of how skillfully crafted it was. As someone who has done ceramics in the past, I recognize how hard it is to produce small pieces that connect together because it is super easy for them to break apart. Another thing I liked about the octopus is the coloring od it because the orange and dark orange makes the photo look very cool. Last thing I want to praise in this photo is tat the octopus tenticals are all the ame length and width which is very hard to maintain. . . I also liked looking at Jefferys website. It was very well made because the frontend as well as the features he put in where very cool. When imputing things into the searchbar, actual results, although not fully working, displayed which shows the connection of an API which I can respect a lot because I personally tried to do that and was unsuccessful. . . I like the photo of Ben Lee going up for a basket when looking in the photo room because it perfectly shows the sport in action. I like the contrasting colors between te black and red torrey pines team and the white and blue of the Del Norte jersey colors. Another thing I liked is how the only orange in the photo is the basketball so my eye was drawn to the ball which seems to be the focal point of the image. There is also leading like in the photo from the lines on the court to the lines of the flag pointing downward. . Other Photos I took while there: .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2020/2023/02/27/NATM2.html",
            "relUrl": "/week%2020/2023/02/27/NATM2.html",
            "date": " • Feb 27, 2023"
        }
        
    
  
    
        ,"post16": {
            "title": "Playing around with Java Script",
            "content": "Math.round(93.5); . 94 . const removeDuplicates = (arr) =&gt; [...new Set(arr)] removeDuplicates([31, 56, 12, 31, 45, 12, 31]) //[ 31, 56, 12, 45 ] . [ 31, 56, 12, 45 ] . const dayDif = (date1, date2) =&gt; Math.ceil(Math.abs(date1.getTime() - date2.getTime()) / 86400000) dayDif(new Date(&quot;2022-09-30&quot;), new Date(&quot;2022-10-13&quot;)) . 13 .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2023/02/26/Playing-around-Java-Script-copy.html",
            "relUrl": "/jupyter/2023/02/26/Playing-around-Java-Script-copy.html",
            "date": " • Feb 26, 2023"
        }
        
    
  
    
        ,"post17": {
            "title": "Vocab and Agile Notes",
            "content": "",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2023/02/26/NATM.html",
            "relUrl": "/2023/02/26/NATM.html",
            "date": " • Feb 26, 2023"
        }
        
    
  
    
        ,"post18": {
            "title": "Python Lists and Dictionaries",
            "content": "print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) name = &quot;Luke Riggins&quot; print(&quot;name&quot;, name, type(name)) print() # variable of type integer print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) age = 17 print(&quot;age&quot;, age, type(age)) print() # variable of type float print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) score = 90.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) print(&quot;What is variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection?&quot;) print(&quot;What is different about the list output?&quot;) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;Bash&quot;] # *I added bash as a language* print(&quot;langs&quot;, langs, type(langs), &quot;length&quot;, len(langs)) print(&quot;- langs[3]&quot;, langs[3], type(langs[3])) # *I changed the index from 0 to 3 so that the print command will print Bash instead of Python* print() # variable of type dictionary (a group of keys and values) print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) print(&quot;What is different about the dictionary output?&quot;) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person), &quot;length&quot;, len(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . What is the variable name/key? value? type? primitive or collection, why? name Luke Riggins &lt;class &#39;str&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? age 17 &lt;class &#39;int&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? score 90.0 &lt;class &#39;float&#39;&gt; What is variable name/key? value? type? primitive or collection? What is different about the list output? langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;] &lt;class &#39;list&#39;&gt; length 4 - langs[3] Bash &lt;class &#39;str&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? What is different about the dictionary output? person {&#39;name&#39;: &#39;Luke Riggins&#39;, &#39;age&#39;: 17, &#39;score&#39;: 90.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;]} &lt;class &#39;dict&#39;&gt; length 4 - person[&#34;name&#34;] Luke Riggins &lt;class &#39;str&#39;&gt; . InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Ethan&quot;, &quot;LastName&quot;: &quot;Nyguen&quot;, &quot;DOB&quot;: &quot;October 3&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;EthanN45233@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Luke&quot;, &quot;LastName&quot;: &quot;Riggins&quot;, &quot;DOB&quot;: &quot;December 2&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;luker56233@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;Volkswagon Passat&quot;] }) # PUTTING MY INFORMATION (HACK!) InfoDb.append({ &quot;FirstName&quot;: &quot;Luke&quot;, &quot;LastName&quot;: &quot;Riggins&quot;, &quot;DOB&quot;: &quot;December 2&quot;, &quot;Residence&quot;: &quot;Rancho Bernardo&quot;, &quot;Email&quot;: &quot;luke120204@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;Toyota&quot;] }) # PUTTING MY PARTER&#39;S INFORMATION (HACK!) InfoDb.append({ &quot;FirstName&quot;: &quot;Jeffery&quot;, &quot;LastName&quot;: &quot;Lee&quot;, &quot;DOB&quot;: &quot;December 27&quot;, &quot;Residence&quot;: &quot;4S Ranch&quot;, &quot;Email&quot;: &quot;jefferyl56783@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;Honda Accord&quot;] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;Ethan&#39;, &#39;LastName&#39;: &#39;Nyguen&#39;, &#39;DOB&#39;: &#39;October 3&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;EthanN45233@stu.powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]}, {&#39;FirstName&#39;: &#39;Luke&#39;, &#39;LastName&#39;: &#39;Riggins&#39;, &#39;DOB&#39;: &#39;December 2&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;luker56233@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;Volkswagon Passat&#39;]}, {&#39;FirstName&#39;: &#39;Luke&#39;, &#39;LastName&#39;: &#39;Riggins&#39;, &#39;DOB&#39;: &#39;December 2&#39;, &#39;Residence&#39;: &#39;Rancho Bernardo&#39;, &#39;Email&#39;: &#39;luke120204@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Toyota&#39;]}, {&#39;FirstName&#39;: &#39;Jeffery&#39;, &#39;LastName&#39;: &#39;Lee&#39;, &#39;DOB&#39;: &#39;December 27&#39;, &#39;Residence&#39;: &#39;4S Ranch&#39;, &#39;Email&#39;: &#39;jefferyl56783@stu.powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;Honda Accord&#39;]}] . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Formatted output of List/Dictionary - for loop . Prepare a function to format the data . | Prepare a function to iterate through the list . | Activate your function . | . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Alternate Methods for iteration . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Recursion . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Creating a For Loop with Index . for indx, record in enumerate(InfoDb): print(&quot;Record #&quot; + str(indx+1) + &quot;: &quot;, end = &quot;&quot;) print_data(record) . Record #1: Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Record #2: Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Record #3: Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Record #4: Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Reverse Order . for record in reversed(InfoDb): print_data(record) . Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2023/02/26/Dcitionaries-Lists-and-Dictionaries.html",
            "relUrl": "/jupyter/2023/02/26/Dcitionaries-Lists-and-Dictionaries.html",
            "date": " • Feb 26, 2023"
        }
        
    
  
    
        ,"post19": {
            "title": "Unit 5 Stuff",
            "content": "5.4 Crowdsourcing . A crowdsourcing idea which I have is by having a form to be able take in consumer input on my Create Performance Task site. This would be able to be requested by anyone on Del Norte and they would answer questions about how they like my program and what could be done to improve it. I would do this because I would be able to get a lot of information about how to better meet the needs of the consumer. This will allow me to see viewpoints I did not see and have an overall better functioning program. | In CSP, with a wide variety of students in the class, we are lucky to be able to have lots of different viewpoints. This will help us develop code which is more accommodating of all people. A crowdsourcing idea which I have for CSP is creating an open source code repository for people to edit. This can be a copy of my own repository, and with the advice of many students, I will be able to see different ways to make my code more efficient. I could initiate this by advertising this during class or on Slack in order to be able to communicate with other students to inform them of the open source code. | At Night at the Museum, it would probably be best to supply a form which will allow people to provide their input on my program. I will have a form link at the end of my higher or lower game in order to get user input. I would probably asked for the rating of the game and also add comments or features which they believe they could improve the program. I could create a graph representing the rating of my program and also make outlines and potentially change my code to incorporate the user input into my program. | . 5.5 Legal and Ethical Concerns . Licenses are guidelines for distribution and usage of code | They help to give the author credit and help to keep things confidential | The GitHub repository must be public | Creative Commons Zero v1.0 Universal: Waives copyright interest | Allows to be accessed on public domain | Open Source MIT License: The usage of code is not restricted | Allows closed source projects to be distributed | Authors will be able to get credit. However, this could just mean a - simple name mention | Allows for GitHub repository to be private | GPL License: Almost any freedom with project, except distributing closed source versions | Are important for businesses and people to be able to get their money | They can be bad when ignored | Copyright ensures that people can own the work they produce | Can be good when people try to claim they own someone else’s work | an be bad when the owner constantly restricts usage of their work, even if it is not the main focus(ex. taking profit from creator using their work as background music) | Sites which “pirate” copyrighted things can be good and bad | Technically illegal under licensing rules, but give greater access to items which can educate people | Does not give creators credit | Can be on sketchy sites which perpetrate scams | Personal Fastpages: GPL License | People can see the project freely | Frontend/Backend of CPT Project: Open Source MIT License | People can use our project as an inspiration for projects they take upon | We would like to be cited for our work | Allows more freedom with what people want to do with our things | . 5.6 Safe Computing . Symmetric Encryption: When a single key is used to encrypt and decrypt data | Asymmetric encryption: When one key is used to encrypt data and another one is used to decrypt the data | One example of how we use encryption through AWS is how our repositories use SSH keys. These allow us to encrypt data for our repositiories. | I have seen lots of PII used in GitHub projects. I have seen examples of people using names, phone numbers, emails, and usernames for projects. | Good passwords are ones which are long and have a variety of symbols, numbers, and letters(upper and lowercase). Bad passwords are simple and reused. To authenticate passwords, websites can have checks on passwords to meet certain length and complexity requirements. Additionally, users may be able to download a program which tells them if one of their passwords is too similar to another one. | I think PII is important for being able to see information about a specific person. Everyone has their own information which makes them unique, like their awards and special hobbies and these can be shared online on a place like LinkedIn to further careers. Things like phone numbers and addresses are also available, but if they are in the wrong hands, they can be detrimental to people. Things like SSNs and bank numbers should not be in the hands of other people because they are very important to our lives. | Phishing schemes which I have learned about the hard way are ones where they slightly change the link of a website to look like they are the regular website, but are actually not. Other potential ways of phishing could be emails where someone impersonates a company or person or phone calls. It is important to pay attention to the details to determine if a call, email, or website is a scam. | .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2020/2023/02/13/5.4-to-5.6-Notes.html",
            "relUrl": "/week%2020/2023/02/13/5.4-to-5.6-Notes.html",
            "date": " • Feb 13, 2023"
        }
        
    
  
    
        ,"post20": {
            "title": "Unit 5 Stuff",
            "content": "5.1 . Main Idea Every invention whether it’s in computer science or something else, has its benefits and its downsides/ disruptions . Ex: Chat GPT . Chat GPT helps people create assignments just by running through it redfines the necessity and purpose of search engines | However, it discourages critical thinking | Also, Chat GPT is full of bias because there is only one answer and other answers are not considered | . Dopamine and its Benefits and Negatives . Dopamine is another example of something that has borth positive and negative effects . Rosner was a professional gamer who was an example of this. He was celebrated as a World of Warcraft builder and he got lots of dopamine from his success. However, this dopamine was although exciting, it was also detrimental for Rosner. He reported that his grades started tanking and found other healthier activities such as going to the gym and watching films. | Thus, there were both benefits and harmful effects to Dopamine | . Phone Trees . Phone Trees are another example where despite a reduction in need for employees, the process of getting the customer to where they want was time consuming and inconvenient (harmful effect) . Blog Post Reflection Most developers try to aim for positive effects. However, not every effect of a computing innovation is anticipated in advance. Some effects are harmful. For example, inventors of television, computers, mobile devices, and social media did not intend to unleash a slew of negative consequences for children. . shortened attention spans | lack of connection to nature | cyber bullying and hate groups | spread of misingormation and fake news The intention was to produce a convenient and modern form of entertainment which in some ways, these fields achieve their goals. | . Dopamine Issues are definetely real and I have experienced these issues myself. Sometimes, I can get caught up watching videos or scrolling through social media because of that instant dopamine effect which definetely prevented me from doing homework and affecting my academics. However, some forms of dopamine can definetely be beneficial.Finishing a project you worked long and hard on or helping others can serve as sources of dopamine that aren’t necessarily bad. . 5.2 . Digital Divide is the difference in access to technology. Deals with “To Have and Have Not” in relation to computers, internet, or technology in general. . Some people may have no access to the internet or have worn down computers | prevents students from being digitally equipped and being able to learn and perform | Comparatively, Del Norte High School has access to digital software and internet | Digital Divide between Del Norte and other schools | . Contributing factors to divide are socioeconomic, geographic, and demographic . In San Digeo, there is a regional divide marked by the interstate 8 | Some Religious groups like the amish choose not to use technology | . In education equity requires school to provide materials like computers and chromebooks. . However, there is still a digital divide in the way chromebooks a are hard for coding and have restrictions on them that prevent installation of coding platforms such as vscode | . Blog Post Reflection - Digital Empowerment . One can empower themselves in the digital world by using the resources they have to do the best in their field. A student may have a lack of resources but should still use free chromebooks, school internet, etc. to get their work done. Also, empowerment can be made if more,better resources can be provided. If everone had access to internet and functional computers, computation would be much more equal. | Someone that is empowered can help someone who is not empowered by sharing access to resources or donating unneeded materials. Someone who needs to create a physics project could greatly benefit from plastic, cardboard, scissors, tubes, etc. even if someone does not need them. | I believe red tape is the hindrance to digital empowerment because certain rules are unnecessary and prevent people from critically thinkng/ exploring. Website regulations, download regulations all affect a student’s learning. | . Reflection . Questions From Canvas This project can have many beneficial impacts . Help Educate people about sports | Help me learn to code | Allow people to keep up to date with their favorite teams if they do not have time | Entertaining for users to look through | . Potential Harms: . Can lead to people spending to much time | Could lead to people sports betting | the website could provide incorrect statistics | . Pros of Internet Blocker: . To help ensure that students go on school friendly sites | Helps students pay attention during school by blocking certain sites and social medias Cons of Internet Blockers: | Websites that are useful are not able to be used | Many Computer Science sites are not available because they haven’t been verified | Makes it harder for students to be able to study everything at school | . Due to the Digital Divide it can be harder for people without access to technology to be able to have access to the newest advancements and news on their devices. This would put these people at a disadvantage when trying to get into jobs or schools. Additionally, with lots of of complex technology, it could be very hard to be able to know everything. So, we would spend more and more time on our computers, which can be bad for our health and cause people to get more and more distracted. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2017/2023/01/31/Unit-5-stuff.html",
            "relUrl": "/week%2017/2023/01/31/Unit-5-stuff.html",
            "date": " • Jan 31, 2023"
        }
        
    
  
    
        ,"post21": {
            "title": "Planning Preformance Task",
            "content": "Create Performance Task Planning . My task it to creat an API that updates day by day to show the stats of NBA players in order to predict their next stat line given their next game. . Program Purpose and Function . The API and program I have will serve as both a database and a way to entertain people and provide them with a source to practice sports trivia. | . Data Abstraction . I will store teams in lists based on their area and conference. Each team will have a conference assigned to them, which will hold their stats. I will then be able to have more in depth information. | . Managing Complexity . The list would be used to manage the teams and players. Without a list, the program would be inefficient, because it would have to call all players from a group before random selection. | . Procedural Abstraction . I will develop a procedure to randomly select the two players and create an output for the user. I will store the user’s response in a variable and use that to decide what to do on the next screen(game over or continue on). | . Algorithm Implementation . The algorithm which I will use will check if the user chose the player with more of a certain statistic. If so, then another challenge will be generated. The challenges will appear until the user gets one wrong. This shows sequencing, selection, and iteration. | . Testing . To test I will retry and repeat until it works. This will test the continuation feature of the game as well as the ending of the game. | . Video Planning This which I plan to show in my video: . User correctly selecting player | User incorrectly selecting player | Final screen after wrong answer | Game ending after player scores no points | Game ending after player scores some points | . I think the video will be able to be easily done under the given threshold of 60 seconds, since there are a few simple things to be shown. . Code Plan Potential code segments to submit to Collegeboard: . Usage of list to store list of players | Code which will determine whether user will get another question or if the game will end | Accessing the list storing the player data | . With the code segments, it will be important to have segments which can serve for multiple requirements. Based on the examples, it looks like there are only a limited amount of code segments which can be uploaded, so it is important to use each one to its maximum potential. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2017/2023/01/31/Preformance-Task-Planning.html",
            "relUrl": "/week%2017/2023/01/31/Preformance-Task-Planning.html",
            "date": " • Jan 31, 2023"
        }
        
    
  
    
        ,"post22": {
            "title": "College Board Corrections",
            "content": "I took this test with the help of Arnav. He had already taken the test but went out of his way to help me and he taught me a lot about certain variables and how to read code in general. As a result, I got a 44/50, the same as him. . . Corrections . #21 I did not know how to do this, I put C not knowin anything.I learned to see that loop causes i to be reset to 1 every time, so it can never reach the value of 4. So the correct answer would be D, where the program loops forever. . #23 I originally selected the answer of D, where the count would displayed after every iteration. I did not take into account that the flowchart showed that count would only be displayed if it was over 5, so the correct answer would be A, 5. . #25 Initially I thought it was C because of the infinite loop.However, I missed the fact that j was initially 1, so that 2 would be added on every time to j. This meant that 7 would be a possible value for j, but 6 would not be. So, the correct answer would be j=6, or A. . #28 I got this question wrong because I did not select two options. I was planning to originally select A and C because they both would get the robot to the gray square, but I think I forget to select A. It is important to pay attention to my answers. . #32 I originally selected A for this problem, saying that only program 1 would get the correct answer. However, both programs would get the right answer for the question. I did not realize that the second program segment would add 1 to the program for every 1 in n(1 for 1, 2 for 2, 3 for 3, etc), and then would subtract 1 from n every time. So, this would end up yielding the same result as the other algorithm. This means that C, where both programs work, would be correct. . #45 . The sole reason I had no clue how to do this was I did not know the nessary vocab being heuristic. I did not know what heuristic meant, so this taught me a new word. After going over the meaning, I realized that this is good when you cannot get the specific solution to a problem, but can get an approximate one. I originally answered that a heuristic approach would be good for a problem when it could be solved in reasonable time and an approximate solution is needed(A). However, you could solve this by just finding the exact solution, and don’t need trial and error. However, if you don’t know how long it will take for a solution to be found, you can use trial and error(a heuristic approach) to get an approximate solution. So, the answer would be C. . Reflection . Overall, I found these questions very rewarding because they were not incredibly hard where there was no point of doing them but they were not easy where I did not learn anything. It was a good balance between easy and hard. hese hacks were a bit challenging at first but with perserverance I was able to understand the concepts which allowed me to perform the hacks well. The fact I had a person better at coding then me helping me was great and I learned a lot from it. Out of all the tests, I was able to retain a lot more from this one then others. Overall it was good and it helped me become a better coder. . fr .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2017/2023/01/31/College-Board-Test-2.html",
            "relUrl": "/week%2017/2023/01/31/College-Board-Test-2.html",
            "date": " • Jan 31, 2023"
        }
        
    
  
    
        ,"post23": {
            "title": "Model And Object Oriented Model",
            "content": "{ “cells”: [ { “attachments”: {}, “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Class and Object Terms n”, “The foundations of Object-Oriented Programming is defining a Class n”, “ n”, “In Object-Oriented Programming (OOP), a class is a blueprint for creating an Object. (a data structure). An Object is used like many other Python variables. n”, “ n”, “A Class has … n”, “- a collection of data, these are called Attributes and in Python are pre-fixed using the keyword self n”, “- a collection of Functions/Procedures. These are called Methods when they exist inside a Class definition. n”, “- An Object is created from the Class/Template. Characteristics of objects … n”, “- an Object is an Instance of the Class/Template n”, “- there can be many Objects created from the same Class n”, “- each Object contains its own Instance Data n”, “- the data is setup by the Constructor, this is the &quot;init&quot; method in a Python class n”, “- all methods in the Class/Template become part of the Object, methods are accessed using dot notation (object.method()) n”, “ n”, “A Python Class allow for the definition of @ decorators, these allow access to instance data without the use of functions … n”, “- @property decorator (aka getter). This enables developers to reference/get instance data in a shorthand fashion (object.name versus object.get_name()) n”, “- @name.setter decorator (aka setter). This enables developers to update/set instance data in a shorthand fashion (object.name = &quot;John&quot; versus object.set_name(&quot;John&quot;)) n”, “- observe all instance data (self._name, self.email …) are prefixed with &quot;&quot;, this convention allows setters and getters to work with more natural variable name (name, email …) n” ] }, { “attachments”: {}, “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Class and Object Code” ] }, { “cell_type”: “code”, “execution_count”: 1, “metadata”: {}, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “Test 1, find user 3 n”, “name: &quot;Thomas Edison&quot;, id: &quot;toby&quot;, psw: &quot;sha256$pn2…&quot; n”, “name: &quot;Nicholas Tesla&quot;, id: &quot;nick&quot;, psw: &quot;sha256$u0g…&quot; n”, “ name: &quot;Alexander Graham Bell&quot;, id: &quot;lex&quot;, psw: &quot;sha256$mHE…&quot; n”, “name: &quot;Eli Whitney&quot;, id: &quot;eli&quot;, psw: &quot;sha256$hM5…&quot; n”, “name: &quot;Hedy Lemarr&quot;, id: &quot;hedy&quot;, psw: &quot;sha256$YiQ…&quot; n”, “Test 2, change user 3 n”, “name: &quot;Thomas Edison&quot;, id: &quot;toby&quot;, psw: &quot;sha256$pn2…&quot; n”, “name: &quot;Nicholas Tesla&quot;, id: &quot;nick&quot;, psw: &quot;sha256$u0g…&quot; n”, “* name: &quot;John Mortensen&quot;, id: &quot;jm1021&quot;, psw: &quot;sha256$fw0…&quot; n”, “name: &quot;Eli Whitney&quot;, id: &quot;eli&quot;, psw: &quot;sha256$hM5…&quot; n”, “name: &quot;Hedy Lemarr&quot;, id: &quot;hedy&quot;, psw: &quot;sha256$YiQ…&quot; n”, “Test 3, make a dictionary n”, “[{&quot;_name&quot;: &quot;Thomas Edison&quot;, &quot;_uid&quot;: &quot;toby&quot;, &quot;_password&quot;: &quot;sha256$pn2SlfuWJNYSdWuf$c44366eb6ed3b16595871f347ec91f3d3ce8f8152d013b81eaa3577e2c79c7d3&quot;}, {&quot;_name&quot;: &quot;Nicholas Tesla&quot;, &quot;_uid&quot;: &quot;nick&quot;, &quot;_password&quot;: &quot;sha256$u0gEQlBSRzzKVbdZ$2357e295b91cbe7ad41202e6884c0c39bfff534b0d5a4dff74f58c8f41449cd5&quot;}, {&quot;_name&quot;: &quot;John Mortensen&quot;, &quot;_uid&quot;: &quot;jm1021&quot;, &quot;_password&quot;: &quot;sha256$fw0sZwDl8V3d05Xr$bfd7e7d75c82916494d7b2af6b219fb0151964713874fa08232839b13efe9649&quot;}, {&quot;_name&quot;: &quot;Eli Whitney&quot;, &quot;_uid&quot;: &quot;eli&quot;, &quot;_password&quot;: &quot;sha256$hM5X0RZi14Hs3GRq$c86cfb7a810633541d209b3da7485bfa09c7abcdd1d186a23eb1800084defb80&quot;}, {&quot;_name&quot;: &quot;Hedy Lemarr&quot;, &quot;_uid&quot;: &quot;hedy&quot;, &quot;_password&quot;: &quot;sha256$YiQRztA1yx5f8WJq$bf26508cecc10aed115c4813d765bcf16b2598d18d41ac4ef428beeb7913330e&quot;}] n”, “Test 4, make a dictionary n”, “[{&quot;_name&quot;: &quot;Thomas Edison&quot;, &quot;_uid&quot;: &quot;toby&quot;, &quot;_password&quot;: &quot;sha256$pn2SlfuWJNYSdWuf$c44366eb6ed3b16595871f347ec91f3d3ce8f8152d013b81eaa3577e2c79c7d3&quot;}, {&quot;_name&quot;: &quot;Nicholas Tesla&quot;, &quot;_uid&quot;: &quot;nick&quot;, &quot;_password&quot;: &quot;sha256$u0gEQlBSRzzKVbdZ$2357e295b91cbe7ad41202e6884c0c39bfff534b0d5a4dff74f58c8f41449cd5&quot;}, {&quot;_name&quot;: &quot;John Mortensen&quot;, &quot;_uid&quot;: &quot;jm1021&quot;, &quot;_password&quot;: &quot;sha256$fw0sZwDl8V3d05Xr$bfd7e7d75c82916494d7b2af6b219fb0151964713874fa08232839b13efe9649&quot;}, {&quot;_name&quot;: &quot;Eli Whitney&quot;, &quot;_uid&quot;: &quot;eli&quot;, &quot;_password&quot;: &quot;sha256$hM5X0RZi14Hs3GRq$c86cfb7a810633541d209b3da7485bfa09c7abcdd1d186a23eb1800084defb80&quot;}, {&quot;_name&quot;: &quot;Hedy Lemarr&quot;, &quot;_uid&quot;: &quot;hedy&quot;, &quot;_password&quot;: &quot;sha256$YiQRztA1yx5f8WJq$bf26508cecc10aed115c4813d765bcf16b2598d18d41ac4ef428beeb7913330e&quot;}] n” ] } ], “source”: [ “# Werkzeug is a collection of libraries that can be used to create a WSGI (Web Server Gateway Interface) n”, “# A gateway in necessary as a web server cannot communicate directly with Python. n”, “# In this case, imports are focused on generating hash code to protect passwords. n”, “from werkzeug.security import generate_password_hash, check_password_hash n”, “import json n”, “ n”, “# Define a User Class/Template n”, “# – A User represents the data we want to manage n”, “class User: n”, “ # constructor of a User object, initializes the instance variables within object (self) n”, “ def init(self, name, uid, password): n”, “ self._name = name # variables with self prefix become part of the object, n”, “ self._uid = uid n”, “ self.set_password(password) n”, “ n”, “ # a name getter method, extracts name from object n”, “ @property n”, “ def name(self): n”, “ return self._name n”, “ n”, “ # a setter function, allows name to be updated after initial object creation n”, “ @name.setter n”, “ def name(self, name): n”, “ self._name = name n”, “ n”, “ # a getter method, extracts email from object n”, “ @property n”, “ def uid(self): n”, “ return self._uid n”, “ n”, “ # a setter function, allows name to be updated after initial object creation n”, “ @uid.setter n”, “ def uid(self, uid): n”, “ self._uid = uid n”, “ n”, “ # check if uid parameter matches user id in object, return boolean n”, “ def is_uid(self, uid): n”, “ return self._uid == uid n”, “ n”, “ @property n”, “ def password(self): n”, “ return self._password[0:10] + &quot;…&quot; # because of security only show 1st characters n”, “ n”, “ # update password, this is conventional setter n”, “ def set_password(self, password): n”, “ &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; n”, “ self._password = generate_password_hash(password, method=’sha256’) n”, “ n”, “ # check password parameter versus stored/encrypted password n”, “ def is_password(self, password): n”, “ &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; n”, “ result = check_password_hash(self._password, password) n”, “ return result n”, “ n”, “ # output content using str(object) in human readable form, uses getter n”, “ def str(self): n”, “ return f’name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;‘ n”, “ n”, “ # output command to recreate the object, uses attribute directly n”, “ def repr(self): n”, “ return f’Person(name={self._name}, uid={self._uid}, password={self._password})’ n”, “ n”, “ n”, “# tester method to print users n”, “def tester(users, uid, psw): n”, “ result = None n”, “ for user in users: n”, “ # test for match in database n”, “ if user.uid == uid and user.is_password(psw): # check for match n”, “ print(&quot;* &quot;, end=&quot;&quot;) n”, “ result = user n”, “ # print using str method n”, “ print(str(user)) n”, “ return result n”, “ n”, “ n”, “# place tester code inside of special if! This allows include without tester running n”, “if name == &quot;main&quot;: n”, “ n”, “ # define user objects n”, “ u1 = User(name=’Thomas Edison’, uid=’toby’, password=’123toby’) n”, “ u2 = User(name=’Nicholas Tesla’, uid=’nick’, password=’123nick’) n”, “ u3 = User(name=’Alexander Graham Bell’, uid=’lex’, password=’123lex’) n”, “ u4 = User(name=’Eli Whitney’, uid=’eli’, password=’123eli’) n”, “ u5 = User(name=’Hedy Lemarr’, uid=’hedy’, password=’123hedy’) n”, “ n”, “ # put user objects in list for convenience n”, “ users = [u1, u2, u3, u4, u5] n”, “ n”, “ # Find user n”, “ print(&quot;Test 1, find user 3&quot;) n”, “ u = tester(users, u3.uid, &quot;123lex&quot;) n”, “ n”, “ n”, “ # Change user n”, “ print(&quot;Test 2, change user 3&quot;) n”, “ u.name = &quot;John Mortensen&quot; n”, “ u.uid = &quot;jm1021&quot; n”, “ u.set_password(&quot;123qwerty&quot;) n”, “ u = tester(users, u.uid, &quot;123qwerty&quot;) n”, “ n”, “ n”, “ # Make dictionary n”, “ ‘’’ n”, “ The dict in Python represents a dictionary or any mapping object that is used to store the attributes of the object. n”, “ Every object in Python has an attribute that is denoted by dict. n”, “ Use the json.dumps() method to convert the list of Users to a JSON string. n”, “ ‘’‘ n”, “ print(&quot;Test 3, make a dictionary&quot;) n”, “ json_string = json.dumps([user.dict for user in users]) n”, “ print(json_string) n”, “ n”, “ print(&quot;Test 4, make a dictionary&quot;) n”, “ json_string = json.dumps([vars(user) for user in users]) n”, “ print(json_string)” ] }, { “attachments”: {}, “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Hacks n”, “Add new attributes/variables to the Class. Make class specific to your CPT work. n”, “ n”, “- Add classOf attribute to define year of graduation n”, “ - Add setter and getter for classOf n”, “- Add dob attribute to define date of birth n”, “ - This will require investigation into Python datetime objects as shown in example code below n”, “ - Add setter and getter for dob n”, “- Add instance variable for age, make sure if dob changes age changes n”, “ - Add getter for age, but don’t add/allow setter for age n”, “- Update and format tester function to work with changes n”, “ n”, “Start a class design for each of your own Full Stack CPT sections of your project n”, “ n”, “- Use new code cell in this notebook n”, “- Define init and self attributes n”, “- Define setters and getters n”, “- Make a tester” ] }, { “attachments”: {}, “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Start Code for Hacks” ] }, { “cell_type”: “code”, “execution_count”: null, “metadata”: {}, “outputs”: [], “source”: [ “from datetime import date n”, “ n”, “def calculate_age(born): n”, “ today = date.today() n”, “ return today.year - born.year - ((today.month, today.day) &lt; (born.month, born.day)) n”, “ n”, “dob = date(2004, 12, 31) n”, “age = calculate_age(dob) n”, “print(age)” ] }, { “cell_type”: “code”, “execution_count”: 3, “metadata”: {}, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “2022-23 NBA Stats n”, “JSON ready string for 4 players: n”, “ [User(name=Lebron James, current_team=Los Angeles Lakers, stats=Rec Pts: 38,024), User(name=Kevin Durant, current_team=Brooklyn Nets, stats=Rush Pts: 26,684), User(name=Giannis Antetokounmpo, current_team=Milwaukee Bucks, stats=Rec Pts: 15,406), User(name=Nikola Jokic, current_team=Denver Nuggets, stats=Rec Pts: 11,327)] n”, “ n”, “Values for Lebron James: n”, “Raw Variables of object: n”, “ {‘_name’: ‘Lebron James’, ‘_team’: ‘Los Angeles Lakers’, ‘_stats’: ‘Rec Pts: 38,024’} n”, “ n”, “Raw Attributes and Methods of object: n”, “ [‘class’, ‘delattr’, ‘dict’, ‘dir’, ‘doc’, ‘eq’, ‘format’, ‘ge’, ‘getattribute’, ‘gt’, ‘hash’, ‘init’, ‘init_subclass’, ‘le’, ‘lt’, ‘module’, ‘ne’, ‘new’, ‘reduce’, ‘reduce_ex’, ‘repr’, ‘setattr’, ‘sizeof’, ‘str’, ‘subclasshook’, ‘weakref’, ‘_name’, ‘_stats’, ‘_team’, ‘dictionary’, ‘name’, ‘stats’, ‘team’, ‘uid’] n”, “ n”, “Representation to Re-Create the object: n”, “ User(name=Lebron James, current_team=Los Angeles Lakers, stats=Rec Pts: 38,024) n”, “ n”, “Values for Kevin Durant: n”, “Raw Variables of object: n”, “ {‘_name’: ‘Kevin Durant’, ‘_team’: ‘Brooklyn Nets’, ‘_stats’: ‘Rush Pts: 26,684’} n”, “ n”, “Raw Attributes and Methods of object: n”, “ [‘class’, ‘delattr’, ‘dict’, ‘dir’, ‘doc’, ‘eq’, ‘format’, ‘ge’, ‘getattribute’, ‘gt’, ‘hash’, ‘init’, ‘init_subclass’, ‘le’, ‘lt’, ‘module’, ‘ne’, ‘new’, ‘reduce’, ‘reduce_ex’, ‘repr’, ‘setattr’, ‘sizeof’, ‘str’, ‘subclasshook’, ‘weakref’, ‘_name’, ‘_stats’, ‘_team’, ‘dictionary’, ‘name’, ‘stats’, ‘team’, ‘uid’] n”, “ n”, “Representation to Re-Create the object: n”, “ User(name=Kevin Durant, current_team=Brooklyn Nets, stats=Rush Pts: 26,684) n”, “ n”, “Values for Giannis Antetokounmpo: n”, “Raw Variables of object: n”, “ {‘_name’: ‘Giannis Antetokounmpo’, ‘_team’: ‘Milwaukee Bucks’, ‘_stats’: ‘Rec Pts: 15,406’} n”, “ n”, “Raw Attributes and Methods of object: n”, “ [‘class’, ‘delattr’, ‘dict’, ‘dir’, ‘doc’, ‘eq’, ‘format’, ‘ge’, ‘getattribute’, ‘gt’, ‘hash’, ‘init’, ‘init_subclass’, ‘le’, ‘lt’, ‘module’, ‘ne’, ‘new’, ‘reduce’, ‘reduce_ex’, ‘repr’, ‘setattr’, ‘sizeof’, ‘str’, ‘subclasshook’, ‘weakref’, ‘_name’, ‘_stats’, ‘_team’, ‘dictionary’, ‘name’, ‘stats’, ‘team’, ‘uid’] n”, “ n”, “Representation to Re-Create the object: n”, “ User(name=Giannis Antetokounmpo, current_team=Milwaukee Bucks, stats=Rec Pts: 15,406) n”, “ n”, “Values for Nikola Jokic: n”, “Raw Variables of object: n”, “ {‘_name’: ‘Nikola Jokic’, ‘_team’: ‘Denver Nuggets’, ‘_stats’: ‘Rec Pts: 11,327’} n”, “ n”, “Raw Attributes and Methods of object: n”, “ [‘class’, ‘delattr’, ‘dict’, ‘dir’, ‘doc’, ‘eq’, ‘format’, ‘ge’, ‘getattribute’, ‘gt’, ‘hash’, ‘init’, ‘init_subclass’, ‘le’, ‘lt’, ‘module’, ‘ne’, ‘new’, ‘reduce’, ‘reduce_ex’, ‘repr’, ‘setattr’, ‘sizeof’, ‘str’, ‘subclasshook’, ‘weakref’, ‘_name’, ‘_stats’, ‘_team’, ‘dictionary’, ‘name’, ‘stats’, ‘team’, ‘uid’] n”, “ n”, “Representation to Re-Create the object: n”, “ User(name=Nikola Jokic, current_team=Denver Nuggets, stats=Rec Pts: 11,327) n”, “ n” ] } ], “source”: [ “from datetime import date n”, “import json n”, “ n”, “class Player: n”, “ n”, “ def init(self, name, team, stats): n”, “ self._name = name # variables with self prefix become part of the object, n”, “ self._team = team n”, “ self._stats = stats n”, “ n”, “ @property n”, “ def name(self): n”, “ return self._name n”, “ n”, “ # a setter function, allows name to be updated after initial object creation n”, “ @name.setter n”, “ def name(self, name): n”, “ self._name = name n”, “ n”, “ # a getter method, extracts email from object n”, “ @property n”, “ def team(self): n”, “ return self._team n”, “ n”, “ # a setter function, allows name to be updated after initial object creation n”, “ @team.setter n”, “ def uid(self, team): n”, “ self._team = team n”, “ n”, “ @property n”, “ def stats(self): n”, “ return self._stats n”, “ n”, “ @stats.setter n”, “ def stats(self, stats): n”, “ self._stats = stats n”, “ n”, “ @property n”, “ def dictionary(self): n”, “ dict = { n”, “ &quot;name&quot; : self.name, n”, “ &quot;current_team&quot; : self.team, n”, “ &quot;stats&quot; : self.stats, n”, “ } n”, “ return dict n”, “ n”, “ # output content using json dumps, this is ready for API response n”, “ def str(self): n”, “ return json.dumps(self.dictionary) n”, “ n”, “ # output command to recreate the object, uses attribute directly n”, “ def repr(self): n”, “ return f’User(name={self._name}, current_team={self.team}, stats={self._stats})’ n”, “ n”, “ n”, “if name == &quot;main&quot;: n”, “ p1 = Player(name=’Lebron James’, team=’Los Angeles Lakers’, stats=’Rec Pts: 38,024’) n”, “ p2 = Player(name=’Kevin Durant’, team=’Brooklyn Nets’, stats=’Rush Pts: 26,684’) n”, “ p3 = Player(name=’Giannis Antetokounmpo’, team=’Milwaukee Bucks’, stats=’Rec Pts: 15,406’) n”, “ p4 = Player(name=’Nikola Jokic’, team=’Denver Nuggets’, stats=’Rec Pts: 11,327’) n”, “ players = [p1, p2, p3, p4] n”, “ print(&quot;2022-23 NBA Stats&quot;) n”, “ print(&quot;JSON ready string for 4 players: n&quot;, players, &quot; n&quot;) n”, “ print(&quot;Values for Lebron James:&quot;) n”, “ print(&quot;Raw Variables of object: n&quot;, vars(p1), &quot; n&quot;) n”, “ print(&quot;Raw Attributes and Methods of object: n&quot;, dir(p1), &quot; n&quot;) n”, “ print(&quot;Representation to Re-Create the object: n&quot;, repr(p1), &quot; n&quot;) n”, “ print(&quot;Values for Kevin Durant:&quot;) n”, “ print(&quot;Raw Variables of object: n&quot;, vars(p2), &quot; n&quot;) n”, “ print(&quot;Raw Attributes and Methods of object: n&quot;, dir(p2), &quot; n&quot;) n”, “ print(&quot;Representation to Re-Create the object: n&quot;, repr(p2), &quot; n&quot;) n”, “ print(&quot;Values for Giannis Antetokounmpo:&quot;) n”, “ print(&quot;Raw Variables of object: n&quot;, vars(p3), &quot; n&quot;) n”, “ print(&quot;Raw Attributes and Methods of object: n&quot;, dir(p3), &quot; n&quot;) n”, “ print(&quot;Representation to Re-Create the object: n&quot;, repr(p3), &quot; n&quot;) n”, “ print(&quot;Values for Nikola Jokic:&quot;) n”, “ print(&quot;Raw Variables of object: n&quot;, vars(p4), &quot; n&quot;) n”, “ print(&quot;Raw Attributes and Methods of object: n&quot;, dir(p4), &quot; n&quot;) n”, “ print(&quot;Representation to Re-Create the object: n&quot;, repr(p4), &quot; n&quot;) “ ] } ], “metadata”: { “kernelspec”: { “display_name”: “Python 3”, “language”: “python”, “name”: “python3” }, “language_info”: { “codemirror_mode”: { “name”: “ipython”, “version”: 3 }, “file_extension”: “.py”, “mimetype”: “text/x-python”, “name”: “python”, “nbconvert_exporter”: “python”, “pygments_lexer”: “ipython3”, “version”: “3.10.7 (v3.10.7:6cc6b13308, Sep 5 2022, 14:02:52) [Clang 13.0.0 (clang-1300.0.29.30)]” }, “orig_nbformat”: 4, “vscode”: { “interpreter”: { “hash”: “aee8b7b246df8f9039afb4144a1f6fd8d2ca17a180786b69acc140d282b71a49” } } }, “nbformat”: 4, “nbformat_minor”: 2 } .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2023/01/17/Model-and-Object-Oriented-Model.ipynb",
            "relUrl": "/2023/01/17/Model-and-Object-Oriented-Model.ipynb",
            "date": " • Jan 17, 2023"
        }
        
    
  
    
        ,"post24": {
            "title": "4 Collegeboard corrections using rubric",
            "content": "Corrections for Submission 1 . Reporting Category Student Score College Board Score Comments . Program Purpose and Function | 0 | 0 | I put 0 because the information based on the triangle did not seem to make sense. After looking college board: I got it correct because The response does not specify the program’s purpose. Instead, it describes the function of theprogram, “to provide information about a triangle based on inputted side lengths.” Therefore, the response does not meet the program and purpose and function requirements | . Data Abstraction | 0 | 0 | I put 0 because the list looked more like a dict so I think it does not work. After looking college board: I got it wrong because I initially thought it made no sense, but in reality, according to college board, &quot;The response identifies what is stored in the list. The response states, “The data in the list contains the possible classifications by side lengths of the triangle.” This overall makes sense and fits the criteria that is data abstraction. | . Managing Complexity | 0 | 0 | I put 0 because some of yhe list is not neccesary for a program like this. After looking college board: I got it correct because I was right with college board in the fact that, &quot;The response includes a list that collects the four possible classifications in one place, but this is not necessary for the program. This use of the list does not manage complexity. | . Procedural Abstraction | 0 | 0 | I put 0 because I thought the parameters used were quite inaccurate because it did not fit the program. After looking college board: I agreed with college board that, &quot;The response includes a student-developed procedure, ratioCalculate, with three parameters that are used in the procedure. The response also includes another code fragment that calls the procedure ratioCalculate. | . Algorithm Implementation | 0 | 0 | This student met the requirements because they had all the necessary things such as an algorithm in the procedure and explains the procedure with lots of details. | . Testing | 1 | 1 | I put 0 because I think the Algorithm Implementation is not compatible with the data provided. After looking college board: The student-developed algorithm within procedure, ratioCalculate, includes sequencing, selection (if statement), and iteration (for in range loop). | . Corrections for Submission 2 . Reporting Category Student Score College Board Score Comments . Program Purpose and Function | 1 | 1 | This earns the point because it fullfills all of the requirements for row 1. The video shows the code running and the written response includes the input and output. | . Data Abstraction | 1 | 1 | This earns the point because it fullfills all of the requirements for row 2. The written response shows both code segments and explains the list name and its functionality. | . Managing Complexity | 1 | 1 | This earns the point because it fullfills all of the requirements for row 3. It has a list that manages complexity and talks about what would happen if the list wasn’t present. | . Procedural Abstraction | 1 | 1 | This earns the point because it fullfills all of the requirements for row 4. It describes a procedure with four different parameters. | . Algorithm Implementation | 1 | 1 | This earns the point because it fullfills all of the requirements for row 5. It has sequencing, iteration, and selection. | . Testing | 1 | 1 | This earns the point because it fullfills all of the requirements for row 6. It shows the results of two calls and describes the two calls. | . Corrections for Submission 3 . Reporting Category Student Score College Board Score Comments . Program Purpose and Function | 1 | 0 | I initally thought got full points for this section, but in reality they didn’t earn the point because they didn’t have the purpose defined. | . Data Abstraction | 1 | 1 | This earns the point because it fullfills all of the requirements for row 2. The written response shows both code segments and shows a list in a loop. | . Managing Complexity | 1 | 1 | This earns the point because it fullfills all of the requirements for row 3. It has a list and talks about what would happen if the list wasn’t present. | . Procedural Abstraction | 1 | 1 | This earns the point because it fullfills all of the requirements for row 4. It has a description of the functionality of a prodcedure and highlights the procedure itself. | . Algorithm Implementation | 1 | 1 | This earns the point because it fullfills all of the requirements for row 5. It has an algorithm with selection, iteration, and sequencing and decribes the algoirthm. | . Testing | 1 | 1 | This earns the point because it fullfills all of the requirements for row 6. It shows the results of two calls with two different results and the specific conditions being tested in each call. | . Corrections for Submission 4 . Reporting Category Student Score College Board Score Comments . Program Purpose and Function | 1 | 1 | The student got the point because they fullfilled all of the requirements for row 1. Their video and written response has the input, output, and program purpose + function clearly shown/described. | . Data Abstraction | 1 | 0 | I incorrectly thought that the student earned the point for this section. But college board didn’t agree. The student didn’t earn the point because the data stored in their list wasn’t in use in their program. | . Managing Complexity | 1 | 0 | I incorrectly thought that the student earned the point for this section. But college board didn’t agree. The student didn’t earn the point because their list isn’t being used in their code to manage complexity. | . Procedural Abstraction | 1 | 1 | The student got the point because they fullfilled all of the requirements for row 4. They had a good procedure and decribed the functionality of it. | . Algorithm Implementation | 1 | 1 | The student got the point because they fullfilled all of the requirements for row 5. Their algorithm has all three required parts and they describe iteration, selection, and sequencing. | . Testing | 0 | 0 | The student didn’t earn the point because they only describe the conditions tested, not the arguments of the code execution. | .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2018/2023/01/17/Four-Collegeboard-corrections-copy.html",
            "relUrl": "/week%2018/2023/01/17/Four-Collegeboard-corrections-copy.html",
            "date": " • Jan 17, 2023"
        }
        
    
  
    
        ,"post25": {
            "title": "Collegeboard corrections using rubric",
            "content": "Corrections for Submission 1 . Reporting Category Student Score College Board Score Comments . Program Purpose and Function | 0 | 1 | I put 0 because the information based on the triangle did not seem to make sense. After looking college board: I got it correct because The response does not specify the program’s purpose. Instead, it describes the function of theprogram, “to provide information about a triangle based on inputted side lengths.” Therefore, the response does not meet the program and purpose and function requirements | . Data Abstraction | 0 | 1 | I put 0 because the list looked more like a dict so I think it does not work. After looking college board: I got it wrong because I initially thought it made no sense, but in reality, according to college board, &quot;The response identifies what is stored in the list. The response states, “The data in the list contains the possible classifications by side lengths of the triangle.” This overall makes sense and fits the criteria that is data abstraction. | . Managing Complexity | 0 | 0 | I put 0 because some of yhe list is not neccesary for a program like this. After looking college board: I got it correct because I was right with college board in the fact that, &quot;The response includes a list that collects the four possible classifications in one place, but this is not necessary for the program. This use of the list does not manage complexity. | . Procedural Abstraction | 1 | 1 | I put 1 because I thought the parameters used were quite accurate because it fit the program. After looking college board: I agreed with college board that, &quot;The response includes a student-developed procedure, ratioCalculate, with three parameters that are used in the procedure. The response also includes another code fragment that calls the procedure ratioCalculate. | . Algorithm Implementation | 1 | 1 | This student met the requirements because they had all the necessary things such as an algorithm in the procedure and explains the procedure with lots of details. | . Testing | 0 | 1 | I put 0 because I think the Algorithm Implementation is not compatible with the data provided. After looking college board: The student-developed algorithm within procedure, ratioCalculate, includes sequencing, selection (if statement), and iteration (for in range loop). | . Corrections for Submission 2 . Reporting Category Student Score College Board Score Comments . Program Purpose and Function | 1 | 1 | I put 1 because the information seemed to lined up and seemed to make sense. After looking college board: I got it correct because The response does not specify the program’s purpose. Instead, it describes the function of theprogram, “The video demonstrates the running of the program, showing input into the program through the user placing tiles on a grid. Output includes the display of the game simulation. It also shows the user pausing, editing, and replaying the simulation. This satisfies the first three criteria for the video.&quot; | . Data Abstraction | 1 | 1 | I put 1 because the list looked more like a dict so I think it does work. After looking college board: I got it wrong because I initially thought it made no sense, but in reality, according to college board, &quot;The name of the list is identified as startGrid. The response identifies other lists, but theyare not considered in the scoring.” This overall makes sense and fits the criteria that is data abstraction | . Managing Complexity | 1 | 1 | I put 1 because some oftyhe list is neccesary for a program like this. After looking college board: I got it correct because I was right with college board in the fact that, &quot;The response includes code that uses a list to manage complexity by accessing and storing the status (1 or 0) of 10,800 items. This use of the list does not manage complexity. | . Procedural Abstraction | 1 | 1 | I put 1 because I thought the parameters used were quite accurate because it fit the program. After looking college board: I agreed with college board that, &quot;The response includes a student-developed procedure, createPoems, with four parameters that are used in the procedure. | . Algorithm Implementation | 1 | 1 | I put 1 because I agreed with what it was saying and it all made sense. The student-developed algorithm within procedure, createPoems, includes sequencing, selection (if statement), and iteration (while loop). | . Testing | 1 | 1 | I put 1 because I think the Algorithm Implementation is not compatible with the data provided. After looking college board: The response specifies the different results of the two procedure calls. The response states in the first case that “the final output poems will have “The” and “And” in the content.” The responses states in the second case that “the final output poems will not have “The” and “And” in the content.” | .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2017/2023/01/04/Collegeboard-corrections.html",
            "relUrl": "/week%2017/2023/01/04/Collegeboard-corrections.html",
            "date": " • Jan 4, 2023"
        }
        
    
  
    
        ,"post26": {
            "title": "Unit 3 Section 17 - 18",
            "content": "Unit 3 Lesson 17-18 . Notes . undecidable problem: problems for which no algorithms can be built that can provide a correct yes or no answer. . problem: description of a task that may or may not be able to be solved through the use of an algorithm. An instance of a problem includes a specific input. One example of this type of problem is a sorting problem. . decision problem: problem with a binary answer (yes or no). An optimization problem is a problem with the objective of finding the BEST solution amongst many possibilities to solve a problem. . An algorithm’s efficiency is determine through formal or mathematical reasoning. . decidable problem: problems for which algorithms can be written to solve/produce a correct output for all possible inputs. . Hack 1 Decidable problems are those that can be solved through the use of an algorithm. An example is determining whether a number is even or odd. Undecidable problems cant be solved with an algorithmic procedure. An example is the halting problem which asks if the program will run forever or halt. . Hack 2 Which of the following is a 3 step algorithm? . A. 2 x 6 x 8 . B. 4^5 . C. (3 x 8)^2 . D. None of the above . E. All of the above . Answer: C is the correct answer sicne you have to multiplky the numbers inside of the parantheses then take that value to the power of two . Hack 3 and 4 . . Using the data.sort function I was able to rewrite the code more efficiently ans easier to read . Hack 5 . . Explanation for Code: Imports the permutation method from the library itertools. Using this, we can use a built in command to create permutations. Using a for loop, we can iterate through all possible permutations, and print them. This is not only a much smaller piece of code, but it does not require recalling a variable multiple times, like in the former program. This is also more efficient for the developer, as it allows for the individual to code much less and in a simpler fashion. . Reflection . Overall, I found these questions very rewarding because they were not incredibly hard where there was no point of doing them but they were not easy where I did not learn anything. It was a good balance between easy and hard. hese hacks were a bit challenging at first but with perserverance I was able to understand the concepts which allowed me to perform the hacks well. The presentation was great and I learned a lot from it. Out of all the presentations, I was able to retain a lot more from this one then others. Overall it was good and it helped me become a better coder. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2016/2023/01/03/Units-17-to-18-Notes.html",
            "relUrl": "/week%2016/2023/01/03/Units-17-to-18-Notes.html",
            "date": " • Jan 3, 2023"
        }
        
    
  
    
        ,"post27": {
            "title": "Unit 3 Section 16",
            "content": "Unit 3 Lesson 16 . Unit 3 Lesson 16 Notes . The main difference between simulations and experiments is that simulations replicate real-world scenarios digitally, while experiments are conducted in the real world. Simulations are typically less expensive than experiments because they don’t require expensive equipment. However, experiments provide actual results, while simulations use models based on collected data to provide estimates of what is expected to happen. Simulations can be used to estimate outcomes for events that cannot be safely recreated in the real world, but they may not always be the most cost-effective or time-efficient solution. . A simulation is a tool used to imitate real-world environments for safety or logistical testing. It is important to use random numbers and consider biases when conducting a simulation, and to evaluate whether a simulation is the best solution for the situation at hand. . when making a simulation you should consider: . Removing details, which could be done using pseudo-random number generators Using other ideas from previous college board lessons; like procedure, flowcharts and conditionals . Hacks . Question Answer . Name(First+Last) | Luke Riggins | . 1 | none | . 2 | none | . 3 | C | . 4 | C | . 5 | C | . 6 | A | . 7 | A | . 8 | none | . 9 | B | . Explanations for Answers (3) Using a pseudo-random number generator in a simulation can make it less accurate, so it is better to avoid using one. . (4) In a flight simulation, the least likely factor to be removed for the sake of functionality is imperfections on aircraft. . (5) The main difference between an experiment and a simulation is the situation being considered. . (6) A car company can use simulation to determine the safety of their new car in the event of a crash, as it would be too dangerous to conduct such an experiment on real vehicles. . (7) An environmental group may use simulation to accurately predict the impact of the greenhouse effect on the environment, as it would be harmful to conduct an experiment on the actual environment. . (9) A teacher can use an experiment to find the average score on a final exam, as this will simply involve calculating the average and does not require simulation. . Extra Credit . . Reflection . Overall, I found these questions very rewarding because they were not incredibly hard where there was no point of doing them but they were not easy where I did not learn anything. It was a good balance between easy and hard. hese hacks were a bit challenging at first but with perserverance I was able to understand the concepts which allowed me to perform the hacks well. The presentation was great and I learned a lot from it. Out of all the presentations, I was able to retain a lot more from this one then others. Overall it was good and it helped me become a better coder. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2016/2023/01/03/Unit-16-Notes.html",
            "relUrl": "/week%2016/2023/01/03/Unit-16-Notes.html",
            "date": " • Jan 3, 2023"
        }
        
    
  
    
        ,"post28": {
            "title": "Grades",
            "content": "Section 1-2: 0.9/1 . Comments: Took a lot of notes and reflected, satisfied requirements . Section 3-4: 0.9/1 . Comments: He completed all the hacks and included notes and a reflection at the end. . Section 8 and 10: 0.9/1 . Comments: No extra, but complete . Section 9 and 11: 0.91/1 . Comments: Had notes, reflection, and did all of the hacks . Section 12-13: 0.75/1 . Comments: All there with extra but late . Section 14-15: 1/1 . Comments: Thorough reflection of lesson. Met all requirements + ec .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2016/2022/12/15/Grades.html",
            "relUrl": "/week%2016/2022/12/15/Grades.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "Unit 14 Through 15 Notes",
            "content": "{ “cells”: [ { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Notes n”, “ n”, “Software libraries contain procedures used in creating novel programs n”, “Libraries and prewritten code can make writing algorithms much easier n”, “Libraries simplify complex programs n”, “APIs(application program interfaces) specify how procedures in libraries should behave and be utilized n”, “Reading documentation makes it much easier to understand how to use libraries/APIs n”, “Useful random functions include: n”, “random.randint(a, b): generates a random number. The values of a and b are required, as they are the start and stop values, placing an inclusive limit on the number to be generated. C is the step, which is optional, and is the interval at which the random numbers are generated at n”, “random.randrange(a, b, c): generates a random number. The values of a and b are required, as they are the start and stop values, placing an inclusive limit on the number to be generated. C is the step, which describes what kind of multiple can be generated. The potential value starts at a, or is a a + a multiple of c, and is less than b. n”, “random.shuffle: shuffles a list randomly to scramble contents n”, “ n”, “Vocab n”, “Documentation: Text that explains the what, how, or why of your code. n”, “Libraries: A collection of prewritten code or procedures that coders can use to maximize their efficiency n”, “Application Programming Interface: A type of software through several computers are able to communicate information amongst eachother n”, “ n”, “Multiple Choice Problems n”, “ n”, “B. A random integer from a to b inclusive n”, “The random(a, b) function is inclusive, and generates a number. This means that the random integer will be from a to b and inclusive. n”, “ n”, “A. x = start, y = stop, z = step n”, “X and Y describe the range in random(x, y, z). These are both required. Z is optional, and is the step, and shows the intervals for random numbers. n”, “ n”, “A. random.item n”, “random.item does not exist. random.random generates a float between 0 and 1. random.shuffle randomly shuffles a list. random.randint generates a random integer. n”, “ n”, “ n”, “Short Answer Questions n”, “ n”, “1. Using libraries allows users to access and reuse pre-written code. This allows algorithms to be made more efficient. Additionally, there are many libraries which are created for multiple different purposes, which makes it easier for programmers to create more complex algorithms. n”, “ n”, “2. First, the code segment imports the random library for use. Then, the program takes in names from user input, and puts them into a list(names). Then, the variable num_items finds the length of the list of names. The random_choice variable generates a random number which will be an index of the list. random_choice makes use of the random.randint function and generates a value from 0 to the maximum index(length of list minus 1). Then the program finds the person who is associated with the randomly generated value. Finally, the program prints that individual’s name. n” ] }, { “cell_type”: “code”, “execution_count”: 1, “metadata”: {}, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “Luke is going to buy the meal today! n” ] } ], “source”: [ “import random n”, “ n”, “# takes user input, puts it into a list of names n”, “names_string = input(&quot;Give me everybody’s names, seperated by a comma.&quot;) n”, “names = names_string.split(&quot;,&quot;) n”, “ n”, “num_items = len(names) n”, “ n”, “# uses random to choose a random number n”, “random_choice = random.randint(0, num_items - 1) n”, “ n”, “# associates random number with a name n”, “person_who_will_pay = names[random_choice] n”, “ n”, “# prints name n”, “print(f&quot;{person_who_will_pay} is going to buy the meal today!&quot;)” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Code Challenge n”, “ n”, “Question 1” ] }, { “cell_type”: “code”, “execution_count”: 5, “metadata”: {}, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “[‘Shai’, ‘Lebron’, ‘Lebron’, ‘Nikola’, ‘Devin’] n” ] } ], “source”: [ “import random n”, “ n”, “names_list = [&quot;Lebron&quot;, &quot;Kevin&quot;, &quot;Stephen&quot;, &quot;Nikola&quot;, &quot;Giannis&quot;, &quot;Joel&quot;, &quot;Luka&quot;, &quot;Jason&quot;, &quot;Ja&quot;, &quot;Donovan&quot;, &quot;Anthony&quot;, &quot;Shai&quot;, &quot;Devin&quot;, &quot;Jaylen&quot;, &quot;James&quot;] n”, “random_list = [] n”, “ n”, “def addPeople(list, new_list): n”, “ count = 1 n”, “ while count &lt;= 5: n”, “ number = random.randint(0, len(list) - 1) n”, “ new_list.append(list[number]) n”, “ count += 1 n”, “ return new_list n”, “ n”, “print(addPeople(names_list, random_list))” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Documentation n”, “ n”, “ A random number is generated using the random.randint function, which generates a random integer from 0 to 1 less than the length of the list. This makes sure that when it calls the index to append into the new list, the index values fall in the range of the list of full names. Finally, the program returns the new list. This program generates 5 random names from a list. A list of names is predefined, as well as another empty list for the names to be put into. The function addPeople is defined for the sequence of code. It establishes a counter variable, which allows for 5 names to be appended to using a while loop, as the program runs while the counter variable is under a certain value.” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Question 2” ] }, { “cell_type”: “code”, “execution_count”: 6, “metadata”: {}, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “Player 1 won with a score of 9 points! n”, “Player 1 won with a score of 11 points! n” ] } ], “source”: [ “import random n”, “score1 = 0 n”, “score2 = 0 n”, “ n”, “def DiceGame(): n”, “ score1 = random.randint(1, 6) + random.randint(1, 6) n”, “ score2 = random.randint(1, 6) + random.randint(1, 6) n”, “ if score1 &gt; score2: n”, “ print(&quot;Player 1 won with a score of &quot; + str(score1) + &quot; points!&quot;) n”, “ if score1 &lt; score2: n”, “ print(&quot;Player 2 won with a score of &quot; + str(score2) + &quot; points!&quot;) n”, “ if score1 == score2: n”, “ print(&quot;Both players tied with &quot; + str(score1) + &quot; points!&quot;) n”, “ n”, “DiceGame() n”, “DiceGame()” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Documentation n”, “ n”, “ The random.randint function runs from 1 to 6, which represents a dice rolling a number from 1 to 6 equally. This is repeated for both players. Then, the scores are compared. If both scores are equal, a message is printed stating there is a tie. If one player has more points than the other, a statement saying that player with more points won is printed.The function must import the random library in order to replicate rolling a pair of dice. 2 variables are defined at first. Then, a function is created to represent the dice game. To give each player a score, the random.randint function is called twice, adding both random numbers to each other and storing that value.” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Some more n”, “ n”, “Random maze” ] }, { “cell_type”: “code”, “execution_count”: 7, “metadata”: {}, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “0 x x 0 x n”, “x 0 0 0 x n”, “0 0 0 0 x n”, “0 0 S 0 x n”, “0 x 0 0 E n” ] } ], “source”: [ “import random n”, “ n”, “# defining constraints n”, “width = 5 n”, “height = 5 n”, “obstacles = 12 n”, “ n”, “# creates the maze n”, “maze = [[0 for i in range(width)] for j in range(height)] n”, “ n”, “# for loop to generate obstacles n”, “for i in range(obstacles): n”, “ x = random.randint(0, width - 1) n”, “ y = random.randint(0, height - 1) n”, “ maze[x][y] = ‘x’ # represents obstacles n”, “ n”, “# function to create a start and end position n”, “def startEnd(): n”, “ a = random.randint(0, width - 1) n”, “ b = random.randint(0, height - 1) n”, “ maze[a][b] = ‘S’ # represents the start position n”, “ c = random.randint(0, width - 1) n”, “ d = random.randint(0, height - 1) n”, “ maze[c][d] = ‘E’ # represents the end position n”, “ n”, “startEnd() n”, “ n”, “# function to print the maze n”, “for row in maze: n”, “ print(‘ ‘.join(str(cell) for cell in row))” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Reflection n”, “ n”, “ n”, “I overall liked this presentation anfd hacks in general because it helped a lot. It gave me new insights on useful skills for coding. Documentation makes it easy for someone to read my code, and many programs have a documentation which outlines usage for the users. The random library is used very frequently in Python programming. Randomization can be very useful in programs. A lot of programs which we see use randomization, such as games or websites. Using libraries will allow coding to be much easier, and use work that has already been developed. “ ] } ], “metadata”: { “kernelspec”: { “display_name”: “Python 3.10.7 64-bit”, “language”: “python”, “name”: “python3” }, “language_info”: { “codemirror_mode”: { “name”: “ipython”, “version”: 3 }, “file_extension”: “.py”, “mimetype”: “text/x-python”, “name”: “python”, “nbconvert_exporter”: “python”, “pygments_lexer”: “ipython3”, “version”: “3.10.7” }, “orig_nbformat”: 4, “vscode”: { “interpreter”: { “hash”: “aee8b7b246df8f9039afb4144a1f6fd8d2ca17a180786b69acc140d282b71a49” } } }, “nbformat”: 4, “nbformat_minor”: 2 } .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2022/12/14/Unit-14-through-15-notes.ipynb",
            "relUrl": "/2022/12/14/Unit-14-through-15-notes.ipynb",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "Unit 3 Section 14 - 15",
            "content": "Notes . Software libraries contain procedures used in creating novel programs Libraries and prewritten code can make writing algorithms much easier Libraries simplify complex programs APIs(application program interfaces) specify how procedures in libraries should behave and be utilized Reading documentation makes it much easier to understand how to use libraries/APIs Useful random functions include: random.randint(a, b): generates a random number. The values of a and b are required, as they are the start and stop values, placing an inclusive limit on the number to be generated. C is the step, which is optional, and is the interval at which the random numbers are generated at random.randrange(a, b, c): generates a random number. The values of a and b are required, as they are the start and stop values, placing an inclusive limit on the number to be generated. C is the step, which describes what kind of multiple can be generated. The potential value starts at a, or is a a + a multiple of c, and is less than b. random.shuffle: shuffles a list randomly to scramble contents . Vocab Documentation: Text that explains the what, how, or why of your code. Libraries: A collection of prewritten code or procedures that coders can use to maximize their efficiency Application Programming Interface: A type of software through several computers are able to communicate information amongst eachother . Multiple Choice Problems . B. A random integer from a to b inclusive The random(a, b) function is inclusive, and generates a number. This means that the random integer will be from a to b and inclusive. . A. x = start, y = stop, z = step X and Y describe the range in random(x, y, z). These are both required. Z is optional, and is the step, and shows the intervals for random numbers. . A. random.item random.item does not exist. random.random generates a float between 0 and 1. random.shuffle randomly shuffles a list. random.randint generates a random integer. . Short Answer Questions . Using libraries allows users to access and reuse pre-written code. This allows algorithms to be made more efficient. Additionally, there are many libraries which are created for multiple different purposes, which makes it easier for programmers to create more complex algorithms. . | First, the code segment imports the random library for use. Then, the program takes in names from user input, and puts them into a list(names). Then, the variable num_items finds the length of the list of names. The random_choice variable generates a random number which will be an index of the list. random_choice makes use of the random.randint function and generates a value from 0 to the maximum index(length of list minus 1). Then the program finds the person who is associated with the randomly generated value. Finally, the program prints that individual’s name. . |",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2016/2022/12/14/14-through-15-Hacks.html",
            "relUrl": "/week%2016/2022/12/14/14-through-15-Hacks.html",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "Unit 3 Section 13.2-13.3",
            "content": "3.12 Part 1 Problem 1: This problem involves parameters Qais is writing code to calculate formulas from his math class. He’s currently working on a procedure to calculate average speed, based on this formula: Average speed= . Total Time/Total Distance​ . Highlight which of these is the best procedure for calculating and displaying average speed. PROCEDURE calcAvgSpeed (distance, time) { DISPLAY (distance/time) } PROCEDURE calcAvgSpeed (distance) { DISPLAY (distance/time) } PROCEDURE calcAvgSpeed (distance, time) { DISPLAY (time/distance) } . Problem 2: Procedures with return values James Hunter is looking through his classmate’s program and sees a procedure called heightenEmotions: PROCEDURE heightenEmotions(myEmotion){ moreEnergy ← CONCAT(myEmotion, “!!!”) moreVolume ← UPPER(moreEnergy) . RETURN moreVolume } . That procedure manipulates strings using two built-in procedures, CONCAT for concatenating two strings together, and UPPER for converting a string to uppercase. . James Hunter then sees this line of code: . heightenEmotions(“im mad”) . After that line of code runs, will nothing be displayed? . True, because it does not have DISPLAY in the procedure . False . Problem 3: Procedures with return values Bubz is writing a program to calculate the carbon footprint of his activities. The procedure calcFlightFootprint calculates the pounds of carbon dioxide produced per passenger in a flight that covers a given number of miles and seats a given number of passengers. PROCEDURE calcFlightFootprint(numMiles, numPassengers) { . CO2_PER_MILE ← 53.29 . carbonPerFlight ← numMiles * CO2_PER_MILE . carbonPerPassenger ← carbonPerFlight / numPassengers . RETURN carbonPerPassenger . } . Bubz wants to use that procedure to calculate the total footprint for his two upcoming flights: LA to NY: 2,451 miles and 118 passengers NY to London: 3,442 miles and 252 passengers . Which of these code snippets successfully calculates and stores her total footprint? Highlight 2 answers. . totalFootprint ← calcFlightFootprint(2451, 118) + calcFlightFootprint(3442, 252) . totalFootprint ← calcFlightFootprint(2451, 118 + 3442, 252) . totalFootprint ← calcFlightFootprint((2451, 118) + (3442, 252)) . laNyCarbon ← calcFlightFootprint(2451, 118) nyLondonCarbon ← calcFlightFootprint(3442, 252) totalFootprint ← laNyCarbon + nyLondonCarbon . 3.12 Part 2 What is a? a – ? b – ? c – 9 PROCEDURE find a () { b &lt;– 9 9 a &lt;– b c Print (a) } . Answer: a is 9 . What is the cost? cost ⟵ 173 tax - 10% PROCEDURE applytax (cost, percentDiscounted){ . temp &lt;– 100 + percentTaxed temp &lt;– temp / 100 cost &lt;– cost x temp Print(cost)} Answer: The cost $190.30 . What is the celsius value? Temperature - 103 Degrees PROCEDURE convert Fahrenheit (temperature) { Celsius &lt;– temperature - 32 Celsius &lt;– Celsius x 5/9 Print (Celsius)} . Answer: 39.4 Celsius . 3.13 Parts 1 and 2 Create a procedure that is meant to replace the top running backs yards per game in one season if the current running back has more yards per game Necessary Parameters: toprbyardspg(100), currentrbyards(1260), totalGames(12) PROCEDURE replaceTopRb(toprbyardspg(100), curerntrbyards(1260), totalgames){ If (currentRbYards(1260) &gt; toprbyardspg(100)){ toprbyardspg &lt;– currentRbYards } } Write a procedure that will allow the A+ to get to the 1, while avoiding the black boxes. . PROCEDURE getAplus(){ If (can_MoveForward): Move_Forward Else (can_MoveRight): Rotate_Right Move_Forward If (can_MoveLeft); Rotate_Left Move_forward } Which Is the Correct Way to define the Name of a Procedure? . A. PROCEDURE MYLIST B. PROCEDURE MyList C. procedure mylist . Answer: B. because procedure should be in all capitals and part of the the declared procedure should be capitalized, not all and not none. . Write A Procedure that gets the Santa to the Christmas Tree PROCEDURE SantaToTree{ count = 0 Move_Forward Rotate_Left Move_Forward( until count = 6) break Rotate_Left Move_Forward } What I have learned: I learned the basics in creating a procedure: that the name needs to be simple but make sense that you can use for and while loops and iteration to shorten the code Procedure in the code should be written in all caps like “PROCEDURE” In algorithms: there are many different algorithms to reach a certain solution you can also use for and while loops and iteration to shorten algorithms .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2015/2022/12/14/13.2-13.3-HW.html",
            "relUrl": "/week%2015/2022/12/14/13.2-13.3-HW.html",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "Unit 3 Section 9-11",
            "content": "Unit 3 Lesson 9 and 11 Notes . Some Boolean expressions can be written as equivalent conditional statements . Different algorithms can be developed or used to solve the same problem . Algorithms can be written in different ways and still accomplish the same tasks . Algorithms that appear similar can yield different side effects or results . Some conditional statements can be written as equivalent Boolean expressions . Using existing correct algorithms as building blocks for constructing another algorithm has benefits such as reducing development time, reduce testing, and simplifying the identification of errors. . Knowledge of existing algorithms can help in constructing new ones. Some existing algorithms include: Determining the maximum or minimum value of two or more numbers. Computing the sum or average of two or more numbers. Identifying if an integer is or is not evenly divisible by another integer. Determining a robot’s path through a maze. . Vocab . Selection: is a decision or question. At some point in an algorithm there may need to be a question because the algorithm has reached a step where one or more options are available. . Algorithm: A process or set of rules to be followed in calculations or other problem solving operations, especially by a computer. . Iteration: Repeating steps, or instructions over and over again. ( this could be also often called a loop ) . . Question 4 . binary search tree for [1,2,3,4,6,9,11,69] . . Question 5 . To get 69, begin with the middle index and move on to the following numbers by dividing the first and last indexes by two. You continue until you reach number 69. . Question 6 . . Question 7 . [“Market”, ”Ralphs”, “store”, “Target”, ”Walmart”] . In alphabetical order . Question 8 . Binary search automatically rules out half of the options with each iteration,therefore, it is much faster than sequential search. Since you begin at the middle index, you can either select the group that is higher or lower than the middle index. . Question 9 . Binary Search Tree for [64,36,16,11,9] . . I would find the number 16 which would only take one check since it is the first middle index number . Reflection . Overall, I found these Hacks to be very helpful because they were not so hard where I had not clue what to do forcing me to get help from someone else, but instead offered a challenging yet doable problem set. I learned a lot because the questions got a ibt harder and harder throughout helping me build as I went along. These lessons were a bit challenging at first but with perserverance I was able to understand the concepts which allowed me to perform the hacks well. The presentation was great and I learned a lot from it. I think it was overall good. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2015/2022/12/12/Unit-9-through-11-HW.html",
            "relUrl": "/week%2015/2022/12/12/Unit-9-through-11-HW.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "Vocab Fr",
            "content": "Section 8 Big Ideas/Learning Objectives . Understanding What is Iteration | Using for and while loops | . Section 10 Big Ideas/Learning Objectives . Understanding how to edit lists by adding, inserting, and removing data | Using loops to iterate through lists and abstract data | Determine the results or side effects of iteration statements | Write sorting algorithms using iteration | . Section 8 Necessary Vocabulary . Iteration - Repitition of a Process For Loop - FOR LOOP repeats a function for a set number of times; I is the number of times repeated . While Loop - The while loop is used to repeat a section of code an unknown number of times until a specific condition is met . Initialization - What sets the counter variable to a starting value. For example (var i = 0) represents an initial value of 0. . Condition - Allows the computer to know whether or not to keep repeating the loop. increment/decrement - Modifies the counter variable after each repetition. . Section 10 Necessary Vocabulary . Indexing / List Index - The position of an element in a list, starting from 0 append, remove, pop - Various methods, append adds an element to the end, remove removes at an index, and pop removes the last item. | Elements [in a list] - An item in a list. | Nesting - Having one data type or function inside another data type or function, such as lists or loops. array - Another name for a list, depends on the language | . What is Iteration? An Iterative statements are also called loops, and they repeat themselves over and over until the condition for stopping is met. . In College Board’s Pseudocode, the first is a REPEAT n TIMES loop, where the n represents some number. . The second type of loop is a REPEAT UNTIL (condition) loop, where the loop will continue to run until a condition is met. . A while loop is very similar to an if conditional, except that a while is continually executed until it’s no longer true and an if is only executed once. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2022/12/07/Vocab-fr.html",
            "relUrl": "/2022/12/07/Vocab-fr.html",
            "date": " • Dec 7, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "8 Through 10 Fr copy",
            "content": "{ “cells”: [ { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “# Unit 3 Section 8-10 Blog n”, “- title: Unit 3 Section 3-4 Blog n”, “- tags: [week 14] n”, “- toc: true n”, “- comments: true” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Section 8 Big Ideas/Learning Objectives n”, “- Understanding What is Iteration n”, “- Using for and while loops n”, “ n”, “Section 10 Big Ideas/Learning Objectives n”, “- Understanding how to edit lists by adding, inserting, and removing data n”, “- Using loops to iterate through lists and abstract data n”, “- Determine the results or side effects of iteration statements n”, “- Write sorting algorithms using iteration n”, “ n”, “Section 8 Necessary Vocabulary n”, “ n”, “Iteration - Repitition of a Process n”, “For Loop - FOR LOOP repeats a function for a set number of times; I is the number of times repeated n”, “ n”, “While Loop - The while loop is used to repeat a section of code an unknown number of times until a specific condition is met n”, “ n”, “Initialization - What sets the counter variable to a starting value. For example (var i = 0) represents an initial value of 0. n”, “ n”, “Condition - Allows the computer to know whether or not to keep repeating the loop. n”, “increment/decrement - Modifies the counter variable after each repetition. n”, “ n”, “Section 10 Necessary Vocabulary n”, “- Indexing / List Index - The position of an element in a list, starting from 0 append, remove, pop - Various methods, append adds an element to the end, remove removes at an index, and pop removes the last item. n”, “- Elements [in a list] - An item in a list. n”, “- Nesting - Having one data type or function inside another data type or function, such as lists or loops. array - Another name for a list, depends on the language n”, “ n”, “What is Iteration? n”, “An Iterative statements are also called loops, and they repeat themselves over and over until the condition for stopping is met. n”, “ n”, “In College Board’s Pseudocode, the first is a REPEAT n TIMES loop, where the n represents some number. n”, “ n”, “The second type of loop is a REPEAT UNTIL (condition) loop, where the loop will continue to run until a condition is met. n”, “ n”, “A while loop is very similar to an if conditional, except that a while is continually executed until it’s no longer true and an if is only executed once.” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Practice n”, “ n”, “Consider the Following Code Segment. What is the Counter Variable and the Condition set as?” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “for (var i = 10; i &gt; 0; i–) { n”, “ println(i); n”, “}” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Answer:Counter Variable: 10, Condition: Greater than 0 n” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Practice n”, “ n”, “Consider the Following Code Segment. How Many times will print(ln) be called?” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “for (var i = 1; i &lt;= 10; i++) { n”, “ for (var j = 1; j &lt;= 10; j++) { n”, “ println(i * j); n”, “ } n”, “}” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Answer: 100 Times.The computer will execute the outer for loop 10 times (starting at i = 1 and ending after i = 10). Each time that it executes the outer loop, it will execute the inner for loop 10 times (starting at j = 1 and ending after j = 10). Each inner execution will call println() once.10 times 10 times 1 is 100, so the computer will call println() 100 times. n” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Practice n”, “ n”, “Consider the Following Code Segment. What is it initial value? What does the while loop check?” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “var numRabbits = 2; n”, “var numYears = 0; n”, “while (numRabbits &lt;= 100) { n”, “ numRabbits += (numRabbits/2 * 30); n”, “ numYears++; n”, “}” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “2 Rabbits. The while loop checks that the number of rabbits is less than 100. As long as the population is less the 100, the code inside the loop continues to run” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Exercise 1 n”, “ n”, “ n”, “ n”, “This exercise was quite easy since I overheard you talking about list.reverse, but the instructions asked us to do it with iteration, so I used a for loop and made it run for every value inside the list. The code that I used here was really simple, and all I did was take the original list and then reverse it into a new list and then print that. n”, “ n”, “ n”, “ n”, “ n”, “By using a for loop here, I was able to actually fufill the iteration requirement and able to print the reverse order. However, I am not sure if we were supposed to print each number on a separate line, but I could not figure that out. I assume we would use a for loop function and then print something like i, it would be interesting to find out how to do this, and see if I was close. n”, “ n”, “Excercise 2 n”, “ n” ] }, { “cell_type”: “code”, “execution_count”: null, “metadata”: {}, “outputs”: [], “source”: [ “list = [9, 8, 4, 3, 5, 2, 6, 7, 1, 0] n”, “print(f&quot;array before sort {list}&quot;) n”, “def insertion_sort(list): n”, “ for index in range(1,len(list)): # repeats through length of the array n”, “ value = list[index] n”, “ i = index - 1 n”, “ while i &gt;= 0: n”, “ if value &lt; list[i]: n”, “ list[i+1] = list[i] # shift number in slot i to the right n”, “ list[i] = value # shift value left into slot i n”, “ i = i - 1 n”, “ else: n”, “ break n”, “ n”, “IS = insertion_sort(list) n”, “print(f&quot;array after sort {list}&quot;)” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “I got Question #10 on the quiz because I wasn’t exactly sure how many for loops we needed to use, but I knew that we needed to use a for loop because. There was 3 lists in the list, so I thought we could just use one for loop in order to iterate through. I believe that using one for loop would work but be less efficient, I think that by using 2 for loops it iterates through the lists much faster.” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Overall this homewortk was quite challenging but I think I learned a lot through trial and error. I did not eknow much at the start but I turned to learn how to do some of it making it easier and easier the more I did it. I felt like I knew everything from the quiz and could answer every question. I just had a little bit of a problem with Question 10. I was not sure how many loops are exactly needed to iterate through the lists efficiently. Overall, I felt that the quiz was pretty easy and everything that was in the quiz was covered during the lesson” ] } ], “metadata”: { “kernelspec”: { “display_name”: “Python 3.10.7 64-bit”, “language”: “python”, “name”: “python3” }, “language_info”: { “name”: “python”, “version”: “3.10.7” }, “orig_nbformat”: 4, “vscode”: { “interpreter”: { “hash”: “aee8b7b246df8f9039afb4144a1f6fd8d2ca17a180786b69acc140d282b71a49” } } }, “nbformat”: 4, “nbformat_minor”: 2 } .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2022/12/06/8-through-10-fr-copy.ipynb",
            "relUrl": "/2022/12/06/8-through-10-fr-copy.ipynb",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "Unit 8 Through 10 copy",
            "content": "{ “cells”: [ { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “# Unit 3 Section 8-10 Blog n”, “- title: Unit 3 Section 3-4 Blog n”, “- tags: [week 14] n”, “- toc: true n”, “- comments: true” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Section 8 Big Ideas/Learning Objectives n”, “- Understanding What is Iteration n”, “- Using for and while loops n”, “ n”, “Section 10 Big Ideas/Learning Objectives n”, “- Understanding how to edit lists by adding, inserting, and removing data n”, “- Using loops to iterate through lists and abstract data n”, “- Determine the results or side effects of iteration statements n”, “- Write sorting algorithms using iteration n”, “ n”, “Section 8 Necessary Vocabulary n”, “ n”, “Iteration - Repitition of a Process n”, “For Loop - FOR LOOP repeats a function for a set number of times; I is the number of times repeated n”, “ n”, “While Loop - The while loop is used to repeat a section of code an unknown number of times until a specific condition is met n”, “ n”, “Initialization - What sets the counter variable to a starting value. For example (var i = 0) represents an initial value of 0. n”, “ n”, “Condition - Allows the computer to know whether or not to keep repeating the loop. n”, “increment/decrement - Modifies the counter variable after each repetition. n”, “ n”, “Section 10 Necessary Vocabulary n”, “- Indexing / List Index - The position of an element in a list, starting from 0 append, remove, pop - Various methods, append adds an element to the end, remove removes at an index, and pop removes the last item. n”, “- Elements [in a list] - An item in a list. n”, “- Nesting - Having one data type or function inside another data type or function, such as lists or loops. array - Another name for a list, depends on the language n”, “ n”, “What is Iteration? n”, “An Iterative statements are also called loops, and they repeat themselves over and over until the condition for stopping is met. n”, “ n”, “In College Board’s Pseudocode, the first is a REPEAT n TIMES loop, where the n represents some number. n”, “ n”, “The second type of loop is a REPEAT UNTIL (condition) loop, where the loop will continue to run until a condition is met. n”, “ n”, “A while loop is very similar to an if conditional, except that a while is continually executed until it’s no longer true and an if is only executed once.” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Practice n”, “ n”, “Consider the Following Code Segment. What is the Counter Variable and the Condition set as?” ] }, { “cell_type”: “code”, “execution_count”: null, “metadata”: {}, “outputs”: [], “source”: [ “for (var i = 10; i &gt; 0; i–) { n”, “ println(i); n”, “}” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Answer:Counter Variable: 10, Condition: Greater than 0 n” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Practice n”, “ n”, “Consider the Following Code Segment. How Many times will print(ln) be called? n”, “ n” ] }, { “cell_type”: “code”, “execution_count”: null, “metadata”: {}, “outputs”: [], “source”: [ “ for (var i = 1; i &lt;= 10; i++) { n”, “ for (var j = 1; j &lt;= 10; j++) { n”, “ println(i * j); n”, “ } n”, “}” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Answer: 100 Times.The computer will execute the outer for loop 10 times (starting at i = 1 and ending after i = 10). Each time that it executes the outer loop, it will execute the inner for loop 10 times (starting at j = 1 and ending after j = 10). Each inner execution will call println() once.10 times 10 times 1 is 100, so the computer will call println() 100 times. n” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Practice n”, “ n”, “Consider the Following Code Segment. What is it initial value? What does the while loop check?” ] }, { “cell_type”: “code”, “execution_count”: null, “metadata”: {}, “outputs”: [], “source”: [ “var numRabbits = 2; n”, “var numYears = 0; n”, “while (numRabbits &lt;= 100) { n”, “ numRabbits += (numRabbits/2 * 30); n”, “ numYears++; n”, “} n” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “2 Rabbits. The while loop checks that the number of rabbits is less than 100. As long as the population is less the 100, the code inside the loop continues to run” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Exercise 1 n”, “ n”, “ n”, “ n”, “This exercise was quite easy since I overheard you talking about list.reverse, but the instructions asked us to do it with iteration, so I used a for loop and made it run for every value inside the list. The code that I used here was really simple, and all I did was take the original list and then reverse it into a new list and then print that. n”, “ n”, “ n”, “ n”, “ n”, “By using a for loop here, I was able to actually fufill the iteration requirement and able to print the reverse order. However, I am not sure if we were supposed to print each number on a separate line, but I could not figure that out. I assume we would use a for loop function and then print something like i, it would be interesting to find out how to do this, and see if I was close. n”, “ n”, “Excercise 2 n”, “ n” ] }, { “cell_type”: “code”, “execution_count”: 2, “metadata”: {}, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “array before sort [9, 8, 4, 3, 5, 2, 6, 7, 1, 0] n”, “array after sort [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] n” ] } ], “source”: [ “list = [9, 8, 4, 3, 5, 2, 6, 7, 1, 0] n”, “print(f&quot;array before sort {list}&quot;) n”, “def insertion_sort(list): n”, “ for index in range(1,len(list)): # repeats through length of the array n”, “ value = list[index] n”, “ i = index - 1 n”, “ while i &gt;= 0: n”, “ if value &lt; list[i]: n”, “ list[i+1] = list[i] # shift number in slot i to the right n”, “ list[i] = value # shift value left into slot i n”, “ i = i - 1 n”, “ else: n”, “ break n”, “ n”, “IS = insertion_sort(list) n”, “print(f&quot;array after sort {list}&quot;)” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “ n”, “ n”, “ n”, “ n” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “I got Question #10 on the quiz because I wasn’t exactly sure how many for loops we needed to use, but I knew that we needed to use a for loop because. There was 3 lists in the list, so I thought we could just use one for loop in order to iterate through. I believe that using one for loop would work but be less efficient, I think that by using 2 for loops it iterates through the lists much faster.” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “Overall this homewortk was quite challenging but I think I learned a lot through trial and error. I did not eknow much at the start but I turned to learn how to do some of it making it easier and easier the more I did it. I felt like I knew everything from the quiz and could answer every question. I just had a little bit of a problem with Question 10. I was not sure how many loops are exactly needed to iterate through the lists efficiently. Overall, I felt that the quiz was pretty easy and everything that was in the quiz was covered during the lesson” ] } ], “metadata”: { “kernelspec”: { “display_name”: “Python 3.10.7 64-bit”, “language”: “python”, “name”: “python3” }, “language_info”: { “codemirror_mode”: { “name”: “ipython”, “version”: 3 }, “file_extension”: “.py”, “mimetype”: “text/x-python”, “name”: “python”, “nbconvert_exporter”: “python”, “pygments_lexer”: “ipython3”, “version”: “3.10.7” }, “orig_nbformat”: 4, “vscode”: { “interpreter”: { “hash”: “aee8b7b246df8f9039afb4144a1f6fd8d2ca17a180786b69acc140d282b71a49” } } }, “nbformat”: 4, “nbformat_minor”: 2 } .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2022/12/05/Unit-8-through-10-copy.html",
            "relUrl": "/2022/12/05/Unit-8-through-10-copy.html",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "Unit 3 Section 1-2",
            "content": "Unit 3 Sections 1-2 .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2014/2022/12/02/Blog-About-Grades-on-Hacks.html",
            "relUrl": "/week%2014/2022/12/02/Blog-About-Grades-on-Hacks.html",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "Second Group Blog",
            "content": "",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2022/11/30/Second-Group-Blog.html",
            "relUrl": "/2022/11/30/Second-Group-Blog.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "Unit 3 Section 3-4 Blog",
            "content": "Notes . -When a coder chooses between two possible results, this is called selection. . -Iteration is the process of repeating a step until the requirement is met. . -Programs created using programming languages can execute algorithms that have been expressed in a variety of ways. . -Sequencing, selection, and iteration can be combined to create any algorithm. . -We humans use algorithms on a daily basis; an algorithm is a finite set of instructions that accomplishes a certain task. . -Implementing steps sequentially entails, for instance, carrying out the first action before moving on to the second, third, etc. . Vocab . sequencing- outline or set of steps that we do and follow in order that they are given . variable- you can store an actual value, the value of a variable in another variable, the result of an operation, or result of a procedural call . String: a sequence of characters . algorithm- finite set of instructions that accomplish a specific task, composed of sequencing, selection, and iteration. . selection- a section of code is run only if a condition is met. . iteration- repeating steps or instructions over and over again . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . Sequencing: all pf the steps . Iteration:They go through all the numbers in the step &quot;for I in numbers:&quot; . Selection: &quot;if (numbers[i]% 2 == 0)&quot; due to the fact that they sort each number to discover the even ones, . 3.3 Video 2 Hacks . Practice Problems . given the following code segment below: | a ⟵ 7 . b ⟵ 1 . c ⟵ 3 . d ⟵ 4 . a ⟵ b . b ⟵ c + d . d ⟵ b . a = 1, b = 7, c = 3, d = 7 . consider the following code segment: | hot ⟵ true . cold ⟵ false . cold ⟵ hot . hot ⟵ cold . what are the values of hot and cold after executing the code segment? . the value of hot is true, the value of cold is true | the value of hot is false, the value of cold is true | the value of hot is true, the value of cold is false | the value of hot is false, the value of cold is false | Answer: 1. the value of hot is true, the value of cold is true . 3.4 Video 1 Hacks . String Homework . Test 1 . firstName &lt;- &quot;Bob&quot; lastName &lt;- &quot;Smith&quot; var &lt;- substring(firstName, 1, 1) name &lt;- concat(lastName, var) email &lt;- concat(name, &quot;@gmail.com&quot;) DISPLAY(email) . | What would the result be? . Hint: var = &quot;B&quot; name = &quot;SmithB&quot; . Answer: SmithB@gmail.com . | . . Test 2 . word1 &lt;- &quot;computer&quot; word2 &lt;- &quot;textbooks&quot; length1 &lt;- len(word1)/2 length2 &lt;- len(word2)/3 first &lt;- substring(word1, 2, len1) second &lt;- substring(word2, len2+3, len2) newWord &lt;- concat(first, second) DISPLAY(newWord) . Answer:ompuook . | . Reflection . The presentation was very interesting because it was interactive.These lessons were a bit challenging at first but with perserverance I was able to understand the concepts which allowed me to answer the questions correctly. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2022/11/30/Second-Group-Blog-fr.html",
            "relUrl": "/2022/11/30/Second-Group-Blog-fr.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "Unit 3 Section 3-4 Blog",
            "content": "Notes . -Programs created using programming languages can execute algorithms that have been expressed in a variety of ways. . -Sequencing, selection, and iteration can be combined to create any algorithm. . -We humans use algorithms on a daily basis; an algorithm is a finite set of instructions that accomplishes a certain task. . -Implementing steps sequentially entails, for instance, carrying out the first action before moving on to the second, third, etc. . -When a coder chooses between two possible results, this is called selection. . -Iteration is the process of repeating a step until the requirement is met. . Vocab . algorithm- finite set of instructions that accomplish a specific task, composed of sequencing, selection, and iteration. . selection- a section of code is run only if a condition is met. . iteration- repeating steps or instructions over and over again . sequencing- outline or set of steps that we do and follow in order that they are given . variable- you can store an actual value, the value of a variable in another variable, the result of an operation, or result of a procedural call . String: a sequence of characters . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . Sequencing: all pf the steps . Iteration:They go through all the numbers in the step &quot;for I in numbers:&quot; . Selection: &quot;if (numbers[i]% 2 == 0)&quot; due to the fact that they sort each number to discover the even ones, . i = 1 starString = &quot;*&quot; while i &lt;= 5: j = 1 while j &lt;= i: print (&quot;*&quot;, end= &quot;&quot;) j += 1 print () i += 1 . * ** *** **** ***** . Sequence: all steps . Iteration: &quot;While I &lt;&gt;= 5:&quot; since they keep going until i&#39;s 5. . Selection: &quot;While j &lt;&gt;= I&quot; since this is where they choose what j is, . 3.3 Video 2 Hacks . Practice Problems . given the following code segment below: | a ⟵ 7 . b ⟵ 1 . c ⟵ 3 . d ⟵ 4 . a ⟵ b . b ⟵ c + d . d ⟵ b . a = 1, b = 7, c = 3, d = 7 . consider the following code segment: | hot ⟵ true . cold ⟵ false . cold ⟵ hot . hot ⟵ cold . what are the values of hot and cold after executing the code segment? . the value of hot is true, the value of cold is true | the value of hot is false, the value of cold is true | the value of hot is true, the value of cold is false | the value of hot is false, the value of cold is false | Answer: 1. the value of hot is true, the value of cold is true . Sequencing | num1 = 3 num2 = 1 num3 = 5 num1 = num2 + num3 num2 = num1 + num3 # num2 is now the new num1 + num3 . Answer num1 = 6, num2 = 11 . 3.4 Video 1 Hacks . String Homework . Test 1 . firstName &lt;- &quot;Bob&quot; lastName &lt;- &quot;Smith&quot; var &lt;- substring(firstName, 1, 1) name &lt;- concat(lastName, var) email &lt;- concat(name, &quot;@gmail.com&quot;) DISPLAY(email) . | What would the result be? . Hint: var = &quot;B&quot; name = &quot;SmithB&quot; . Answer: SmithB@gmail.com . | . . Test 2 . word1 &lt;- &quot;computer&quot; word2 &lt;- &quot;textbooks&quot; length1 &lt;- len(word1)/2 length2 &lt;- len(word2)/3 first &lt;- substring(word1, 2, len1) second &lt;- substring(word2, len2+3, len2) newWord &lt;- concat(first, second) DISPLAY(newWord) . Answer:ompuook . | . Reflection . These lessons were a bit challenging at first but with perserverance I was able to understand the concepts which allowed me to answer the questions correctly. The presentation was great and I learned a lot from it. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2022/11/30/Group-2-blog.html",
            "relUrl": "/2022/11/30/Group-2-blog.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "Unit 3 Section 1-2",
            "content": "Notes . -elements:a single value in a list that has a special index. An index also makes references to elements. . -index:using natural integers when referring entries in a list . -All types of elements can be stored in lists. . -All list operations result in an error notice and program termination if a list index is less than 1 or more than the list length. . -Data abstraction creates a barrier between a data type’s abstract properties and the specifics of its representation. . -A program’s abstraction that may store a value is known as a variable. Each variable has a corresponding data storage that holds a single value at a time, but that value may be a list or other collection, which in turn may hold numerous values. . -The readability of program code and comprehension of the values that the variables represent are improved by using sensible variable names. . -Some computer languages offer data types, which are referred to by variables, to represent data. Numbers, Booleans, lists, and strings are some of these types. . -One form of datum is more appropriate for representing some values than another. . -a variable is an abstraction inside a program that can hold a value . -assign stored values to a variable . Vocab . Applications programming interface (API): which is a list of constructors and instance methods or operations, used to specify the behavior of an abstract data type . list: a sequence of several variables grouped together . variable: a way of storing information in a computer program, which could later be changed, referenced, and used . data types: a set of values and operations on those values . abstract data types: a data type whose internal representation is hidden from the client . client: a program that uses a data type . objects: a structure that can take on a data-type value . Section 1 Assignment 1 . Answers 1 3 1 2 1 4 . Questions I wrote . Determine the type of data that should be used to answer the following question: . What are the most popular pets? Answer: string . True or false, basketball is the best sport? Answer:Boolean . How many colleges have you applied to? Answer: integer . Section 1 Assignment 2 . Answers 3 2 4 2 2 3 1 . Section 2 Assignment . Answers 4 1 3 4 4 2 3 2 6 . Reflection . These lessons were a bit challenging at first but with perserverance I was able to understand the concepts which allowed me to answer the questions correctly. The presentation was great and I learned a lot from it .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2014/2022/11/30/First-Group-Blog.html",
            "relUrl": "/week%2014/2022/11/30/First-Group-Blog.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "Unit 3 Section 1-2",
            "content": "Notes . -A program’s abstraction that may store a value is known as a variable. Each variable has a corresponding data storage that holds a single value at a time, but that value may be a list or other collection, which in turn may hold numerous values. . -The readability of program code and comprehension of the values that the variables represent are improved by using sensible variable names. . -Some computer languages offer data types, which are referred to by variables, to represent data. Numbers, Booleans, lists, and strings are some of these types. . -One form of datum is more appropriate for representing some values than another. . -a variable is an abstraction inside a program that can hold a value . -assign stored values to a variable . -elements:a single value in a list that has a special index. An index also makes references to elements. . -index:using natural integers when referring entries in a list . -All types of elements can be stored in lists. . -All list operations result in an error notice and program termination if a list index is less than 1 or more than the list length. . -Data abstraction creates a barrier between a data type’s abstract properties and the specifics of its representation. . Vocab . list: a sequence of several variables grouped together . variable: a way of storing information in a computer program, which could later be changed, referenced, and used . data types: a set of values and operations on those values . abstract data types: a data type whose internal representation is hidden from the client . client: a program that uses a data type . objects: a structure that can take on a data-type value . Applications programming interface (API): which is a list of constructors and instance methods or operations, used to specify the behavior of an abstract data type . Section 1 Assignment 1 . Answers 1 3 1 2 1 4 . 3 of my own questions . Determine the type of data that should be used to answer the following question: . What are the colors of the rainbow? Answer: string . True or false, coding is fun? Answer:Boolean . How many commits do you have on github? Answer: integer . Section 1 Assignment 2 . Answers 3 2 4 2 2 3 1 . Section 2 Assignment . Answers 4 1 3 4 4 2 3 2 6 . Reflection . These lessons were a bit challenging at first but with perserverance I was able to understand the concepts which allowed me to answer the questions correctly. The presentation was great and I learned a lot from it .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%2014/2022/11/29/Group-1-blog.html",
            "relUrl": "/week%2014/2022/11/29/Group-1-blog.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "Unit 3 Section 5-7",
            "content": "Unit 3 Notes Section 5 Learning Objective: For relationships between two variables expressions or values- write expressions using relational operators . Essential Knowledge: -A Boolean Value is either true or false -The exam reference sheet provides the following relational operators:=,≠,&gt;,&lt;,≥, and≤. These are used to test the relationship between two variables, expressions, or values. A comparison using a relational operator evaluates to a Boolean value. For example, a=b evaluates to true if a and ba are equal otherwise it evaluates to false . Learning Objective: Represent a step-by-step algorithmic process using sequential code statements . Essential Knowledge: -Sequencing is the application of each step of an algorithm in the order in which the code statements are given -A code statement is a part of program code that expresses an action to be carried out -A expression can consist of a value, a variable, an operator, or a procedure call that returns a value -Expressions are evaluated to produce a single value -The evaluation of expressions follows a set order of operation defined by the programming language -Sequential statements execute in the order they appear in the code segment -Clarity and readability are important considerations when expressing an algorithm in a programming language . Learning Objective: Evaluate expressions that use arithmetic operators . Essential Knowledge: . -Arithmetic operators are part of most programming languages and include addition, subtraction, multiplication, division, and modulus operators -The exam reference sheet provides a MOD b, which evaluates to the remainder when a is divide by b. Assume that a is an integer greater than or equal to 0 and b is an integer greater than 0. For example, 17 MOD 5 evaluates to 2 -The order of operations used in mathematics applies when evaluating expressions. The MOD operator has the same precedence as the * and / operators . Section 6 Learning Objective: Express an algorithm that uses selection without using a programming language . Essential Knowledge: -Selection determines which part of an algorithm are executed based on a condition being true or false . Learning Objective: For selection-a.write conditional statements, b.determine the result of conditional statements . Essential Knowledge: -Conditional statements, or “if-statements,” affect the sequential flow of control by executing different statements based on the value of a Boolean expression . Section 7 Learning Objective:For nested selection-a. Write nested conditional statements, b.determine the result of nested conditional statements . Essential Knowledge: -nested conditional statements consist of conditional statements within conditional statements . Brainstorming Hacks Create a step-by-step algorithmic process using sequential code statements and evaluate Write a nested conditonal statement and determine the result of the statements .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2022/11/18/Notes.html",
            "relUrl": "/jupyter/2022/11/18/Notes.html",
            "date": " • Nov 18, 2022"
        }
        
    
  
    
        ,"post43": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | -1 | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Nov 15, 2022"
        }
        
    
  
    
        ,"post44": {
            "title": "Tri 1 Corrections",
            "content": "Tri 1 Corrections . . Which of the following is the most appropriate documentation to appear with the printNums procedure? . A Prints all positive even integers that are less than or equal to max. . B Prints all positive odd integers that are less than or equal to max. . C Prints all positive even integers that are greater than max. . D Prints all positive odd integers that are greater than max. . Corrections: I put A and the correct answer is B. The reason for this as put from collegeboard, “The procedure initializes count to 1. Inside the loop, the value of count is displayed, then count is incremented by 2 to the next odd integer. The loop terminates when count exceeds max, so all positive odd integers less than or equal to max are printed.”. The function starts at 1 and adds two, and all the numbers are positive so therefore they are all odd and positive integers and the count has to be less then the max so the only plausible answer is B. . . Corrections: I but D and it is wrong because “ The procedure does not interchange the values of j and k. Rather, it returns a new list with the values at indices j and k interchanged.” This means that this,: newList[j] ← numList[k] . newList[k] ← numList[j] . Does not mean they are interchanged but instead the values at indices j and k are interchanged. The right answer is B because college board says, “The procedure creates a copy of numList called newList. The element at newList[j] is assigned the element at numList[k], and the element at newList[k] is assigned the element at numList[j]. Therefore, the difference between numList and newList is that the elements at indices j and k are interchanged. The procedure only works if j and k are valid list indices, so it is important to document that j and k are both between 1 and LENGTH(numList), inclusive.”. I now understand what the function is. . . What I got wrong: Collegeboard says, “The Internet was not designed to be completely secure. The protocols used on the Internet do not ensure that all communications are secure.” This means that open protocols and the internet in general was not created to be secure and instead have a different purpose. . Correction: Answer D is correct because collegeboard says, “Protocols are agreed-upon sets of rules that specify the behavior of a system. Protocols used on the Internet enable devices from different manufacturers to communicate in a standard way.” This means the use of open protocols are for their to be an open connection between devices via the internet. . . What I did wrong: I put A and it is wrong because according to Collegeboard, “Statement II is true because colors can be encoded as sequences of bits. Statement III is true because sequences of bits can be used to represent sound.” This basicly just means that I thought binary did not have the capabilities that I thought because it can be used to ehelp encode colors as sequences of bits and for sound as well. . Correction: Answer is D because Binary can do all of these capablities. According to collegeboard, “ All digital data is represented at the lowest level as sequences of bits. Statement I is true because strings of characters can be represented by sequences of bits. Statement II is true because colors can be encoded as sequences of bits. Statement III is true because sequences of bits can be used to represent sound.” This means that binary can do much more then I thought. . . What I did wrong: I put B and it is wrong according to collegeboard because, “Binary 1011 is equivalent to decimal 11 and should be placed before decimal 12.” This is wrong because decimal 12 is greater then binary 1101 since it is 11. . Corrections: The answer is A because sccording to collegeboard, “Binary 1011 is equivalent to 2^3+2^1+2^0, or decimal 11, and binary 1101 is equivalent to 2^3+2^2+2^0, or decimal 13. The order of the numbers (written in their equivalent decimal format) is 5, 11, 12, 13.” I learned more about the numerical values that are associated with binary now. . . What I did wrong: I put D and it is wrong because according to collegeboard, “Instead of using a numeric variable to represent whether the student is absent, it would be more appropriate to use a Boolean variable because the status could be represented using only the values true and false.” This is wrong because a Boolean variable can be defined as it either happens or not which is true or false. . Corrections: The answer is C because according to collegeboard, “A student name is best represented using a string. The status of whether a student is absent can be represented using only the values true and false, so a Boolean variable is most appropriate. For both variables, using meaningful variable names helps with the readability of the code segment.” You use true false logic because it either means they are false or not false. . . What I did wrong: According to Collegeboard it is not C because,”Using a list does not prevent a program from changing the value of a variable.” This means what I put is simply not true because I did not understand the nature of a list. . Corrections: The correct answer is B because according to collegeboard, “Using a list as a data abstraction can result in a program that is easier to develop and maintain. It is easier to apply the same algorithm to every element in a list than to apply the same algorithm to many separate variables.” This shows how a list can help easily develop and maintain as a data abstraction of a program. . . What I did wrong: The character “e” is the character at index 2 of the string element at index 2 in wordList. This is wrong because it is clearly not index 3 of the wordlist. . Corrections: According to collegeboard the answer is C because “The element at index 3 in wordList is “ghi”. The character at index 2 of “ghi” is “h”.” No explanation when reading it, it makes perfect sense in retrospect. . . What I did wrong: I selected answer B but it is wrong because according to collegeboard, “The last assignment statement assigns a copy of myList to yourList, so the contents of yourList are changed.” So therefore it is the opposite of what I actually did. . Correction: According to collegeboard, “The last assignment statement assigns a copy of myList to yourList. Since myList contains [10, 30, 50, 70], yourList will also contain [10, 30, 50, 70].” which basically means that due to the function your list will also have the odd numbers so it is therefore A. . . What I did wrong: I put C but according to collegeboard, it id wrong because, “This code segment assigns maxPS the value 50 when time &gt; 120 and assigns maxPS the value 30 otherwise.” This basically means 120 was not put in the right order because the if-else statement was wrong. 30 and 50 should be switched. . Correction: The correct answer is D and collegeboard says, “This code segment uses the IF statement to set maxPS to 30 when time &gt; 120 and uses the ELSE statement to set maxPS to 50 otherwise.” This makes more sense because 50 should come after the else statement. . . Corrections: According to collegeboard, “ The first three statements assign values to the variables. Since num1 &lt; num2 evaluates to false, the body of the ELSE block is executed and num3 is assigned the value 4. Since num2 ≥ num3 evaluates to true, the body of the second IF block is executed and num1 is assigned the value 8. Lastly, sum is assigned the value of 8 + 4 + 4, or 16.” I instead did 8 + 4 and just that. I forgot to include the other 4. . . What I did wrong: It is clear when reading “The code segment iterates through each element in the list, incrementing count1 for each positive value and incrementing count2 otherwise. There are only two positive values in the list, not five.” that the values I picked did not match up. . Corrections: According to collegeboard, “The code segment iterates through each element in the list, incrementing count1 for each positive value and incrementing count2 otherwise. The list contains two positive values, so count1 is 2 and count2 is 3.” This makes a lot more sense when you look at the coding. . . Corrections: C is clearly the only option correct because according to collegeboard, “The first three statements assign values to the variables. The fourth statement assigns the value of y (which is 50) to x. The fifth statement assigns the value of z (which is 75) to y. The sixth statement assigns the value of x (which is 50) to z. Therefore, x and z both have the value 50.” When the statement is executed, the top line of Y points to x which has a value of 25 which therefore puts the number under 50. . . Corrections: The Answer I put was B because I had no idea what to do, but the answer is A because according to collegeboard, “This statement will correctly form the initials. It uses calls to prefix to obtain the first letters of each name, then uses a call to concat to concatenate the two letters in the correct order.” This now helps me understand how to cormat initials and names. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2022/11/07/Corrections.html",
            "relUrl": "/jupyter/2022/11/07/Corrections.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post45": {
            "title": "Title",
            "content": "alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i+1) + &quot; letter in the alphabet&quot;) i += 1 . The letter b is the 2 letter in the alphabet . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 0 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count+1) + &quot; letter in the alphabet&quot;) count += 1 . The letter b is the 1 letter in the alphabet . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) elif numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) del newNumbers[0] print(&quot;list after deleteing 0: &quot;, newNumbers) . [0, 2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98] list after deleteing 0: [2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98] . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99,} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Luke&#39;s Diner Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #code should prompts the user multiple times, until they type &quot;Done&quot; while True: item = input(&quot;Please select an item from the menu, or type Done&quot;) if item == &quot;Done&quot; : break elif item in menu: total += menu[item] else: print (&quot;Invalid item!&quot;) #code adds price of the menu items selected by the user print(&quot;Your total bill is: $&quot; + str(total)) . Luke&#39;s Diner Menu burger $3.99 fries $1.99 drink $0.99 Invalid item! Your total bill is: $10.96 .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2022/10/18/Corrections.html",
            "relUrl": "/2022/10/18/Corrections.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post46": {
            "title": "Title",
            "content": "Examples of APIs . # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;2348020badmshecfd384514830c4p1f8a42jsn72e4bf449cdf&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) #print(response.text),code that was here, and prints data but not organized # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; for coin in json[&quot;data&quot;][&quot;coins&quot;]: print(f&#39;{coin[&quot;symbol&quot;]} {coin[&quot;name&quot;]} {coin[&quot;price&quot;]}&#39;) . BTC Bitcoin 19319.010248550865 ETH Ethereum 1298.5373263339568 USDT Tether USD 1.0042914822031264 USDC USDC 1.0033426475380618 BNB Binance Coin 271.99903725788334 XRP XRP 0.4670249588334815 BUSD Binance USD 1.0046787901796796 ADA Cardano 0.36234791981912234 SOL Solana 30.079347713948852 DOGE Dogecoin 0.05954176340368893 MATIC Polygon 0.8418230219658197 DOT Polkadot 6.111645460783446 DAI Dai 1.0018636812091348 SHIB Shiba Inu 0.000010070780267767 TRX TRON 0.06210744215685524 WETH Wrapped Ether 1301.448403173206 UNI Uniswap 6.474269303096446 WBTC Wrapped BTC 19334.29792021206 AVAX Avalanche 15.834363139223417 CAKE PancakeSwap 4.4521595241644185 OKB OKB 16.65450028901999 ATOM Cosmos 12.266523398282382 LTC Litecoin 51.27956765904166 FTT FTX Token 23.50563446495291 ETC Ethereum Classic 23.49423351862973 XMR Monero 146.68419417150588 XLM Stellar 0.11137118902545307 ALGO Algorand 0.31825150928458706 BTCB Bitcoin BEP2 19419.051868679657 CRO Cronos 0.10764922282684228 BCH Bitcoin Cash 108.04270318039102 WEMIX WEMIX TOKEN 2.003006717281343 QNT Quant 195.71054623554437 ENS EnergySwap 18.950517432838012 NEAR NEAR Protocol 2.929763822112119 LUNC Terra Classic 0.000250507699702107 HT Huobi Token 7.792767485827178 FLOW Flow 1.5146727376138875 FIL Filecoin 5.108727276596857 VET VeChain 0.022727498272554873 HBAR Hedera 0.06164337265531565 MANA Decentraland 0.6261628362964291 FRAX Frax 1.0021877097270047 EGLD Elrond 56.7868482212396 ICP Internet Computer (DFINITY) 4.906419137898225 XTZ Tezos 1.3619123720360558 IMX Immutable X 0.6120427035515059 LDO Lido DAO Token 1.4594240484897618 SAND The Sandbox 0.7664611182124907 AAVE Aave 80.35405565927665 . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &quot;X-RapidAPI-Key&quot;: &quot;561be3d3dcmsh26da5c03e252f9fp1d2d4fjsn25f9e92f38d8&quot;, &quot;X-RapidAPI-Host&quot;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers) print(response.json) # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . &lt;bound method Response.json of &lt;Response [200]&gt;&gt; World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2022/10/18/Another-API.html",
            "relUrl": "/2022/10/18/Another-API.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post47": {
            "title": "College Board Criteria for Final Project",
            "content": "Program Purpose and Function: To assist in learning more about NBA data, we will create a website that makes it seemless as well as include games within the website to guiz the users. . Data Abstraction: Collect data from varoius existing NBA databases . Managing Complexity: Use a list with various NBA data(PPG,APG,Accolade counts) and use a list to track it . Procedural Abstraction: will define our own funtions for formatting the page and displaying the data . Algorithm Implementation: will use iteration (lists for each funtion) and selection (if/else statements) and sequencing (step by step processes) . Testing: We will test every aspect of our project (and often) to ensure we identify and correct our mistakes. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2022/10/15/Final-Project-Collegeboard-Criteria.html",
            "relUrl": "/jupyter/2022/10/15/Final-Project-Collegeboard-Criteria.html",
            "date": " • Oct 15, 2022"
        }
        
    
  
    
        ,"post48": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . import requests url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &quot;X-RapidAPI-Key&quot;: &quot;0bde326e5amsh275ea78168cb1c5p1be85bjsn66111b219215&quot;, &quot;X-RapidAPI-Host&quot;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers) print(response.text) . {&#34;countries_stat&#34;:[{&#34;country_name&#34;:&#34;USA&#34;,&#34;cases&#34;:&#34;82,649,779&#34;,&#34;deaths&#34;:&#34;1,018,316&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;80,434,925&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1,465&#34;,&#34;active_cases&#34;:&#34;1,196,538&#34;,&#34;total_cases_per_1m_population&#34;:&#34;247,080&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,044&#34;,&#34;total_tests&#34;:&#34;1,000,275,726&#34;,&#34;tests_per_1m_population&#34;:&#34;2,990,303&#34;},{&#34;country_name&#34;:&#34;India&#34;,&#34;cases&#34;:&#34;43,057,545&#34;,&#34;deaths&#34;:&#34;522,193&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;42,519,479&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;698&#34;,&#34;active_cases&#34;:&#34;15,873&#34;,&#34;total_cases_per_1m_population&#34;:&#34;30,657&#34;,&#34;deaths_per_1m_population&#34;:&#34;372&#34;,&#34;total_tests&#34;:&#34;834,717,702&#34;,&#34;tests_per_1m_population&#34;:&#34;594,319&#34;},{&#34;country_name&#34;:&#34;Brazil&#34;,&#34;cases&#34;:&#34;30,345,654&#34;,&#34;deaths&#34;:&#34;662,663&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;29,364,400&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8,318&#34;,&#34;active_cases&#34;:&#34;318,591&#34;,&#34;total_cases_per_1m_population&#34;:&#34;140,954&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,078&#34;,&#34;total_tests&#34;:&#34;63,776,166&#34;,&#34;tests_per_1m_population&#34;:&#34;296,238&#34;},{&#34;country_name&#34;:&#34;France&#34;,&#34;cases&#34;:&#34;28,244,977&#34;,&#34;deaths&#34;:&#34;145,020&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;25,852,832&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1,677&#34;,&#34;active_cases&#34;:&#34;2,247,125&#34;,&#34;total_cases_per_1m_population&#34;:&#34;430,996&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,213&#34;,&#34;total_tests&#34;:&#34;266,484,045&#34;,&#34;tests_per_1m_population&#34;:&#34;4,066,333&#34;},{&#34;country_name&#34;:&#34;Germany&#34;,&#34;cases&#34;:&#34;24,109,433&#34;,&#34;deaths&#34;:&#34;134,624&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;21,243,000&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1,980&#34;,&#34;active_cases&#34;:&#34;2,731,809&#34;,&#34;total_cases_per_1m_population&#34;:&#34;286,106&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,598&#34;,&#34;total_tests&#34;:&#34;122,332,384&#34;,&#34;tests_per_1m_population&#34;:&#34;1,451,714&#34;},{&#34;country_name&#34;:&#34;UK&#34;,&#34;cases&#34;:&#34;21,933,206&#34;,&#34;deaths&#34;:&#34;173,352&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;20,782,350&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;339&#34;,&#34;active_cases&#34;:&#34;977,504&#34;,&#34;total_cases_per_1m_population&#34;:&#34;320,054&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,530&#34;,&#34;total_tests&#34;:&#34;514,985,782&#34;,&#34;tests_per_1m_population&#34;:&#34;7,514,777&#34;},{&#34;country_name&#34;:&#34;Russia&#34;,&#34;cases&#34;:&#34;18,137,137&#34;,&#34;deaths&#34;:&#34;374,902&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;17,474,628&#34;,&#34;new_deaths&#34;:&#34;168&#34;,&#34;new_cases&#34;:&#34;8,446&#34;,&#34;serious_critical&#34;:&#34;2,300&#34;,&#34;active_cases&#34;:&#34;287,607&#34;,&#34;total_cases_per_1m_population&#34;:&#34;124,187&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,567&#34;,&#34;total_tests&#34;:&#34;273,400,000&#34;,&#34;tests_per_1m_population&#34;:&#34;1,871,995&#34;},{&#34;country_name&#34;:&#34;S. Korea&#34;,&#34;cases&#34;:&#34;16,895,194&#34;,&#34;deaths&#34;:&#34;22,133&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;109&#34;,&#34;new_cases&#34;:&#34;64,725&#34;,&#34;serious_critical&#34;:&#34;726&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;329,028&#34;,&#34;deaths_per_1m_population&#34;:&#34;431&#34;,&#34;total_tests&#34;:&#34;15,804,065&#34;,&#34;tests_per_1m_population&#34;:&#34;307,778&#34;},{&#34;country_name&#34;:&#34;Italy&#34;,&#34;cases&#34;:&#34;16,079,209&#34;,&#34;deaths&#34;:&#34;162,609&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;14,684,371&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;409&#34;,&#34;active_cases&#34;:&#34;1,232,229&#34;,&#34;total_cases_per_1m_population&#34;:&#34;266,648&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,697&#34;,&#34;total_tests&#34;:&#34;211,365,630&#34;,&#34;tests_per_1m_population&#34;:&#34;3,505,156&#34;},{&#34;country_name&#34;:&#34;Turkey&#34;,&#34;cases&#34;:&#34;15,016,270&#34;,&#34;deaths&#34;:&#34;98,676&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;14,854,475&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;975&#34;,&#34;active_cases&#34;:&#34;63,119&#34;,&#34;total_cases_per_1m_population&#34;:&#34;174,654&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,148&#34;,&#34;total_tests&#34;:&#34;158,110,923&#34;,&#34;tests_per_1m_population&#34;:&#34;1,838,986&#34;},{&#34;country_name&#34;:&#34;Spain&#34;,&#34;cases&#34;:&#34;11,786,036&#34;,&#34;deaths&#34;:&#34;103,908&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,261,340&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;339&#34;,&#34;active_cases&#34;:&#34;420,788&#34;,&#34;total_cases_per_1m_population&#34;:&#34;251,906&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,221&#34;,&#34;total_tests&#34;:&#34;471,036,328&#34;,&#34;tests_per_1m_population&#34;:&#34;10,067,575&#34;},{&#34;country_name&#34;:&#34;Vietnam&#34;,&#34;cases&#34;:&#34;10,563,502&#34;,&#34;deaths&#34;:&#34;43,013&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9,086,075&#34;,&#34;new_deaths&#34;:&#34;9&#34;,&#34;new_cases&#34;:&#34;8,813&#34;,&#34;serious_critical&#34;:&#34;612&#34;,&#34;active_cases&#34;:&#34;1,434,414&#34;,&#34;total_cases_per_1m_population&#34;:&#34;106,789&#34;,&#34;deaths_per_1m_population&#34;:&#34;435&#34;,&#34;total_tests&#34;:&#34;85,789,114&#34;,&#34;tests_per_1m_population&#34;:&#34;867,262&#34;},{&#34;country_name&#34;:&#34;Argentina&#34;,&#34;cases&#34;:&#34;9,060,923&#34;,&#34;deaths&#34;:&#34;128,344&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;8,895,999&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;412&#34;,&#34;active_cases&#34;:&#34;36,580&#34;,&#34;total_cases_per_1m_population&#34;:&#34;197,215&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,793&#34;,&#34;total_tests&#34;:&#34;35,716,069&#34;,&#34;tests_per_1m_population&#34;:&#34;777,376&#34;},{&#34;country_name&#34;:&#34;Netherlands&#34;,&#34;cases&#34;:&#34;8,035,603&#34;,&#34;deaths&#34;:&#34;22,206&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,643,520&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;94&#34;,&#34;active_cases&#34;:&#34;369,877&#34;,&#34;total_cases_per_1m_population&#34;:&#34;467,096&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,291&#34;,&#34;total_tests&#34;:&#34;21,107,399&#34;,&#34;tests_per_1m_population&#34;:&#34;1,226,938&#34;},{&#34;country_name&#34;:&#34;Japan&#34;,&#34;cases&#34;:&#34;7,621,562&#34;,&#34;deaths&#34;:&#34;29,284&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,135,403&#34;,&#34;new_deaths&#34;:&#34;27&#34;,&#34;new_cases&#34;:&#34;43,721&#34;,&#34;serious_critical&#34;:&#34;195&#34;,&#34;active_cases&#34;:&#34;456,875&#34;,&#34;total_cases_per_1m_population&#34;:&#34;60,596&#34;,&#34;deaths_per_1m_population&#34;:&#34;233&#34;,&#34;total_tests&#34;:&#34;46,690,473&#34;,&#34;tests_per_1m_population&#34;:&#34;371,215&#34;},{&#34;country_name&#34;:&#34;Iran&#34;,&#34;cases&#34;:&#34;7,216,040&#34;,&#34;deaths&#34;:&#34;140,975&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;6,966,954&#34;,&#34;new_deaths&#34;:&#34;13&#34;,&#34;new_cases&#34;:&#34;528&#34;,&#34;serious_critical&#34;:&#34;1,046&#34;,&#34;active_cases&#34;:&#34;108,111&#34;,&#34;total_cases_per_1m_population&#34;:&#34;83,972&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,641&#34;,&#34;total_tests&#34;:&#34;50,811,054&#34;,&#34;tests_per_1m_population&#34;:&#34;591,284&#34;},{&#34;country_name&#34;:&#34;Colombia&#34;,&#34;cases&#34;:&#34;6,091,094&#34;,&#34;deaths&#34;:&#34;139,771&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,924,433&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;342&#34;,&#34;active_cases&#34;:&#34;26,890&#34;,&#34;total_cases_per_1m_population&#34;:&#34;117,448&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,695&#34;,&#34;total_tests&#34;:&#34;34,355,022&#34;,&#34;tests_per_1m_population&#34;:&#34;662,433&#34;},{&#34;country_name&#34;:&#34;Indonesia&#34;,&#34;cases&#34;:&#34;6,043,768&#34;,&#34;deaths&#34;:&#34;156,067&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,868,251&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2,771&#34;,&#34;active_cases&#34;:&#34;19,450&#34;,&#34;total_cases_per_1m_population&#34;:&#34;21,682&#34;,&#34;deaths_per_1m_population&#34;:&#34;560&#34;,&#34;total_tests&#34;:&#34;94,877,499&#34;,&#34;tests_per_1m_population&#34;:&#34;340,374&#34;},{&#34;country_name&#34;:&#34;Poland&#34;,&#34;cases&#34;:&#34;5,991,197&#34;,&#34;deaths&#34;:&#34;115,948&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,334,375&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;344&#34;,&#34;serious_critical&#34;:&#34;1,588&#34;,&#34;active_cases&#34;:&#34;540,874&#34;,&#34;total_cases_per_1m_population&#34;:&#34;158,616&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,070&#34;,&#34;total_tests&#34;:&#34;36,027,053&#34;,&#34;tests_per_1m_population&#34;:&#34;953,808&#34;},{&#34;country_name&#34;:&#34;Mexico&#34;,&#34;cases&#34;:&#34;5,733,514&#34;,&#34;deaths&#34;:&#34;324,117&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,033,892&#34;,&#34;new_deaths&#34;:&#34;57&#34;,&#34;new_cases&#34;:&#34;802&#34;,&#34;serious_critical&#34;:&#34;4,798&#34;,&#34;active_cases&#34;:&#34;375,505&#34;,&#34;total_cases_per_1m_population&#34;:&#34;43,641&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,467&#34;,&#34;total_tests&#34;:&#34;15,762,889&#34;,&#34;tests_per_1m_population&#34;:&#34;119,981&#34;},{&#34;country_name&#34;:&#34;Australia&#34;,&#34;cases&#34;:&#34;5,689,377&#34;,&#34;deaths&#34;:&#34;6,991&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,274,197&#34;,&#34;new_deaths&#34;:&#34;21&#34;,&#34;new_cases&#34;:&#34;34,769&#34;,&#34;serious_critical&#34;:&#34;135&#34;,&#34;active_cases&#34;:&#34;408,189&#34;,&#34;total_cases_per_1m_population&#34;:&#34;218,537&#34;,&#34;deaths_per_1m_population&#34;:&#34;269&#34;,&#34;total_tests&#34;:&#34;68,845,476&#34;,&#34;tests_per_1m_population&#34;:&#34;2,644,452&#34;},{&#34;country_name&#34;:&#34;Ukraine&#34;,&#34;cases&#34;:&#34;4,997,224&#34;,&#34;deaths&#34;:&#34;108,306&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;177&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;115,517&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,504&#34;,&#34;total_tests&#34;:&#34;19,521,252&#34;,&#34;tests_per_1m_population&#34;:&#34;451,259&#34;},{&#34;country_name&#34;:&#34;Malaysia&#34;,&#34;cases&#34;:&#34;4,427,067&#34;,&#34;deaths&#34;:&#34;35,491&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;4,310,599&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;89&#34;,&#34;active_cases&#34;:&#34;80,977&#34;,&#34;total_cases_per_1m_population&#34;:&#34;133,690&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,072&#34;,&#34;total_tests&#34;:&#34;58,332,799&#34;,&#34;tests_per_1m_population&#34;:&#34;1,761,549&#34;},{&#34;country_name&#34;:&#34;Thailand&#34;,&#34;cases&#34;:&#34;4,165,874&#34;,&#34;deaths&#34;:&#34;27,778&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,954,945&#34;,&#34;new_deaths&#34;:&#34;126&#34;,&#34;new_cases&#34;:&#34;17,784&#34;,&#34;serious_critical&#34;:&#34;1,496&#34;,&#34;active_cases&#34;:&#34;183,151&#34;,&#34;total_cases_per_1m_population&#34;:&#34;59,414&#34;,&#34;deaths_per_1m_population&#34;:&#34;396&#34;,&#34;total_tests&#34;:&#34;17,270,775&#34;,&#34;tests_per_1m_population&#34;:&#34;246,317&#34;},{&#34;country_name&#34;:&#34;Austria&#34;,&#34;cases&#34;:&#34;4,104,859&#34;,&#34;deaths&#34;:&#34;18,047&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,989,860&#34;,&#34;new_deaths&#34;:&#34;12&#34;,&#34;new_cases&#34;:&#34;5,810&#34;,&#34;serious_critical&#34;:&#34;121&#34;,&#34;active_cases&#34;:&#34;96,952&#34;,&#34;total_cases_per_1m_population&#34;:&#34;451,125&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,983&#34;,&#34;total_tests&#34;:&#34;181,825,734&#34;,&#34;tests_per_1m_population&#34;:&#34;19,982,688&#34;},{&#34;country_name&#34;:&#34;Israel&#34;,&#34;cases&#34;:&#34;4,054,342&#34;,&#34;deaths&#34;:&#34;10,658&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;4,009,152&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;220&#34;,&#34;active_cases&#34;:&#34;34,532&#34;,&#34;total_cases_per_1m_population&#34;:&#34;434,735&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,143&#34;,&#34;total_tests&#34;:&#34;41,373,364&#34;,&#34;tests_per_1m_population&#34;:&#34;4,436,346&#34;},{&#34;country_name&#34;:&#34;Belgium&#34;,&#34;cases&#34;:&#34;4,015,791&#34;,&#34;deaths&#34;:&#34;31,319&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,726,457&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;169&#34;,&#34;active_cases&#34;:&#34;258,015&#34;,&#34;total_cases_per_1m_population&#34;:&#34;343,798&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,681&#34;,&#34;total_tests&#34;:&#34;33,456,470&#34;,&#34;tests_per_1m_population&#34;:&#34;2,864,259&#34;},{&#34;country_name&#34;:&#34;Czechia&#34;,&#34;cases&#34;:&#34;3,895,544&#34;,&#34;deaths&#34;:&#34;40,081&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,838,099&#34;,&#34;new_deaths&#34;:&#34;5&#34;,&#34;new_cases&#34;:&#34;911&#34;,&#34;serious_critical&#34;:&#34;43&#34;,&#34;active_cases&#34;:&#34;17,364&#34;,&#34;total_cases_per_1m_population&#34;:&#34;362,550&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,730&#34;,&#34;total_tests&#34;:&#34;55,117,064&#34;,&#34;tests_per_1m_population&#34;:&#34;5,129,629&#34;},{&#34;country_name&#34;:&#34;Portugal&#34;,&#34;cases&#34;:&#34;3,791,744&#34;,&#34;deaths&#34;:&#34;22,162&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;61&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;373,827&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,185&#34;,&#34;total_tests&#34;:&#34;40,748,372&#34;,&#34;tests_per_1m_population&#34;:&#34;4,017,371&#34;},{&#34;country_name&#34;:&#34;South Africa&#34;,&#34;cases&#34;:&#34;3,759,689&#34;,&#34;deaths&#34;:&#34;100,298&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,632,572&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;175&#34;,&#34;active_cases&#34;:&#34;26,819&#34;,&#34;total_cases_per_1m_population&#34;:&#34;61,981&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,653&#34;,&#34;total_tests&#34;:&#34;24,313,334&#34;,&#34;tests_per_1m_population&#34;:&#34;400,824&#34;},{&#34;country_name&#34;:&#34;Canada&#34;,&#34;cases&#34;:&#34;3,695,585&#34;,&#34;deaths&#34;:&#34;38,777&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,426,082&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;426&#34;,&#34;active_cases&#34;:&#34;230,726&#34;,&#34;total_cases_per_1m_population&#34;:&#34;96,391&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,011&#34;,&#34;total_tests&#34;:&#34;60,536,359&#34;,&#34;tests_per_1m_population&#34;:&#34;1,578,955&#34;},{&#34;country_name&#34;:&#34;Philippines&#34;,&#34;cases&#34;:&#34;3,684,500&#34;,&#34;deaths&#34;:&#34;60,182&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,610,658&#34;,&#34;new_deaths&#34;:&#34;3&#34;,&#34;new_cases&#34;:&#34;205&#34;,&#34;serious_critical&#34;:&#34;289&#34;,&#34;active_cases&#34;:&#34;13,660&#34;,&#34;total_cases_per_1m_population&#34;:&#34;32,835&#34;,&#34;deaths_per_1m_population&#34;:&#34;536&#34;,&#34;total_tests&#34;:&#34;29,427,586&#34;,&#34;tests_per_1m_population&#34;:&#34;262,246&#34;},{&#34;country_name&#34;:&#34;Switzerland&#34;,&#34;cases&#34;:&#34;3,579,867&#34;,&#34;deaths&#34;:&#34;13,816&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,378,507&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;90&#34;,&#34;active_cases&#34;:&#34;187,544&#34;,&#34;total_cases_per_1m_population&#34;:&#34;408,247&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,576&#34;,&#34;total_tests&#34;:&#34;20,666,182&#34;,&#34;tests_per_1m_population&#34;:&#34;2,356,766&#34;},{&#34;country_name&#34;:&#34;Peru&#34;,&#34;cases&#34;:&#34;3,559,343&#34;,&#34;deaths&#34;:&#34;212,724&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;356&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;105,303&#34;,&#34;deaths_per_1m_population&#34;:&#34;6,293&#34;,&#34;total_tests&#34;:&#34;29,592,270&#34;,&#34;tests_per_1m_population&#34;:&#34;875,489&#34;},{&#34;country_name&#34;:&#34;Chile&#34;,&#34;cases&#34;:&#34;3,544,463&#34;,&#34;deaths&#34;:&#34;57,375&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,368,772&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;286&#34;,&#34;active_cases&#34;:&#34;118,316&#34;,&#34;total_cases_per_1m_population&#34;:&#34;182,588&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,956&#34;,&#34;total_tests&#34;:&#34;36,711,724&#34;,&#34;tests_per_1m_population&#34;:&#34;1,891,147&#34;},{&#34;country_name&#34;:&#34;Greece&#34;,&#34;cases&#34;:&#34;3,277,557&#34;,&#34;deaths&#34;:&#34;28,867&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,151,717&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;277&#34;,&#34;active_cases&#34;:&#34;96,973&#34;,&#34;total_cases_per_1m_population&#34;:&#34;317,250&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,794&#34;,&#34;total_tests&#34;:&#34;78,872,546&#34;,&#34;tests_per_1m_population&#34;:&#34;7,634,431&#34;},{&#34;country_name&#34;:&#34;Denmark&#34;,&#34;cases&#34;:&#34;2,959,040&#34;,&#34;deaths&#34;:&#34;6,072&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,929,091&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;15&#34;,&#34;active_cases&#34;:&#34;23,877&#34;,&#34;total_cases_per_1m_population&#34;:&#34;507,639&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,042&#34;,&#34;total_tests&#34;:&#34;127,141,200&#34;,&#34;tests_per_1m_population&#34;:&#34;21,811,751&#34;},{&#34;country_name&#34;:&#34;Romania&#34;,&#34;cases&#34;:&#34;2,888,318&#34;,&#34;deaths&#34;:&#34;65,427&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,606,660&#34;,&#34;new_deaths&#34;:&#34;6&#34;,&#34;new_cases&#34;:&#34;494&#34;,&#34;serious_critical&#34;:&#34;216&#34;,&#34;active_cases&#34;:&#34;216,231&#34;,&#34;total_cases_per_1m_population&#34;:&#34;151,968&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,442&#34;,&#34;total_tests&#34;:&#34;22,594,702&#34;,&#34;tests_per_1m_population&#34;:&#34;1,188,815&#34;},{&#34;country_name&#34;:&#34;Sweden&#34;,&#34;cases&#34;:&#34;2,498,388&#34;,&#34;deaths&#34;:&#34;18,656&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,464,421&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;19&#34;,&#34;active_cases&#34;:&#34;15,311&#34;,&#34;total_cases_per_1m_population&#34;:&#34;244,630&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,827&#34;,&#34;total_tests&#34;:&#34;18,493,218&#34;,&#34;tests_per_1m_population&#34;:&#34;1,810,763&#34;},{&#34;country_name&#34;:&#34;Iraq&#34;,&#34;cases&#34;:&#34;2,324,141&#34;,&#34;deaths&#34;:&#34;25,204&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,295,947&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;20&#34;,&#34;active_cases&#34;:&#34;2,990&#34;,&#34;total_cases_per_1m_population&#34;:&#34;55,534&#34;,&#34;deaths_per_1m_population&#34;:&#34;602&#34;,&#34;total_tests&#34;:&#34;18,450,939&#34;,&#34;tests_per_1m_population&#34;:&#34;440,871&#34;},{&#34;country_name&#34;:&#34;Serbia&#34;,&#34;cases&#34;:&#34;2,001,144&#34;,&#34;deaths&#34;:&#34;15,953&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,967,786&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;25&#34;,&#34;active_cases&#34;:&#34;17,405&#34;,&#34;total_cases_per_1m_population&#34;:&#34;230,710&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,839&#34;,&#34;total_tests&#34;:&#34;9,427,662&#34;,&#34;tests_per_1m_population&#34;:&#34;1,086,907&#34;},{&#34;country_name&#34;:&#34;Bangladesh&#34;,&#34;cases&#34;:&#34;1,952,532&#34;,&#34;deaths&#34;:&#34;29,127&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,893,131&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1,297&#34;,&#34;active_cases&#34;:&#34;30,274&#34;,&#34;total_cases_per_1m_population&#34;:&#34;11,646&#34;,&#34;deaths_per_1m_population&#34;:&#34;174&#34;,&#34;total_tests&#34;:&#34;13,956,056&#34;,&#34;tests_per_1m_population&#34;:&#34;83,245&#34;},{&#34;country_name&#34;:&#34;Hungary&#34;,&#34;cases&#34;:&#34;1,890,953&#34;,&#34;deaths&#34;:&#34;46,048&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,776,617&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;45&#34;,&#34;active_cases&#34;:&#34;68,288&#34;,&#34;total_cases_per_1m_population&#34;:&#34;196,645&#34;,&#34;deaths_per_1m_population&#34;:&#34;4,789&#34;,&#34;total_tests&#34;:&#34;11,295,119&#34;,&#34;tests_per_1m_population&#34;:&#34;1,174,608&#34;},{&#34;country_name&#34;:&#34;Slovakia&#34;,&#34;cases&#34;:&#34;1,774,808&#34;,&#34;deaths&#34;:&#34;19,839&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,730,712&#34;,&#34;new_deaths&#34;:&#34;10&#34;,&#34;new_cases&#34;:&#34;1,155&#34;,&#34;serious_critical&#34;:&#34;88&#34;,&#34;active_cases&#34;:&#34;24,257&#34;,&#34;total_cases_per_1m_population&#34;:&#34;324,794&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,631&#34;,&#34;total_tests&#34;:&#34;7,057,901&#34;,&#34;tests_per_1m_population&#34;:&#34;1,291,611&#34;},{&#34;country_name&#34;:&#34;Jordan&#34;,&#34;cases&#34;:&#34;1,694,216&#34;,&#34;deaths&#34;:&#34;14,048&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,678,941&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;124&#34;,&#34;active_cases&#34;:&#34;1,227&#34;,&#34;total_cases_per_1m_population&#34;:&#34;163,125&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,353&#34;,&#34;total_tests&#34;:&#34;16,670,254&#34;,&#34;tests_per_1m_population&#34;:&#34;1,605,074&#34;},{&#34;country_name&#34;:&#34;Georgia&#34;,&#34;cases&#34;:&#34;1,654,255&#34;,&#34;deaths&#34;:&#34;16,800&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,635,791&#34;,&#34;new_deaths&#34;:&#34;3&#34;,&#34;new_cases&#34;:&#34;92&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,664&#34;,&#34;total_cases_per_1m_population&#34;:&#34;416,129&#34;,&#34;deaths_per_1m_population&#34;:&#34;4,226&#34;,&#34;total_tests&#34;:&#34;16,807,205&#34;,&#34;tests_per_1m_population&#34;:&#34;4,227,861&#34;},{&#34;country_name&#34;:&#34;Pakistan&#34;,&#34;cases&#34;:&#34;1,527,856&#34;,&#34;deaths&#34;:&#34;30,369&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,493,998&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;105&#34;,&#34;serious_critical&#34;:&#34;186&#34;,&#34;active_cases&#34;:&#34;3,489&#34;,&#34;total_cases_per_1m_population&#34;:&#34;6,683&#34;,&#34;deaths_per_1m_population&#34;:&#34;133&#34;,&#34;total_tests&#34;:&#34;28,048,307&#34;,&#34;tests_per_1m_population&#34;:&#34;122,679&#34;},{&#34;country_name&#34;:&#34;Ireland&#34;,&#34;cases&#34;:&#34;1,509,536&#34;,&#34;deaths&#34;:&#34;6,996&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,415,949&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;41&#34;,&#34;active_cases&#34;:&#34;86,591&#34;,&#34;total_cases_per_1m_population&#34;:&#34;299,669&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,389&#34;,&#34;total_tests&#34;:&#34;12,016,948&#34;,&#34;tests_per_1m_population&#34;:&#34;2,385,571&#34;},{&#34;country_name&#34;:&#34;Norway&#34;,&#34;cases&#34;:&#34;1,423,509&#34;,&#34;deaths&#34;:&#34;2,871&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;20&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;258,925&#34;,&#34;deaths_per_1m_population&#34;:&#34;522&#34;,&#34;total_tests&#34;:&#34;11,002,430&#34;,&#34;tests_per_1m_population&#34;:&#34;2,001,256&#34;},{&#34;country_name&#34;:&#34;Kazakhstan&#34;,&#34;cases&#34;:&#34;1,305,457&#34;,&#34;deaths&#34;:&#34;13,660&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,290,988&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;10&#34;,&#34;serious_critical&#34;:&#34;24&#34;,&#34;active_cases&#34;:&#34;809&#34;,&#34;total_cases_per_1m_population&#34;:&#34;68,056&#34;,&#34;deaths_per_1m_population&#34;:&#34;712&#34;,&#34;total_tests&#34;:&#34;11,575,012&#34;,&#34;tests_per_1m_population&#34;:&#34;603,428&#34;},{&#34;country_name&#34;:&#34;Hong Kong&#34;,&#34;cases&#34;:&#34;1,201,431&#34;,&#34;deaths&#34;:&#34;9,236&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;115&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;157,942&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,214&#34;,&#34;total_tests&#34;:&#34;44,972,952&#34;,&#34;tests_per_1m_population&#34;:&#34;5,912,223&#34;},{&#34;country_name&#34;:&#34;Singapore&#34;,&#34;cases&#34;:&#34;1,180,124&#34;,&#34;deaths&#34;:&#34;1,325&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,109,387&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;9&#34;,&#34;active_cases&#34;:&#34;69,412&#34;,&#34;total_cases_per_1m_population&#34;:&#34;198,895&#34;,&#34;deaths_per_1m_population&#34;:&#34;223&#34;,&#34;total_tests&#34;:&#34;23,712,995&#34;,&#34;tests_per_1m_population&#34;:&#34;3,996,529&#34;},{&#34;country_name&#34;:&#34;Morocco&#34;,&#34;cases&#34;:&#34;1,164,670&#34;,&#34;deaths&#34;:&#34;16,065&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,148,154&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;293&#34;,&#34;active_cases&#34;:&#34;451&#34;,&#34;total_cases_per_1m_population&#34;:&#34;30,893&#34;,&#34;deaths_per_1m_population&#34;:&#34;426&#34;,&#34;total_tests&#34;:&#34;11,237,010&#34;,&#34;tests_per_1m_population&#34;:&#34;298,062&#34;},{&#34;country_name&#34;:&#34;Bulgaria&#34;,&#34;cases&#34;:&#34;1,152,892&#34;,&#34;deaths&#34;:&#34;36,849&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;959,542&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;105&#34;,&#34;active_cases&#34;:&#34;156,501&#34;,&#34;total_cases_per_1m_population&#34;:&#34;168,206&#34;,&#34;deaths_per_1m_population&#34;:&#34;5,376&#34;,&#34;total_tests&#34;:&#34;9,797,011&#34;,&#34;tests_per_1m_population&#34;:&#34;1,429,377&#34;},{&#34;country_name&#34;:&#34;Croatia&#34;,&#34;cases&#34;:&#34;1,117,175&#34;,&#34;deaths&#34;:&#34;15,778&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,096,829&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;22&#34;,&#34;active_cases&#34;:&#34;4,568&#34;,&#34;total_cases_per_1m_population&#34;:&#34;275,195&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,887&#34;,&#34;total_tests&#34;:&#34;4,762,146&#34;,&#34;tests_per_1m_population&#34;:&#34;1,173,065&#34;},{&#34;country_name&#34;:&#34;Cuba&#34;,&#34;cases&#34;:&#34;1,101,486&#34;,&#34;deaths&#34;:&#34;8,523&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,091,603&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;23&#34;,&#34;active_cases&#34;:&#34;1,360&#34;,&#34;total_cases_per_1m_population&#34;:&#34;97,355&#34;,&#34;deaths_per_1m_population&#34;:&#34;753&#34;,&#34;total_tests&#34;:&#34;12,920,253&#34;,&#34;tests_per_1m_population&#34;:&#34;1,141,957&#34;},{&#34;country_name&#34;:&#34;Lebanon&#34;,&#34;cases&#34;:&#34;1,096,320&#34;,&#34;deaths&#34;:&#34;10,374&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,079,455&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;186&#34;,&#34;active_cases&#34;:&#34;6,491&#34;,&#34;total_cases_per_1m_population&#34;:&#34;161,931&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,532&#34;,&#34;total_tests&#34;:&#34;4,795,578&#34;,&#34;tests_per_1m_population&#34;:&#34;708,328&#34;},{&#34;country_name&#34;:&#34;Lithuania&#34;,&#34;cases&#34;:&#34;1,054,618&#34;,&#34;deaths&#34;:&#34;9,063&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,016,510&#34;,&#34;new_deaths&#34;:&#34;9&#34;,&#34;new_cases&#34;:&#34;427&#34;,&#34;serious_critical&#34;:&#34;31&#34;,&#34;active_cases&#34;:&#34;29,045&#34;,&#34;total_cases_per_1m_population&#34;:&#34;397,407&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,415&#34;,&#34;total_tests&#34;:&#34;8,217,113&#34;,&#34;tests_per_1m_population&#34;:&#34;3,096,414&#34;},{&#34;country_name&#34;:&#34;Tunisia&#34;,&#34;cases&#34;:&#34;1,039,532&#34;,&#34;deaths&#34;:&#34;28,533&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;29&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;86,327&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,369&#34;,&#34;total_tests&#34;:&#34;4,563,397&#34;,&#34;tests_per_1m_population&#34;:&#34;378,962&#34;},{&#34;country_name&#34;:&#34;Slovenia&#34;,&#34;cases&#34;:&#34;1,003,970&#34;,&#34;deaths&#34;:&#34;6,576&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;980,501&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;30&#34;,&#34;active_cases&#34;:&#34;16,893&#34;,&#34;total_cases_per_1m_population&#34;:&#34;482,805&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,162&#34;,&#34;total_tests&#34;:&#34;2,640,107&#34;,&#34;tests_per_1m_population&#34;:&#34;1,269,615&#34;},{&#34;country_name&#34;:&#34;Finland&#34;,&#34;cases&#34;:&#34;1,000,472&#34;,&#34;deaths&#34;:&#34;3,638&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;46,000&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;31&#34;,&#34;active_cases&#34;:&#34;950,834&#34;,&#34;total_cases_per_1m_population&#34;:&#34;180,062&#34;,&#34;deaths_per_1m_population&#34;:&#34;655&#34;,&#34;total_tests&#34;:&#34;10,644,579&#34;,&#34;tests_per_1m_population&#34;:&#34;1,915,782&#34;},{&#34;country_name&#34;:&#34;Nepal&#34;,&#34;cases&#34;:&#34;978,743&#34;,&#34;deaths&#34;:&#34;11,951&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;966,523&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;11&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;269&#34;,&#34;total_cases_per_1m_population&#34;:&#34;32,535&#34;,&#34;deaths_per_1m_population&#34;:&#34;397&#34;,&#34;total_tests&#34;:&#34;5,616,752&#34;,&#34;tests_per_1m_population&#34;:&#34;186,711&#34;},{&#34;country_name&#34;:&#34;Belarus&#34;,&#34;cases&#34;:&#34;977,434&#34;,&#34;deaths&#34;:&#34;6,922&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;928,536&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;41,976&#34;,&#34;total_cases_per_1m_population&#34;:&#34;103,501&#34;,&#34;deaths_per_1m_population&#34;:&#34;733&#34;,&#34;total_tests&#34;:&#34;13,092,771&#34;,&#34;tests_per_1m_population&#34;:&#34;1,386,401&#34;},{&#34;country_name&#34;:&#34;Bolivia&#34;,&#34;cases&#34;:&#34;904,377&#34;,&#34;deaths&#34;:&#34;21,908&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;855,123&#34;,&#34;new_deaths&#34;:&#34;1&#34;,&#34;new_cases&#34;:&#34;83&#34;,&#34;serious_critical&#34;:&#34;220&#34;,&#34;active_cases&#34;:&#34;27,346&#34;,&#34;total_cases_per_1m_population&#34;:&#34;75,614&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,832&#34;,&#34;total_tests&#34;:&#34;2,693,845&#34;,&#34;tests_per_1m_population&#34;:&#34;225,230&#34;},{&#34;country_name&#34;:&#34;UAE&#34;,&#34;cases&#34;:&#34;897,136&#34;,&#34;deaths&#34;:&#34;2,302&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;879,787&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;244&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;15,047&#34;,&#34;total_cases_per_1m_population&#34;:&#34;88,772&#34;,&#34;deaths_per_1m_population&#34;:&#34;228&#34;,&#34;total_tests&#34;:&#34;154,420,740&#34;,&#34;tests_per_1m_population&#34;:&#34;15,279,961&#34;},{&#34;country_name&#34;:&#34;Uruguay&#34;,&#34;cases&#34;:&#34;895,775&#34;,&#34;deaths&#34;:&#34;7,197&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;886,654&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;18&#34;,&#34;active_cases&#34;:&#34;1,924&#34;,&#34;total_cases_per_1m_population&#34;:&#34;256,268&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,059&#34;,&#34;total_tests&#34;:&#34;6,091,188&#34;,&#34;tests_per_1m_population&#34;:&#34;1,742,599&#34;},{&#34;country_name&#34;:&#34;New Zealand&#34;,&#34;cases&#34;:&#34;884,289&#34;,&#34;deaths&#34;:&#34;636&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;824,272&#34;,&#34;new_deaths&#34;:&#34;9&#34;,&#34;new_cases&#34;:&#34;5,714&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;59,381&#34;,&#34;total_cases_per_1m_population&#34;:&#34;176,784&#34;,&#34;deaths_per_1m_population&#34;:&#34;127&#34;,&#34;total_tests&#34;:&#34;6,983,031&#34;,&#34;tests_per_1m_population&#34;:&#34;1,396,020&#34;},{&#34;country_name&#34;:&#34;Ecuador&#34;,&#34;cases&#34;:&#34;868,053&#34;,&#34;deaths&#34;:&#34;35,581&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;759&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;47,888&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,963&#34;,&#34;total_tests&#34;:&#34;2,470,170&#34;,&#34;tests_per_1m_population&#34;:&#34;136,273&#34;},{&#34;country_name&#34;:&#34;Costa Rica&#34;,&#34;cases&#34;:&#34;847,784&#34;,&#34;deaths&#34;:&#34;8,383&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;829,515&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;43&#34;,&#34;active_cases&#34;:&#34;9,886&#34;,&#34;total_cases_per_1m_population&#34;:&#34;163,725&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,619&#34;,&#34;total_tests&#34;:&#34;4,240,743&#34;,&#34;tests_per_1m_population&#34;:&#34;818,979&#34;},{&#34;country_name&#34;:&#34;Guatemala&#34;,&#34;cases&#34;:&#34;841,341&#34;,&#34;deaths&#34;:&#34;17,496&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;821,185&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;2,660&#34;,&#34;total_cases_per_1m_population&#34;:&#34;45,444&#34;,&#34;deaths_per_1m_population&#34;:&#34;945&#34;,&#34;total_tests&#34;:&#34;4,402,305&#34;,&#34;tests_per_1m_population&#34;:&#34;237,787&#34;},{&#34;country_name&#34;:&#34;Latvia&#34;,&#34;cases&#34;:&#34;817,316&#34;,&#34;deaths&#34;:&#34;5,743&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;803,135&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;322&#34;,&#34;serious_critical&#34;:&#34;9&#34;,&#34;active_cases&#34;:&#34;8,438&#34;,&#34;total_cases_per_1m_population&#34;:&#34;442,135&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,107&#34;,&#34;total_tests&#34;:&#34;7,154,016&#34;,&#34;tests_per_1m_population&#34;:&#34;3,870,035&#34;},{&#34;country_name&#34;:&#34;Azerbaijan&#34;,&#34;cases&#34;:&#34;792,476&#34;,&#34;deaths&#34;:&#34;9,707&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;782,634&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;135&#34;,&#34;total_cases_per_1m_population&#34;:&#34;76,908&#34;,&#34;deaths_per_1m_population&#34;:&#34;942&#34;,&#34;total_tests&#34;:&#34;6,792,132&#34;,&#34;tests_per_1m_population&#34;:&#34;659,165&#34;},{&#34;country_name&#34;:&#34;Panama&#34;,&#34;cases&#34;:&#34;771,486&#34;,&#34;deaths&#34;:&#34;8,182&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;759,832&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8&#34;,&#34;active_cases&#34;:&#34;3,472&#34;,&#34;total_cases_per_1m_population&#34;:&#34;173,862&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,844&#34;,&#34;total_tests&#34;:&#34;5,820,472&#34;,&#34;tests_per_1m_population&#34;:&#34;1,311,699&#34;},{&#34;country_name&#34;:&#34;Saudi Arabia&#34;,&#34;cases&#34;:&#34;753,332&#34;,&#34;deaths&#34;:&#34;9,076&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;740,467&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;45&#34;,&#34;active_cases&#34;:&#34;3,789&#34;,&#34;total_cases_per_1m_population&#34;:&#34;21,047&#34;,&#34;deaths_per_1m_population&#34;:&#34;254&#34;,&#34;total_tests&#34;:&#34;41,817,866&#34;,&#34;tests_per_1m_population&#34;:&#34;1,168,345&#34;},{&#34;country_name&#34;:&#34;Sri Lanka&#34;,&#34;cases&#34;:&#34;663,131&#34;,&#34;deaths&#34;:&#34;16,502&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;642,574&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;4,055&#34;,&#34;total_cases_per_1m_population&#34;:&#34;30,736&#34;,&#34;deaths_per_1m_population&#34;:&#34;765&#34;,&#34;total_tests&#34;:&#34;6,486,117&#34;,&#34;tests_per_1m_population&#34;:&#34;300,627&#34;},{&#34;country_name&#34;:&#34;Paraguay&#34;,&#34;cases&#34;:&#34;649,034&#34;,&#34;deaths&#34;:&#34;18,795&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;624,673&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;5,566&#34;,&#34;total_cases_per_1m_population&#34;:&#34;89,022&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,578&#34;,&#34;total_tests&#34;:&#34;2,623,300&#34;,&#34;tests_per_1m_population&#34;:&#34;359,816&#34;},{&#34;country_name&#34;:&#34;Kuwait&#34;,&#34;cases&#34;:&#34;631,294&#34;,&#34;deaths&#34;:&#34;2,555&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;627,899&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8&#34;,&#34;active_cases&#34;:&#34;840&#34;,&#34;total_cases_per_1m_population&#34;:&#34;143,981&#34;,&#34;deaths_per_1m_population&#34;:&#34;583&#34;,&#34;total_tests&#34;:&#34;7,999,656&#34;,&#34;tests_per_1m_population&#34;:&#34;1,824,506&#34;},{&#34;country_name&#34;:&#34;Myanmar&#34;,&#34;cases&#34;:&#34;612,733&#34;,&#34;deaths&#34;:&#34;19,434&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;591,609&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,690&#34;,&#34;total_cases_per_1m_population&#34;:&#34;11,127&#34;,&#34;deaths_per_1m_population&#34;:&#34;353&#34;,&#34;total_tests&#34;:&#34;7,891,077&#34;,&#34;tests_per_1m_population&#34;:&#34;143,296&#34;},{&#34;country_name&#34;:&#34;Palestine&#34;,&#34;cases&#34;:&#34;581,816&#34;,&#34;deaths&#34;:&#34;5,353&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;575,899&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;17&#34;,&#34;active_cases&#34;:&#34;564&#34;,&#34;total_cases_per_1m_population&#34;:&#34;109,459&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,007&#34;,&#34;total_tests&#34;:&#34;3,078,533&#34;,&#34;tests_per_1m_population&#34;:&#34;579,175&#34;},{&#34;country_name&#34;:&#34;Dominican Republic&#34;,&#34;cases&#34;:&#34;578,954&#34;,&#34;deaths&#34;:&#34;4,376&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;574,297&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;16&#34;,&#34;active_cases&#34;:&#34;281&#34;,&#34;total_cases_per_1m_population&#34;:&#34;52,421&#34;,&#34;deaths_per_1m_population&#34;:&#34;396&#34;,&#34;total_tests&#34;:&#34;3,261,060&#34;,&#34;tests_per_1m_population&#34;:&#34;295,272&#34;},{&#34;country_name&#34;:&#34;Estonia&#34;,&#34;cases&#34;:&#34;570,257&#34;,&#34;deaths&#34;:&#34;2,531&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;507,474&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;181&#34;,&#34;serious_critical&#34;:&#34;7&#34;,&#34;active_cases&#34;:&#34;60,252&#34;,&#34;total_cases_per_1m_population&#34;:&#34;429,364&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,906&#34;,&#34;total_tests&#34;:&#34;3,311,935&#34;,&#34;tests_per_1m_population&#34;:&#34;2,493,655&#34;},{&#34;country_name&#34;:&#34;Bahrain&#34;,&#34;cases&#34;:&#34;565,830&#34;,&#34;deaths&#34;:&#34;1,475&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;560,795&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;3&#34;,&#34;active_cases&#34;:&#34;3,560&#34;,&#34;total_cases_per_1m_population&#34;:&#34;312,916&#34;,&#34;deaths_per_1m_population&#34;:&#34;816&#34;,&#34;total_tests&#34;:&#34;9,695,962&#34;,&#34;tests_per_1m_population&#34;:&#34;5,362,081&#34;},{&#34;country_name&#34;:&#34;Venezuela&#34;,&#34;cases&#34;:&#34;522,121&#34;,&#34;deaths&#34;:&#34;5,705&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;515,305&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;230&#34;,&#34;active_cases&#34;:&#34;1,111&#34;,&#34;total_cases_per_1m_population&#34;:&#34;18,456&#34;,&#34;deaths_per_1m_population&#34;:&#34;202&#34;,&#34;total_tests&#34;:&#34;3,359,014&#34;,&#34;tests_per_1m_population&#34;:&#34;118,733&#34;},{&#34;country_name&#34;:&#34;Moldova&#34;,&#34;cases&#34;:&#34;516,986&#34;,&#34;deaths&#34;:&#34;11,489&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;504,142&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;49&#34;,&#34;active_cases&#34;:&#34;1,355&#34;,&#34;total_cases_per_1m_population&#34;:&#34;128,698&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,860&#34;,&#34;total_tests&#34;:&#34;3,216,305&#34;,&#34;tests_per_1m_population&#34;:&#34;800,665&#34;},{&#34;country_name&#34;:&#34;Egypt&#34;,&#34;cases&#34;:&#34;515,645&#34;,&#34;deaths&#34;:&#34;24,613&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;442,182&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;122&#34;,&#34;active_cases&#34;:&#34;48,850&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,873&#34;,&#34;deaths_per_1m_population&#34;:&#34;233&#34;,&#34;total_tests&#34;:&#34;3,693,367&#34;,&#34;tests_per_1m_population&#34;:&#34;34,903&#34;},{&#34;country_name&#34;:&#34;Libya&#34;,&#34;cases&#34;:&#34;501,862&#34;,&#34;deaths&#34;:&#34;6,429&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;490,900&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;101&#34;,&#34;active_cases&#34;:&#34;4,533&#34;,&#34;total_cases_per_1m_population&#34;:&#34;71,288&#34;,&#34;deaths_per_1m_population&#34;:&#34;913&#34;,&#34;total_tests&#34;:&#34;2,476,960&#34;,&#34;tests_per_1m_population&#34;:&#34;351,844&#34;},{&#34;country_name&#34;:&#34;Cyprus&#34;,&#34;cases&#34;:&#34;470,481&#34;,&#34;deaths&#34;:&#34;1,011&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;124,370&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;60&#34;,&#34;active_cases&#34;:&#34;345,100&#34;,&#34;total_cases_per_1m_population&#34;:&#34;384,623&#34;,&#34;deaths_per_1m_population&#34;:&#34;827&#34;,&#34;total_tests&#34;:&#34;9,477,138&#34;,&#34;tests_per_1m_population&#34;:&#34;7,747,665&#34;},{&#34;country_name&#34;:&#34;Ethiopia&#34;,&#34;cases&#34;:&#34;470,417&#34;,&#34;deaths&#34;:&#34;7,510&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;454,967&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;15&#34;,&#34;active_cases&#34;:&#34;7,940&#34;,&#34;total_cases_per_1m_population&#34;:&#34;3,917&#34;,&#34;deaths_per_1m_population&#34;:&#34;63&#34;,&#34;total_tests&#34;:&#34;4,763,756&#34;,&#34;tests_per_1m_population&#34;:&#34;39,665&#34;},{&#34;country_name&#34;:&#34;Mongolia&#34;,&#34;cases&#34;:&#34;469,580&#34;,&#34;deaths&#34;:&#34;2,177&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;313,256&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;30&#34;,&#34;serious_critical&#34;:&#34;192&#34;,&#34;active_cases&#34;:&#34;154,147&#34;,&#34;total_cases_per_1m_population&#34;:&#34;139,194&#34;,&#34;deaths_per_1m_population&#34;:&#34;645&#34;,&#34;total_tests&#34;:&#34;4,030,048&#34;,&#34;tests_per_1m_population&#34;:&#34;1,194,595&#34;},{&#34;country_name&#34;:&#34;Armenia&#34;,&#34;cases&#34;:&#34;422,825&#34;,&#34;deaths&#34;:&#34;8,622&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;410,558&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;3&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;3,645&#34;,&#34;total_cases_per_1m_population&#34;:&#34;142,210&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,900&#34;,&#34;total_tests&#34;:&#34;3,035,104&#34;,&#34;tests_per_1m_population&#34;:&#34;1,020,807&#34;},{&#34;country_name&#34;:&#34;Honduras&#34;,&#34;cases&#34;:&#34;422,275&#34;,&#34;deaths&#34;:&#34;10,892&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;131,100&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;105&#34;,&#34;active_cases&#34;:&#34;280,283&#34;,&#34;total_cases_per_1m_population&#34;:&#34;41,445&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,069&#34;,&#34;total_tests&#34;:&#34;1,263,329&#34;,&#34;tests_per_1m_population&#34;:&#34;123,991&#34;},{&#34;country_name&#34;:&#34;Oman&#34;,&#34;cases&#34;:&#34;388,995&#34;,&#34;deaths&#34;:&#34;4,257&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;384,055&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;683&#34;,&#34;total_cases_per_1m_population&#34;:&#34;72,833&#34;,&#34;deaths_per_1m_population&#34;:&#34;797&#34;,&#34;total_tests&#34;:&#34;25,000,000&#34;,&#34;tests_per_1m_population&#34;:&#34;4,680,828&#34;},{&#34;country_name&#34;:&#34;Bosnia and Herzegovina&#34;,&#34;cases&#34;:&#34;376,699&#34;,&#34;deaths&#34;:&#34;15,756&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;192,218&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;168,725&#34;,&#34;total_cases_per_1m_population&#34;:&#34;116,122&#34;,&#34;deaths_per_1m_population&#34;:&#34;4,857&#34;,&#34;total_tests&#34;:&#34;1,752,716&#34;,&#34;tests_per_1m_population&#34;:&#34;540,297&#34;},{&#34;country_name&#34;:&#34;R u00e9union&#34;,&#34;cases&#34;:&#34;374,295&#34;,&#34;deaths&#34;:&#34;742&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;355,605&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;10&#34;,&#34;active_cases&#34;:&#34;17,948&#34;,&#34;total_cases_per_1m_population&#34;:&#34;412,744&#34;,&#34;deaths_per_1m_population&#34;:&#34;818&#34;,&#34;total_tests&#34;:&#34;1,603,660&#34;,&#34;tests_per_1m_population&#34;:&#34;1,768,393&#34;},{&#34;country_name&#34;:&#34;Qatar&#34;,&#34;cases&#34;:&#34;364,089&#34;,&#34;deaths&#34;:&#34;677&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;362,568&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;844&#34;,&#34;total_cases_per_1m_population&#34;:&#34;129,670&#34;,&#34;deaths_per_1m_population&#34;:&#34;241&#34;,&#34;total_tests&#34;:&#34;3,425,362&#34;,&#34;tests_per_1m_population&#34;:&#34;1,219,943&#34;},{&#34;country_name&#34;:&#34;Kenya&#34;,&#34;cases&#34;:&#34;323,696&#34;,&#34;deaths&#34;:&#34;5,649&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;317,909&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;138&#34;,&#34;total_cases_per_1m_population&#34;:&#34;5,790&#34;,&#34;deaths_per_1m_population&#34;:&#34;101&#34;,&#34;total_tests&#34;:&#34;3,581,506&#34;,&#34;tests_per_1m_population&#34;:&#34;64,060&#34;},{&#34;country_name&#34;:&#34;Zambia&#34;,&#34;cases&#34;:&#34;318,984&#34;,&#34;deaths&#34;:&#34;3,974&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;314,075&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;935&#34;,&#34;total_cases_per_1m_population&#34;:&#34;16,517&#34;,&#34;deaths_per_1m_population&#34;:&#34;206&#34;,&#34;total_tests&#34;:&#34;3,408,441&#34;,&#34;tests_per_1m_population&#34;:&#34;176,487&#34;},{&#34;country_name&#34;:&#34;North Macedonia&#34;,&#34;cases&#34;:&#34;309,062&#34;,&#34;deaths&#34;:&#34;9,271&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;299,064&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;727&#34;,&#34;total_cases_per_1m_population&#34;:&#34;148,358&#34;,&#34;deaths_per_1m_population&#34;:&#34;4,450&#34;,&#34;total_tests&#34;:&#34;2,007,553&#34;,&#34;tests_per_1m_population&#34;:&#34;963,678&#34;},{&#34;country_name&#34;:&#34;Botswana&#34;,&#34;cases&#34;:&#34;305,859&#34;,&#34;deaths&#34;:&#34;2,688&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;303,026&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;145&#34;,&#34;total_cases_per_1m_population&#34;:&#34;125,491&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,103&#34;,&#34;total_tests&#34;:&#34;2,026,898&#34;,&#34;tests_per_1m_population&#34;:&#34;831,613&#34;},{&#34;country_name&#34;:&#34;Albania&#34;,&#34;cases&#34;:&#34;274,791&#34;,&#34;deaths&#34;:&#34;3,496&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;270,869&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;426&#34;,&#34;total_cases_per_1m_population&#34;:&#34;95,675&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,217&#34;,&#34;total_tests&#34;:&#34;1,799,730&#34;,&#34;tests_per_1m_population&#34;:&#34;626,620&#34;},{&#34;country_name&#34;:&#34;Algeria&#34;,&#34;cases&#34;:&#34;265,761&#34;,&#34;deaths&#34;:&#34;6,874&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;178,344&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;6&#34;,&#34;active_cases&#34;:&#34;80,543&#34;,&#34;total_cases_per_1m_population&#34;:&#34;5,869&#34;,&#34;deaths_per_1m_population&#34;:&#34;152&#34;,&#34;total_tests&#34;:&#34;230,861&#34;,&#34;tests_per_1m_population&#34;:&#34;5,099&#34;},{&#34;country_name&#34;:&#34;Nigeria&#34;,&#34;cases&#34;:&#34;255,685&#34;,&#34;deaths&#34;:&#34;3,143&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;249,890&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;11&#34;,&#34;active_cases&#34;:&#34;2,652&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,187&#34;,&#34;deaths_per_1m_population&#34;:&#34;15&#34;,&#34;total_tests&#34;:&#34;5,036,813&#34;,&#34;tests_per_1m_population&#34;:&#34;23,388&#34;},{&#34;country_name&#34;:&#34;Zimbabwe&#34;,&#34;cases&#34;:&#34;247,524&#34;,&#34;deaths&#34;:&#34;5,468&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;241,362&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;12&#34;,&#34;active_cases&#34;:&#34;694&#34;,&#34;total_cases_per_1m_population&#34;:&#34;16,227&#34;,&#34;deaths_per_1m_population&#34;:&#34;358&#34;,&#34;total_tests&#34;:&#34;2,240,305&#34;,&#34;tests_per_1m_population&#34;:&#34;146,872&#34;},{&#34;country_name&#34;:&#34;Uzbekistan&#34;,&#34;cases&#34;:&#34;238,469&#34;,&#34;deaths&#34;:&#34;1,637&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;236,483&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;27&#34;,&#34;serious_critical&#34;:&#34;23&#34;,&#34;active_cases&#34;:&#34;349&#34;,&#34;total_cases_per_1m_population&#34;:&#34;6,943&#34;,&#34;deaths_per_1m_population&#34;:&#34;48&#34;,&#34;total_tests&#34;:&#34;1,377,915&#34;,&#34;tests_per_1m_population&#34;:&#34;40,120&#34;},{&#34;country_name&#34;:&#34;Montenegro&#34;,&#34;cases&#34;:&#34;234,619&#34;,&#34;deaths&#34;:&#34;2,713&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;231,297&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;6&#34;,&#34;active_cases&#34;:&#34;609&#34;,&#34;total_cases_per_1m_population&#34;:&#34;373,473&#34;,&#34;deaths_per_1m_population&#34;:&#34;4,319&#34;,&#34;total_tests&#34;:&#34;2,444,820&#34;,&#34;tests_per_1m_population&#34;:&#34;3,891,730&#34;},{&#34;country_name&#34;:&#34;Luxembourg&#34;,&#34;cases&#34;:&#34;233,966&#34;,&#34;deaths&#34;:&#34;1,058&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;221,501&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;11,407&#34;,&#34;total_cases_per_1m_population&#34;:&#34;363,099&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,642&#34;,&#34;total_tests&#34;:&#34;4,213,886&#34;,&#34;tests_per_1m_population&#34;:&#34;6,539,666&#34;},{&#34;country_name&#34;:&#34;Mozambique&#34;,&#34;cases&#34;:&#34;225,358&#34;,&#34;deaths&#34;:&#34;2,201&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;223,104&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;13&#34;,&#34;active_cases&#34;:&#34;53&#34;,&#34;total_cases_per_1m_population&#34;:&#34;6,863&#34;,&#34;deaths_per_1m_population&#34;:&#34;67&#34;,&#34;total_tests&#34;:&#34;1,308,458&#34;,&#34;tests_per_1m_population&#34;:&#34;39,849&#34;},{&#34;country_name&#34;:&#34;Laos&#34;,&#34;cases&#34;:&#34;205,975&#34;,&#34;deaths&#34;:&#34;732&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,660&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;1,082&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;197,583&#34;,&#34;total_cases_per_1m_population&#34;:&#34;27,588&#34;,&#34;deaths_per_1m_population&#34;:&#34;98&#34;,&#34;total_tests&#34;:&#34;1,232,128&#34;,&#34;tests_per_1m_population&#34;:&#34;165,029&#34;},{&#34;country_name&#34;:&#34;Kyrgyzstan&#34;,&#34;cases&#34;:&#34;200,983&#34;,&#34;deaths&#34;:&#34;2,991&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;196,386&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;131&#34;,&#34;active_cases&#34;:&#34;1,606&#34;,&#34;total_cases_per_1m_population&#34;:&#34;29,915&#34;,&#34;deaths_per_1m_population&#34;:&#34;445&#34;,&#34;total_tests&#34;:&#34;1,907,195&#34;,&#34;tests_per_1m_population&#34;:&#34;283,874&#34;},{&#34;country_name&#34;:&#34;China&#34;,&#34;cases&#34;:&#34;200,654&#34;,&#34;deaths&#34;:&#34;4,725&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;166,398&#34;,&#34;new_deaths&#34;:&#34;39&#34;,&#34;new_cases&#34;:&#34;1,580&#34;,&#34;serious_critical&#34;:&#34;236&#34;,&#34;active_cases&#34;:&#34;29,531&#34;,&#34;total_cases_per_1m_population&#34;:&#34;139&#34;,&#34;deaths_per_1m_population&#34;:&#34;3&#34;,&#34;total_tests&#34;:&#34;160,000,000&#34;,&#34;tests_per_1m_population&#34;:&#34;111,163&#34;},{&#34;country_name&#34;:&#34;Iceland&#34;,&#34;cases&#34;:&#34;183,974&#34;,&#34;deaths&#34;:&#34;112&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;75,685&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;108,177&#34;,&#34;total_cases_per_1m_population&#34;:&#34;532,886&#34;,&#34;deaths_per_1m_population&#34;:&#34;324&#34;,&#34;total_tests&#34;:&#34;1,953,616&#34;,&#34;tests_per_1m_population&#34;:&#34;5,658,702&#34;},{&#34;country_name&#34;:&#34;Maldives&#34;,&#34;cases&#34;:&#34;178,883&#34;,&#34;deaths&#34;:&#34;298&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;163,687&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;25&#34;,&#34;active_cases&#34;:&#34;14,898&#34;,&#34;total_cases_per_1m_population&#34;:&#34;320,737&#34;,&#34;deaths_per_1m_population&#34;:&#34;534&#34;,&#34;total_tests&#34;:&#34;2,213,831&#34;,&#34;tests_per_1m_population&#34;:&#34;3,969,395&#34;},{&#34;country_name&#34;:&#34;Afghanistan&#34;,&#34;cases&#34;:&#34;178,689&#34;,&#34;deaths&#34;:&#34;7,682&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;161,748&#34;,&#34;new_deaths&#34;:&#34;1&#34;,&#34;new_cases&#34;:&#34;39&#34;,&#34;serious_critical&#34;:&#34;1,124&#34;,&#34;active_cases&#34;:&#34;9,259&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,411&#34;,&#34;deaths_per_1m_population&#34;:&#34;190&#34;,&#34;total_tests&#34;:&#34;940,341&#34;,&#34;tests_per_1m_population&#34;:&#34;23,212&#34;},{&#34;country_name&#34;:&#34;Uganda&#34;,&#34;cases&#34;:&#34;164,069&#34;,&#34;deaths&#34;:&#34;3,596&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;100,205&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;60,268&#34;,&#34;total_cases_per_1m_population&#34;:&#34;3,394&#34;,&#34;deaths_per_1m_population&#34;:&#34;74&#34;,&#34;total_tests&#34;:&#34;2,612,795&#34;,&#34;tests_per_1m_population&#34;:&#34;54,043&#34;},{&#34;country_name&#34;:&#34;El Salvador&#34;,&#34;cases&#34;:&#34;162,089&#34;,&#34;deaths&#34;:&#34;4,127&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;150,662&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8&#34;,&#34;active_cases&#34;:&#34;7,300&#34;,&#34;total_cases_per_1m_population&#34;:&#34;24,764&#34;,&#34;deaths_per_1m_population&#34;:&#34;631&#34;,&#34;total_tests&#34;:&#34;1,950,448&#34;,&#34;tests_per_1m_population&#34;:&#34;297,993&#34;},{&#34;country_name&#34;:&#34;Ghana&#34;,&#34;cases&#34;:&#34;161,124&#34;,&#34;deaths&#34;:&#34;1,445&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;159,655&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;24&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,997&#34;,&#34;deaths_per_1m_population&#34;:&#34;45&#34;,&#34;total_tests&#34;:&#34;2,433,244&#34;,&#34;tests_per_1m_population&#34;:&#34;75,465&#34;},{&#34;country_name&#34;:&#34;Namibia&#34;,&#34;cases&#34;:&#34;158,332&#34;,&#34;deaths&#34;:&#34;4,023&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;153,662&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;647&#34;,&#34;total_cases_per_1m_population&#34;:&#34;60,341&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,533&#34;,&#34;total_tests&#34;:&#34;1,001,354&#34;,&#34;tests_per_1m_population&#34;:&#34;381,621&#34;},{&#34;country_name&#34;:&#34;Martinique&#34;,&#34;cases&#34;:&#34;147,519&#34;,&#34;deaths&#34;:&#34;918&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;104&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8&#34;,&#34;active_cases&#34;:&#34;146,497&#34;,&#34;total_cases_per_1m_population&#34;:&#34;393,657&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,450&#34;,&#34;total_tests&#34;:&#34;828,928&#34;,&#34;tests_per_1m_population&#34;:&#34;2,212,008&#34;},{&#34;country_name&#34;:&#34;Trinidad and Tobago&#34;,&#34;cases&#34;:&#34;144,359&#34;,&#34;deaths&#34;:&#34;3,812&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;133,604&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;18&#34;,&#34;active_cases&#34;:&#34;6,943&#34;,&#34;total_cases_per_1m_population&#34;:&#34;102,552&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,708&#34;,&#34;total_tests&#34;:&#34;696,148&#34;,&#34;tests_per_1m_population&#34;:&#34;494,540&#34;},{&#34;country_name&#34;:&#34;Brunei&#34;,&#34;cases&#34;:&#34;141,014&#34;,&#34;deaths&#34;:&#34;218&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;139,724&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;1,072&#34;,&#34;total_cases_per_1m_population&#34;:&#34;316,857&#34;,&#34;deaths_per_1m_population&#34;:&#34;490&#34;,&#34;total_tests&#34;:&#34;717,784&#34;,&#34;tests_per_1m_population&#34;:&#34;1,612,853&#34;},{&#34;country_name&#34;:&#34;Guadeloupe&#34;,&#34;cases&#34;:&#34;140,130&#34;,&#34;deaths&#34;:&#34;854&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,250&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;19&#34;,&#34;active_cases&#34;:&#34;137,026&#34;,&#34;total_cases_per_1m_population&#34;:&#34;350,108&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,134&#34;,&#34;total_tests&#34;:&#34;938,039&#34;,&#34;tests_per_1m_population&#34;:&#34;2,343,644&#34;},{&#34;country_name&#34;:&#34;Cambodia&#34;,&#34;cases&#34;:&#34;136,200&#34;,&#34;deaths&#34;:&#34;3,056&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;132,896&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;248&#34;,&#34;total_cases_per_1m_population&#34;:&#34;7,948&#34;,&#34;deaths_per_1m_population&#34;:&#34;178&#34;,&#34;total_tests&#34;:&#34;2,946,965&#34;,&#34;tests_per_1m_population&#34;:&#34;171,969&#34;},{&#34;country_name&#34;:&#34;Rwanda&#34;,&#34;cases&#34;:&#34;129,764&#34;,&#34;deaths&#34;:&#34;1,458&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;45,522&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;82,784&#34;,&#34;total_cases_per_1m_population&#34;:&#34;9,590&#34;,&#34;deaths_per_1m_population&#34;:&#34;108&#34;,&#34;total_tests&#34;:&#34;5,225,494&#34;,&#34;tests_per_1m_population&#34;:&#34;386,173&#34;},{&#34;country_name&#34;:&#34;Jamaica&#34;,&#34;cases&#34;:&#34;129,489&#34;,&#34;deaths&#34;:&#34;2,943&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;82,965&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;43,581&#34;,&#34;total_cases_per_1m_population&#34;:&#34;43,387&#34;,&#34;deaths_per_1m_population&#34;:&#34;986&#34;,&#34;total_tests&#34;:&#34;981,688&#34;,&#34;tests_per_1m_population&#34;:&#34;328,929&#34;},{&#34;country_name&#34;:&#34;Cameroon&#34;,&#34;cases&#34;:&#34;119,780&#34;,&#34;deaths&#34;:&#34;1,927&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;117,791&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;13&#34;,&#34;active_cases&#34;:&#34;62&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,318&#34;,&#34;deaths_per_1m_population&#34;:&#34;69&#34;,&#34;total_tests&#34;:&#34;1,751,774&#34;,&#34;tests_per_1m_population&#34;:&#34;63,154&#34;},{&#34;country_name&#34;:&#34;Angola&#34;,&#34;cases&#34;:&#34;99,194&#34;,&#34;deaths&#34;:&#34;1,900&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;97,149&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;145&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,858&#34;,&#34;deaths_per_1m_population&#34;:&#34;55&#34;,&#34;total_tests&#34;:&#34;1,499,795&#34;,&#34;tests_per_1m_population&#34;:&#34;43,209&#34;},{&#34;country_name&#34;:&#34;Malta&#34;,&#34;cases&#34;:&#34;90,595&#34;,&#34;deaths&#34;:&#34;688&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;84,646&#34;,&#34;new_deaths&#34;:&#34;1&#34;,&#34;new_cases&#34;:&#34;196&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;5,261&#34;,&#34;total_cases_per_1m_population&#34;:&#34;204,196&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,551&#34;,&#34;total_tests&#34;:&#34;1,872,465&#34;,&#34;tests_per_1m_population&#34;:&#34;4,220,438&#34;},{&#34;country_name&#34;:&#34;DRC&#34;,&#34;cases&#34;:&#34;87,023&#34;,&#34;deaths&#34;:&#34;1,337&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;50,930&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;34,756&#34;,&#34;total_cases_per_1m_population&#34;:&#34;921&#34;,&#34;deaths_per_1m_population&#34;:&#34;14&#34;,&#34;total_tests&#34;:&#34;846,704&#34;,&#34;tests_per_1m_population&#34;:&#34;8,962&#34;},{&#34;country_name&#34;:&#34;Senegal&#34;,&#34;cases&#34;:&#34;85,984&#34;,&#34;deaths&#34;:&#34;1,966&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;84,001&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;17&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,902&#34;,&#34;deaths_per_1m_population&#34;:&#34;112&#34;,&#34;total_tests&#34;:&#34;1,063,849&#34;,&#34;tests_per_1m_population&#34;:&#34;60,653&#34;},{&#34;country_name&#34;:&#34;Malawi&#34;,&#34;cases&#34;:&#34;85,747&#34;,&#34;deaths&#34;:&#34;2,633&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;81,938&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;67&#34;,&#34;active_cases&#34;:&#34;1,176&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,283&#34;,&#34;deaths_per_1m_population&#34;:&#34;132&#34;,&#34;total_tests&#34;:&#34;571,585&#34;,&#34;tests_per_1m_population&#34;:&#34;28,548&#34;},{&#34;country_name&#34;:&#34;Ivory Coast&#34;,&#34;cases&#34;:&#34;81,887&#34;,&#34;deaths&#34;:&#34;799&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;81,061&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;27&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,972&#34;,&#34;deaths_per_1m_population&#34;:&#34;29&#34;,&#34;total_tests&#34;:&#34;1,494,624&#34;,&#34;tests_per_1m_population&#34;:&#34;54,238&#34;},{&#34;country_name&#34;:&#34;French Guiana&#34;,&#34;cases&#34;:&#34;80,422&#34;,&#34;deaths&#34;:&#34;394&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,254&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;68,774&#34;,&#34;total_cases_per_1m_population&#34;:&#34;257,228&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,260&#34;,&#34;total_tests&#34;:&#34;622,646&#34;,&#34;tests_per_1m_population&#34;:&#34;1,991,518&#34;},{&#34;country_name&#34;:&#34;Suriname&#34;,&#34;cases&#34;:&#34;79,302&#34;,&#34;deaths&#34;:&#34;1,327&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;49,396&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;28,579&#34;,&#34;total_cases_per_1m_population&#34;:&#34;133,030&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,226&#34;,&#34;total_tests&#34;:&#34;235,824&#34;,&#34;tests_per_1m_population&#34;:&#34;395,598&#34;},{&#34;country_name&#34;:&#34;Channel Islands&#34;,&#34;cases&#34;:&#34;73,609&#34;,&#34;deaths&#34;:&#34;166&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;72,059&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,384&#34;,&#34;total_cases_per_1m_population&#34;:&#34;416,444&#34;,&#34;deaths_per_1m_population&#34;:&#34;939&#34;,&#34;total_tests&#34;:&#34;1,252,808&#34;,&#34;tests_per_1m_population&#34;:&#34;7,087,782&#34;},{&#34;country_name&#34;:&#34;French Polynesia&#34;,&#34;cases&#34;:&#34;72,648&#34;,&#34;deaths&#34;:&#34;648&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;7&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;255,948&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,283&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Eswatini&#34;,&#34;cases&#34;:&#34;70,284&#34;,&#34;deaths&#34;:&#34;1,397&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;68,764&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;11&#34;,&#34;active_cases&#34;:&#34;123&#34;,&#34;total_cases_per_1m_population&#34;:&#34;59,470&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,182&#34;,&#34;total_tests&#34;:&#34;1,012,397&#34;,&#34;tests_per_1m_population&#34;:&#34;856,623&#34;},{&#34;country_name&#34;:&#34;Barbados&#34;,&#34;cases&#34;:&#34;67,256&#34;,&#34;deaths&#34;:&#34;389&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;63,424&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;3,443&#34;,&#34;total_cases_per_1m_population&#34;:&#34;233,520&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,351&#34;,&#34;total_tests&#34;:&#34;640,085&#34;,&#34;tests_per_1m_population&#34;:&#34;2,222,440&#34;},{&#34;country_name&#34;:&#34;Fiji&#34;,&#34;cases&#34;:&#34;64,524&#34;,&#34;deaths&#34;:&#34;862&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;62,677&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;985&#34;,&#34;total_cases_per_1m_population&#34;:&#34;71,048&#34;,&#34;deaths_per_1m_population&#34;:&#34;949&#34;,&#34;total_tests&#34;:&#34;506,642&#34;,&#34;tests_per_1m_population&#34;:&#34;557,871&#34;},{&#34;country_name&#34;:&#34;Madagascar&#34;,&#34;cases&#34;:&#34;64,121&#34;,&#34;deaths&#34;:&#34;1,391&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;59,370&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;14&#34;,&#34;active_cases&#34;:&#34;3,360&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,213&#34;,&#34;deaths_per_1m_population&#34;:&#34;48&#34;,&#34;total_tests&#34;:&#34;418,849&#34;,&#34;tests_per_1m_population&#34;:&#34;14,455&#34;},{&#34;country_name&#34;:&#34;Guyana&#34;,&#34;cases&#34;:&#34;63,413&#34;,&#34;deaths&#34;:&#34;1,228&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;62,092&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;93&#34;,&#34;total_cases_per_1m_population&#34;:&#34;79,925&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,548&#34;,&#34;total_tests&#34;:&#34;590,638&#34;,&#34;tests_per_1m_population&#34;:&#34;744,436&#34;},{&#34;country_name&#34;:&#34;Sudan&#34;,&#34;cases&#34;:&#34;62,093&#34;,&#34;deaths&#34;:&#34;4,930&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,359&#34;,&#34;deaths_per_1m_population&#34;:&#34;108&#34;,&#34;total_tests&#34;:&#34;562,941&#34;,&#34;tests_per_1m_population&#34;:&#34;12,319&#34;},{&#34;country_name&#34;:&#34;New Caledonia&#34;,&#34;cases&#34;:&#34;60,457&#34;,&#34;deaths&#34;:&#34;312&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;60,064&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;9&#34;,&#34;active_cases&#34;:&#34;81&#34;,&#34;total_cases_per_1m_population&#34;:&#34;208,148&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,074&#34;,&#34;total_tests&#34;:&#34;98,964&#34;,&#34;tests_per_1m_population&#34;:&#34;340,724&#34;},{&#34;country_name&#34;:&#34;Mauritania&#34;,&#34;cases&#34;:&#34;58,683&#34;,&#34;deaths&#34;:&#34;982&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;57,693&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;8&#34;,&#34;total_cases_per_1m_population&#34;:&#34;12,050&#34;,&#34;deaths_per_1m_population&#34;:&#34;202&#34;,&#34;total_tests&#34;:&#34;799,187&#34;,&#34;tests_per_1m_population&#34;:&#34;164,099&#34;},{&#34;country_name&#34;:&#34;Bhutan&#34;,&#34;cases&#34;:&#34;57,771&#34;,&#34;deaths&#34;:&#34;20&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;53,080&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;431&#34;,&#34;serious_critical&#34;:&#34;3&#34;,&#34;active_cases&#34;:&#34;4,671&#34;,&#34;total_cases_per_1m_population&#34;:&#34;73,412&#34;,&#34;deaths_per_1m_population&#34;:&#34;25&#34;,&#34;total_tests&#34;:&#34;2,284,301&#34;,&#34;tests_per_1m_population&#34;:&#34;2,902,749&#34;},{&#34;country_name&#34;:&#34;Belize&#34;,&#34;cases&#34;:&#34;57,419&#34;,&#34;deaths&#34;:&#34;676&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;56,534&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;6&#34;,&#34;active_cases&#34;:&#34;209&#34;,&#34;total_cases_per_1m_population&#34;:&#34;139,823&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,646&#34;,&#34;total_tests&#34;:&#34;534,770&#34;,&#34;tests_per_1m_population&#34;:&#34;1,302,237&#34;},{&#34;country_name&#34;:&#34;Taiwan&#34;,&#34;cases&#34;:&#34;56,468&#34;,&#34;deaths&#34;:&#34;856&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;23,729&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;5,172&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;31,883&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,363&#34;,&#34;deaths_per_1m_population&#34;:&#34;36&#34;,&#34;total_tests&#34;:&#34;14,289,370&#34;,&#34;tests_per_1m_population&#34;:&#34;598,017&#34;},{&#34;country_name&#34;:&#34;Cabo Verde&#34;,&#34;cases&#34;:&#34;56,004&#34;,&#34;deaths&#34;:&#34;401&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;55,538&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;23&#34;,&#34;active_cases&#34;:&#34;65&#34;,&#34;total_cases_per_1m_population&#34;:&#34;98,792&#34;,&#34;deaths_per_1m_population&#34;:&#34;707&#34;,&#34;total_tests&#34;:&#34;400,982&#34;,&#34;tests_per_1m_population&#34;:&#34;707,340&#34;},{&#34;country_name&#34;:&#34;Syria&#34;,&#34;cases&#34;:&#34;55,795&#34;,&#34;deaths&#34;:&#34;3,150&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;52,090&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;555&#34;,&#34;total_cases_per_1m_population&#34;:&#34;3,054&#34;,&#34;deaths_per_1m_population&#34;:&#34;172&#34;,&#34;total_tests&#34;:&#34;146,269&#34;,&#34;tests_per_1m_population&#34;:&#34;8,007&#34;},{&#34;country_name&#34;:&#34;Gabon&#34;,&#34;cases&#34;:&#34;47,597&#34;,&#34;deaths&#34;:&#34;303&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;47,282&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;12&#34;,&#34;total_cases_per_1m_population&#34;:&#34;20,512&#34;,&#34;deaths_per_1m_population&#34;:&#34;131&#34;,&#34;total_tests&#34;:&#34;1,592,483&#34;,&#34;tests_per_1m_population&#34;:&#34;686,270&#34;},{&#34;country_name&#34;:&#34;Papua New Guinea&#34;,&#34;cases&#34;:&#34;43,732&#34;,&#34;deaths&#34;:&#34;649&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;43,025&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;7&#34;,&#34;active_cases&#34;:&#34;58&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,726&#34;,&#34;deaths_per_1m_population&#34;:&#34;70&#34;,&#34;total_tests&#34;:&#34;249,149&#34;,&#34;tests_per_1m_population&#34;:&#34;26,927&#34;},{&#34;country_name&#34;:&#34;Seychelles&#34;,&#34;cases&#34;:&#34;42,079&#34;,&#34;deaths&#34;:&#34;165&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;41,260&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;654&#34;,&#34;total_cases_per_1m_population&#34;:&#34;423,134&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,659&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Cura u00e7ao&#34;,&#34;cases&#34;:&#34;41,966&#34;,&#34;deaths&#34;:&#34;273&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;41,251&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;3&#34;,&#34;active_cases&#34;:&#34;442&#34;,&#34;total_cases_per_1m_population&#34;:&#34;253,872&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,652&#34;,&#34;total_tests&#34;:&#34;496,693&#34;,&#34;tests_per_1m_population&#34;:&#34;3,004,725&#34;},{&#34;country_name&#34;:&#34;Andorra&#34;,&#34;cases&#34;:&#34;41,013&#34;,&#34;deaths&#34;:&#34;153&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;40,343&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;14&#34;,&#34;active_cases&#34;:&#34;517&#34;,&#34;total_cases_per_1m_population&#34;:&#34;529,282&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,974&#34;,&#34;total_tests&#34;:&#34;249,838&#34;,&#34;tests_per_1m_population&#34;:&#34;3,224,215&#34;},{&#34;country_name&#34;:&#34;Burundi&#34;,&#34;cases&#34;:&#34;38,887&#34;,&#34;deaths&#34;:&#34;38&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;773&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;38,076&#34;,&#34;total_cases_per_1m_population&#34;:&#34;3,104&#34;,&#34;deaths_per_1m_population&#34;:&#34;3&#34;,&#34;total_tests&#34;:&#34;345,742&#34;,&#34;tests_per_1m_population&#34;:&#34;27,594&#34;},{&#34;country_name&#34;:&#34;Mauritius&#34;,&#34;cases&#34;:&#34;37,656&#34;,&#34;deaths&#34;:&#34;990&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;35,656&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,010&#34;,&#34;total_cases_per_1m_population&#34;:&#34;29,521&#34;,&#34;deaths_per_1m_population&#34;:&#34;776&#34;,&#34;total_tests&#34;:&#34;358,675&#34;,&#34;tests_per_1m_population&#34;:&#34;281,186&#34;},{&#34;country_name&#34;:&#34;Mayotte&#34;,&#34;cases&#34;:&#34;37,038&#34;,&#34;deaths&#34;:&#34;187&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,964&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;33,887&#34;,&#34;total_cases_per_1m_population&#34;:&#34;130,099&#34;,&#34;deaths_per_1m_population&#34;:&#34;657&#34;,&#34;total_tests&#34;:&#34;176,919&#34;,&#34;tests_per_1m_population&#34;:&#34;621,442&#34;},{&#34;country_name&#34;:&#34;Togo&#34;,&#34;cases&#34;:&#34;36,977&#34;,&#34;deaths&#34;:&#34;273&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;36,679&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;25&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,285&#34;,&#34;deaths_per_1m_population&#34;:&#34;32&#34;,&#34;total_tests&#34;:&#34;727,740&#34;,&#34;tests_per_1m_population&#34;:&#34;84,338&#34;},{&#34;country_name&#34;:&#34;Guinea&#34;,&#34;cases&#34;:&#34;36,459&#34;,&#34;deaths&#34;:&#34;440&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;35,976&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;8&#34;,&#34;active_cases&#34;:&#34;43&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,647&#34;,&#34;deaths_per_1m_population&#34;:&#34;32&#34;,&#34;total_tests&#34;:&#34;660,107&#34;,&#34;tests_per_1m_population&#34;:&#34;47,919&#34;},{&#34;country_name&#34;:&#34;Faeroe Islands&#34;,&#34;cases&#34;:&#34;34,658&#34;,&#34;deaths&#34;:&#34;28&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,693&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;26,937&#34;,&#34;total_cases_per_1m_population&#34;:&#34;704,460&#34;,&#34;deaths_per_1m_population&#34;:&#34;569&#34;,&#34;total_tests&#34;:&#34;778,000&#34;,&#34;tests_per_1m_population&#34;:&#34;15,813,651&#34;},{&#34;country_name&#34;:&#34;Aruba&#34;,&#34;cases&#34;:&#34;34,589&#34;,&#34;deaths&#34;:&#34;212&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;34,251&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;126&#34;,&#34;total_cases_per_1m_population&#34;:&#34;321,507&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,971&#34;,&#34;total_tests&#34;:&#34;177,885&#34;,&#34;tests_per_1m_population&#34;:&#34;1,653,452&#34;},{&#34;country_name&#34;:&#34;Tanzania&#34;,&#34;cases&#34;:&#34;33,864&#34;,&#34;deaths&#34;:&#34;803&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;7&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;539&#34;,&#34;deaths_per_1m_population&#34;:&#34;13&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Bahamas&#34;,&#34;cases&#34;:&#34;33,463&#34;,&#34;deaths&#34;:&#34;789&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;32,310&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;11&#34;,&#34;active_cases&#34;:&#34;364&#34;,&#34;total_cases_per_1m_population&#34;:&#34;83,652&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,972&#34;,&#34;total_tests&#34;:&#34;229,817&#34;,&#34;tests_per_1m_population&#34;:&#34;574,504&#34;},{&#34;country_name&#34;:&#34;Lesotho&#34;,&#34;cases&#34;:&#34;32,910&#34;,&#34;deaths&#34;:&#34;697&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;24,155&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;8,058&#34;,&#34;total_cases_per_1m_population&#34;:&#34;15,146&#34;,&#34;deaths_per_1m_population&#34;:&#34;321&#34;,&#34;total_tests&#34;:&#34;431,221&#34;,&#34;tests_per_1m_population&#34;:&#34;198,454&#34;},{&#34;country_name&#34;:&#34;Mali&#34;,&#34;cases&#34;:&#34;30,727&#34;,&#34;deaths&#34;:&#34;731&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;29,795&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;201&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,442&#34;,&#34;deaths_per_1m_population&#34;:&#34;34&#34;,&#34;total_tests&#34;:&#34;663,805&#34;,&#34;tests_per_1m_population&#34;:&#34;31,160&#34;},{&#34;country_name&#34;:&#34;Haiti&#34;,&#34;cases&#34;:&#34;30,640&#34;,&#34;deaths&#34;:&#34;835&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;29,389&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;416&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,629&#34;,&#34;deaths_per_1m_population&#34;:&#34;72&#34;,&#34;total_tests&#34;:&#34;132,422&#34;,&#34;tests_per_1m_population&#34;:&#34;11,363&#34;},{&#34;country_name&#34;:&#34;Isle of Man&#34;,&#34;cases&#34;:&#34;28,416&#34;,&#34;deaths&#34;:&#34;87&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;26,794&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,535&#34;,&#34;total_cases_per_1m_population&#34;:&#34;331,015&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,013&#34;,&#34;total_tests&#34;:&#34;150,753&#34;,&#34;tests_per_1m_population&#34;:&#34;1,756,107&#34;},{&#34;country_name&#34;:&#34;Benin&#34;,&#34;cases&#34;:&#34;26,952&#34;,&#34;deaths&#34;:&#34;163&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;25,506&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;1,283&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,123&#34;,&#34;deaths_per_1m_population&#34;:&#34;13&#34;,&#34;total_tests&#34;:&#34;604,310&#34;,&#34;tests_per_1m_population&#34;:&#34;47,598&#34;},{&#34;country_name&#34;:&#34;Somalia&#34;,&#34;cases&#34;:&#34;26,485&#34;,&#34;deaths&#34;:&#34;1,350&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;13,182&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;11,953&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,587&#34;,&#34;deaths_per_1m_population&#34;:&#34;81&#34;,&#34;total_tests&#34;:&#34;400,466&#34;,&#34;tests_per_1m_population&#34;:&#34;23,990&#34;},{&#34;country_name&#34;:&#34;Congo&#34;,&#34;cases&#34;:&#34;24,079&#34;,&#34;deaths&#34;:&#34;385&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;20,178&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;3,516&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,178&#34;,&#34;deaths_per_1m_population&#34;:&#34;67&#34;,&#34;total_tests&#34;:&#34;347,815&#34;,&#34;tests_per_1m_population&#34;:&#34;60,352&#34;},{&#34;country_name&#34;:&#34;Saint Lucia&#34;,&#34;cases&#34;:&#34;23,239&#34;,&#34;deaths&#34;:&#34;368&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;22,736&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;135&#34;,&#34;total_cases_per_1m_population&#34;:&#34;125,520&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,988&#34;,&#34;total_tests&#34;:&#34;142,630&#34;,&#34;tests_per_1m_population&#34;:&#34;770,382&#34;},{&#34;country_name&#34;:&#34;Timor-Leste&#34;,&#34;cases&#34;:&#34;22,860&#34;,&#34;deaths&#34;:&#34;130&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;22,714&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;16&#34;,&#34;total_cases_per_1m_population&#34;:&#34;16,762&#34;,&#34;deaths_per_1m_population&#34;:&#34;95&#34;,&#34;total_tests&#34;:&#34;261,007&#34;,&#34;tests_per_1m_population&#34;:&#34;191,388&#34;},{&#34;country_name&#34;:&#34;Cayman Islands&#34;,&#34;cases&#34;:&#34;21,755&#34;,&#34;deaths&#34;:&#34;26&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;8,553&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;13,176&#34;,&#34;total_cases_per_1m_population&#34;:&#34;324,145&#34;,&#34;deaths_per_1m_population&#34;:&#34;387&#34;,&#34;total_tests&#34;:&#34;222,773&#34;,&#34;tests_per_1m_population&#34;:&#34;3,319,273&#34;},{&#34;country_name&#34;:&#34;Burkina Faso&#34;,&#34;cases&#34;:&#34;20,853&#34;,&#34;deaths&#34;:&#34;382&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;20,439&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;32&#34;,&#34;total_cases_per_1m_population&#34;:&#34;951&#34;,&#34;deaths_per_1m_population&#34;:&#34;17&#34;,&#34;total_tests&#34;:&#34;248,995&#34;,&#34;tests_per_1m_population&#34;:&#34;11,350&#34;},{&#34;country_name&#34;:&#34;Nicaragua&#34;,&#34;cases&#34;:&#34;18,491&#34;,&#34;deaths&#34;:&#34;225&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;4,225&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;14,041&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,733&#34;,&#34;deaths_per_1m_population&#34;:&#34;33&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Gibraltar&#34;,&#34;cases&#34;:&#34;17,706&#34;,&#34;deaths&#34;:&#34;102&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;16,579&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,025&#34;,&#34;total_cases_per_1m_population&#34;:&#34;525,822&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,029&#34;,&#34;total_tests&#34;:&#34;534,283&#34;,&#34;tests_per_1m_population&#34;:&#34;15,866,807&#34;},{&#34;country_name&#34;:&#34;South Sudan&#34;,&#34;cases&#34;:&#34;17,422&#34;,&#34;deaths&#34;:&#34;138&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;13,514&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;3,770&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,524&#34;,&#34;deaths_per_1m_population&#34;:&#34;12&#34;,&#34;total_tests&#34;:&#34;376,391&#34;,&#34;tests_per_1m_population&#34;:&#34;32,928&#34;},{&#34;country_name&#34;:&#34;Tajikistan&#34;,&#34;cases&#34;:&#34;17,388&#34;,&#34;deaths&#34;:&#34;124&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;17,264&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,752&#34;,&#34;deaths_per_1m_population&#34;:&#34;12&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Liechtenstein&#34;,&#34;cases&#34;:&#34;17,103&#34;,&#34;deaths&#34;:&#34;85&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;16,831&#34;,&#34;new_deaths&#34;:&#34;1&#34;,&#34;new_cases&#34;:&#34;12&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;187&#34;,&#34;total_cases_per_1m_population&#34;:&#34;446,251&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,218&#34;,&#34;total_tests&#34;:&#34;102,174&#34;,&#34;tests_per_1m_population&#34;:&#34;2,665,919&#34;},{&#34;country_name&#34;:&#34;San Marino&#34;,&#34;cases&#34;:&#34;16,140&#34;,&#34;deaths&#34;:&#34;114&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;15,662&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;364&#34;,&#34;total_cases_per_1m_population&#34;:&#34;473,870&#34;,&#34;deaths_per_1m_population&#34;:&#34;3,347&#34;,&#34;total_tests&#34;:&#34;149,271&#34;,&#34;tests_per_1m_population&#34;:&#34;4,382,590&#34;},{&#34;country_name&#34;:&#34;Equatorial Guinea&#34;,&#34;cases&#34;:&#34;15,907&#34;,&#34;deaths&#34;:&#34;183&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;15,698&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;26&#34;,&#34;total_cases_per_1m_population&#34;:&#34;10,704&#34;,&#34;deaths_per_1m_population&#34;:&#34;123&#34;,&#34;total_tests&#34;:&#34;310,972&#34;,&#34;tests_per_1m_population&#34;:&#34;209,251&#34;},{&#34;country_name&#34;:&#34;Djibouti&#34;,&#34;cases&#34;:&#34;15,611&#34;,&#34;deaths&#34;:&#34;189&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;15,411&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;11&#34;,&#34;total_cases_per_1m_population&#34;:&#34;15,396&#34;,&#34;deaths_per_1m_population&#34;:&#34;186&#34;,&#34;total_tests&#34;:&#34;303,924&#34;,&#34;tests_per_1m_population&#34;:&#34;299,748&#34;},{&#34;country_name&#34;:&#34;CAR&#34;,&#34;cases&#34;:&#34;14,649&#34;,&#34;deaths&#34;:&#34;113&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;6,859&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;7,677&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,941&#34;,&#34;deaths_per_1m_population&#34;:&#34;23&#34;,&#34;total_tests&#34;:&#34;81,294&#34;,&#34;tests_per_1m_population&#34;:&#34;16,320&#34;},{&#34;country_name&#34;:&#34;Grenada&#34;,&#34;cases&#34;:&#34;14,428&#34;,&#34;deaths&#34;:&#34;220&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;13,945&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;263&#34;,&#34;total_cases_per_1m_population&#34;:&#34;127,159&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,939&#34;,&#34;total_tests&#34;:&#34;148,567&#34;,&#34;tests_per_1m_population&#34;:&#34;1,309,376&#34;},{&#34;country_name&#34;:&#34;Bermuda&#34;,&#34;cases&#34;:&#34;13,143&#34;,&#34;deaths&#34;:&#34;131&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;12,719&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;293&#34;,&#34;total_cases_per_1m_population&#34;:&#34;212,453&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,118&#34;,&#34;total_tests&#34;:&#34;866,313&#34;,&#34;tests_per_1m_population&#34;:&#34;14,003,734&#34;},{&#34;country_name&#34;:&#34;Solomon Islands&#34;,&#34;cases&#34;:&#34;12,437&#34;,&#34;deaths&#34;:&#34;139&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,194&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;1,104&#34;,&#34;total_cases_per_1m_population&#34;:&#34;17,339&#34;,&#34;deaths_per_1m_population&#34;:&#34;194&#34;,&#34;total_tests&#34;:&#34;5,117&#34;,&#34;tests_per_1m_population&#34;:&#34;7,134&#34;},{&#34;country_name&#34;:&#34;Dominica&#34;,&#34;cases&#34;:&#34;12,011&#34;,&#34;deaths&#34;:&#34;63&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,926&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;22&#34;,&#34;total_cases_per_1m_population&#34;:&#34;166,107&#34;,&#34;deaths_per_1m_population&#34;:&#34;871&#34;,&#34;total_tests&#34;:&#34;187,690&#34;,&#34;tests_per_1m_population&#34;:&#34;2,595,666&#34;},{&#34;country_name&#34;:&#34;Gambia&#34;,&#34;cases&#34;:&#34;11,995&#34;,&#34;deaths&#34;:&#34;365&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,591&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;39&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,724&#34;,&#34;deaths_per_1m_population&#34;:&#34;144&#34;,&#34;total_tests&#34;:&#34;155,686&#34;,&#34;tests_per_1m_population&#34;:&#34;61,314&#34;},{&#34;country_name&#34;:&#34;Greenland&#34;,&#34;cases&#34;:&#34;11,971&#34;,&#34;deaths&#34;:&#34;21&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,761&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;9,189&#34;,&#34;total_cases_per_1m_population&#34;:&#34;210,209&#34;,&#34;deaths_per_1m_population&#34;:&#34;369&#34;,&#34;total_tests&#34;:&#34;164,926&#34;,&#34;tests_per_1m_population&#34;:&#34;2,896,081&#34;},{&#34;country_name&#34;:&#34;Yemen&#34;,&#34;cases&#34;:&#34;11,818&#34;,&#34;deaths&#34;:&#34;2,148&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9,001&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;23&#34;,&#34;active_cases&#34;:&#34;669&#34;,&#34;total_cases_per_1m_population&#34;:&#34;381&#34;,&#34;deaths_per_1m_population&#34;:&#34;69&#34;,&#34;total_tests&#34;:&#34;265,253&#34;,&#34;tests_per_1m_population&#34;:&#34;8,553&#34;},{&#34;country_name&#34;:&#34;Monaco&#34;,&#34;cases&#34;:&#34;11,604&#34;,&#34;deaths&#34;:&#34;54&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;11,362&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;188&#34;,&#34;total_cases_per_1m_population&#34;:&#34;291,969&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,359&#34;,&#34;total_tests&#34;:&#34;54,960&#34;,&#34;tests_per_1m_population&#34;:&#34;1,382,850&#34;},{&#34;country_name&#34;:&#34;Saint Martin&#34;,&#34;cases&#34;:&#34;10,279&#34;,&#34;deaths&#34;:&#34;63&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,399&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;7&#34;,&#34;active_cases&#34;:&#34;8,817&#34;,&#34;total_cases_per_1m_population&#34;:&#34;257,903&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,581&#34;,&#34;total_tests&#34;:&#34;112,382&#34;,&#34;tests_per_1m_population&#34;:&#34;2,819,701&#34;},{&#34;country_name&#34;:&#34;Sint Maarten&#34;,&#34;cases&#34;:&#34;9,990&#34;,&#34;deaths&#34;:&#34;86&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9,841&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;10&#34;,&#34;active_cases&#34;:&#34;63&#34;,&#34;total_cases_per_1m_population&#34;:&#34;228,317&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,965&#34;,&#34;total_tests&#34;:&#34;62,056&#34;,&#34;tests_per_1m_population&#34;:&#34;1,418,261&#34;},{&#34;country_name&#34;:&#34;Eritrea&#34;,&#34;cases&#34;:&#34;9,733&#34;,&#34;deaths&#34;:&#34;103&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9,629&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1&#34;,&#34;total_cases_per_1m_population&#34;:&#34;2,678&#34;,&#34;deaths_per_1m_population&#34;:&#34;28&#34;,&#34;total_tests&#34;:&#34;23,693&#34;,&#34;tests_per_1m_population&#34;:&#34;6,518&#34;},{&#34;country_name&#34;:&#34;Caribbean Netherlands&#34;,&#34;cases&#34;:&#34;9,592&#34;,&#34;deaths&#34;:&#34;34&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9,392&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;166&#34;,&#34;total_cases_per_1m_population&#34;:&#34;359,749&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,275&#34;,&#34;total_tests&#34;:&#34;30,126&#34;,&#34;tests_per_1m_population&#34;:&#34;1,129,880&#34;},{&#34;country_name&#34;:&#34;Tonga&#34;,&#34;cases&#34;:&#34;9,553&#34;,&#34;deaths&#34;:&#34;11&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;8,306&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1,236&#34;,&#34;total_cases_per_1m_population&#34;:&#34;88,571&#34;,&#34;deaths_per_1m_population&#34;:&#34;102&#34;,&#34;total_tests&#34;:&#34;408,213&#34;,&#34;tests_per_1m_population&#34;:&#34;3,784,761&#34;},{&#34;country_name&#34;:&#34;Niger&#34;,&#34;cases&#34;:&#34;8,914&#34;,&#34;deaths&#34;:&#34;309&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;8,507&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;98&#34;,&#34;total_cases_per_1m_population&#34;:&#34;346&#34;,&#34;deaths_per_1m_population&#34;:&#34;12&#34;,&#34;total_tests&#34;:&#34;249,026&#34;,&#34;tests_per_1m_population&#34;:&#34;9,657&#34;},{&#34;country_name&#34;:&#34;Guinea-Bissau&#34;,&#34;cases&#34;:&#34;8,185&#34;,&#34;deaths&#34;:&#34;171&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,515&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;6&#34;,&#34;active_cases&#34;:&#34;499&#34;,&#34;total_cases_per_1m_population&#34;:&#34;3,989&#34;,&#34;deaths_per_1m_population&#34;:&#34;83&#34;,&#34;total_tests&#34;:&#34;132,611&#34;,&#34;tests_per_1m_population&#34;:&#34;64,628&#34;},{&#34;country_name&#34;:&#34;Comoros&#34;,&#34;cases&#34;:&#34;8,100&#34;,&#34;deaths&#34;:&#34;160&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,933&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;7&#34;,&#34;total_cases_per_1m_population&#34;:&#34;8,970&#34;,&#34;deaths_per_1m_population&#34;:&#34;177&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Sierra Leone&#34;,&#34;cases&#34;:&#34;7,681&#34;,&#34;deaths&#34;:&#34;125&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;929&#34;,&#34;deaths_per_1m_population&#34;:&#34;15&#34;,&#34;total_tests&#34;:&#34;259,958&#34;,&#34;tests_per_1m_population&#34;:&#34;31,435&#34;},{&#34;country_name&#34;:&#34;Antigua and Barbuda&#34;,&#34;cases&#34;:&#34;7,571&#34;,&#34;deaths&#34;:&#34;135&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7,402&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;34&#34;,&#34;total_cases_per_1m_population&#34;:&#34;76,172&#34;,&#34;deaths_per_1m_population&#34;:&#34;1,358&#34;,&#34;total_tests&#34;:&#34;18,901&#34;,&#34;tests_per_1m_population&#34;:&#34;190,164&#34;},{&#34;country_name&#34;:&#34;Liberia&#34;,&#34;cases&#34;:&#34;7,432&#34;,&#34;deaths&#34;:&#34;294&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,747&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;2&#34;,&#34;active_cases&#34;:&#34;1,391&#34;,&#34;total_cases_per_1m_population&#34;:&#34;1,410&#34;,&#34;deaths_per_1m_population&#34;:&#34;56&#34;,&#34;total_tests&#34;:&#34;139,824&#34;,&#34;tests_per_1m_population&#34;:&#34;26,521&#34;},{&#34;country_name&#34;:&#34;Chad&#34;,&#34;cases&#34;:&#34;7,396&#34;,&#34;deaths&#34;:&#34;193&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;4,874&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;2,329&#34;,&#34;total_cases_per_1m_population&#34;:&#34;428&#34;,&#34;deaths_per_1m_population&#34;:&#34;11&#34;,&#34;total_tests&#34;:&#34;191,341&#34;,&#34;tests_per_1m_population&#34;:&#34;11,075&#34;},{&#34;country_name&#34;:&#34;Samoa&#34;,&#34;cases&#34;:&#34;7,185&#34;,&#34;deaths&#34;:&#34;13&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1,605&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;3&#34;,&#34;active_cases&#34;:&#34;5,567&#34;,&#34;total_cases_per_1m_population&#34;:&#34;35,783&#34;,&#34;deaths_per_1m_population&#34;:&#34;65&#34;,&#34;total_tests&#34;:&#34;53,893&#34;,&#34;tests_per_1m_population&#34;:&#34;268,399&#34;},{&#34;country_name&#34;:&#34;Vanuatu&#34;,&#34;cases&#34;:&#34;6,793&#34;,&#34;deaths&#34;:&#34;12&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,991&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;5&#34;,&#34;active_cases&#34;:&#34;790&#34;,&#34;total_cases_per_1m_population&#34;:&#34;21,222&#34;,&#34;deaths_per_1m_population&#34;:&#34;37&#34;,&#34;total_tests&#34;:&#34;24,976&#34;,&#34;tests_per_1m_population&#34;:&#34;78,027&#34;},{&#34;country_name&#34;:&#34;St. Vincent Grenadines&#34;,&#34;cases&#34;:&#34;6,779&#34;,&#34;deaths&#34;:&#34;106&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;6,641&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;32&#34;,&#34;total_cases_per_1m_population&#34;:&#34;60,757&#34;,&#34;deaths_per_1m_population&#34;:&#34;950&#34;,&#34;total_tests&#34;:&#34;98,860&#34;,&#34;tests_per_1m_population&#34;:&#34;886,033&#34;},{&#34;country_name&#34;:&#34;British Virgin Islands&#34;,&#34;cases&#34;:&#34;6,296&#34;,&#34;deaths&#34;:&#34;62&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;205,792&#34;,&#34;deaths_per_1m_population&#34;:&#34;2,027&#34;,&#34;total_tests&#34;:&#34;102,862&#34;,&#34;tests_per_1m_population&#34;:&#34;3,362,163&#34;},{&#34;country_name&#34;:&#34;Sao Tome and Principe&#34;,&#34;cases&#34;:&#34;5,953&#34;,&#34;deaths&#34;:&#34;73&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,875&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;5&#34;,&#34;total_cases_per_1m_population&#34;:&#34;26,282&#34;,&#34;deaths_per_1m_population&#34;:&#34;322&#34;,&#34;total_tests&#34;:&#34;29,036&#34;,&#34;tests_per_1m_population&#34;:&#34;128,193&#34;},{&#34;country_name&#34;:&#34;Turks and Caicos&#34;,&#34;cases&#34;:&#34;5,941&#34;,&#34;deaths&#34;:&#34;36&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,862&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;43&#34;,&#34;total_cases_per_1m_population&#34;:&#34;149,791&#34;,&#34;deaths_per_1m_population&#34;:&#34;908&#34;,&#34;total_tests&#34;:&#34;478,593&#34;,&#34;tests_per_1m_population&#34;:&#34;12,066,789&#34;},{&#34;country_name&#34;:&#34;Saint Kitts and Nevis&#34;,&#34;cases&#34;:&#34;5,561&#34;,&#34;deaths&#34;:&#34;43&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;5,517&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1&#34;,&#34;total_cases_per_1m_population&#34;:&#34;103,215&#34;,&#34;deaths_per_1m_population&#34;:&#34;798&#34;,&#34;total_tests&#34;:&#34;65,141&#34;,&#34;tests_per_1m_population&#34;:&#34;1,209,046&#34;},{&#34;country_name&#34;:&#34;Cook Islands&#34;,&#34;cases&#34;:&#34;4,727&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,990&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;737&#34;,&#34;total_cases_per_1m_population&#34;:&#34;268,686&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;15,740&#34;,&#34;tests_per_1m_population&#34;:&#34;894,674&#34;},{&#34;country_name&#34;:&#34;St. Barth&#34;,&#34;cases&#34;:&#34;4,432&#34;,&#34;deaths&#34;:&#34;6&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;446,279&#34;,&#34;deaths_per_1m_population&#34;:&#34;604&#34;,&#34;total_tests&#34;:&#34;78,646&#34;,&#34;tests_per_1m_population&#34;:&#34;7,919,243&#34;},{&#34;country_name&#34;:&#34;Palau&#34;,&#34;cases&#34;:&#34;4,396&#34;,&#34;deaths&#34;:&#34;6&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3,879&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;511&#34;,&#34;total_cases_per_1m_population&#34;:&#34;240,877&#34;,&#34;deaths_per_1m_population&#34;:&#34;329&#34;,&#34;total_tests&#34;:&#34;45,500&#34;,&#34;tests_per_1m_population&#34;:&#34;2,493,151&#34;},{&#34;country_name&#34;:&#34;Kiribati&#34;,&#34;cases&#34;:&#34;3,076&#34;,&#34;deaths&#34;:&#34;13&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,597&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;3&#34;,&#34;active_cases&#34;:&#34;466&#34;,&#34;total_cases_per_1m_population&#34;:&#34;25,058&#34;,&#34;deaths_per_1m_population&#34;:&#34;106&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Anguilla&#34;,&#34;cases&#34;:&#34;2,731&#34;,&#34;deaths&#34;:&#34;9&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,716&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;4&#34;,&#34;active_cases&#34;:&#34;6&#34;,&#34;total_cases_per_1m_population&#34;:&#34;179,141&#34;,&#34;deaths_per_1m_population&#34;:&#34;590&#34;,&#34;total_tests&#34;:&#34;51,382&#34;,&#34;tests_per_1m_population&#34;:&#34;3,370,417&#34;},{&#34;country_name&#34;:&#34;Saint Pierre Miquelon&#34;,&#34;cases&#34;:&#34;2,641&#34;,&#34;deaths&#34;:&#34;1&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2,449&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;1&#34;,&#34;active_cases&#34;:&#34;191&#34;,&#34;total_cases_per_1m_population&#34;:&#34;459,864&#34;,&#34;deaths_per_1m_population&#34;:&#34;174&#34;,&#34;total_tests&#34;:&#34;22,941&#34;,&#34;tests_per_1m_population&#34;:&#34;3,994,602&#34;},{&#34;country_name&#34;:&#34;Diamond Princess&#34;,&#34;cases&#34;:&#34;712&#34;,&#34;deaths&#34;:&#34;13&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;699&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;0&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Wallis and Futuna&#34;,&#34;cases&#34;:&#34;454&#34;,&#34;deaths&#34;:&#34;7&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;438&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;9&#34;,&#34;total_cases_per_1m_population&#34;:&#34;41,713&#34;,&#34;deaths_per_1m_population&#34;:&#34;643&#34;,&#34;total_tests&#34;:&#34;20,508&#34;,&#34;tests_per_1m_population&#34;:&#34;1,884,234&#34;},{&#34;country_name&#34;:&#34;Montserrat&#34;,&#34;cases&#34;:&#34;183&#34;,&#34;deaths&#34;:&#34;2&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;174&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;7&#34;,&#34;total_cases_per_1m_population&#34;:&#34;36,622&#34;,&#34;deaths_per_1m_population&#34;:&#34;400&#34;,&#34;total_tests&#34;:&#34;9,700&#34;,&#34;tests_per_1m_population&#34;:&#34;1,941,165&#34;},{&#34;country_name&#34;:&#34;Falkland Islands&#34;,&#34;cases&#34;:&#34;128&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;N /A&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;N /A&#34;,&#34;total_cases_per_1m_population&#34;:&#34;34,944&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;8,632&#34;,&#34;tests_per_1m_population&#34;:&#34;2,356,538&#34;},{&#34;country_name&#34;:&#34;Macao&#34;,&#34;cases&#34;:&#34;82&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;82&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;123&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;5,375&#34;,&#34;tests_per_1m_population&#34;:&#34;8,079&#34;},{&#34;country_name&#34;:&#34;Vatican City&#34;,&#34;cases&#34;:&#34;29&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;29&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;36,025&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Marshall Islands&#34;,&#34;cases&#34;:&#34;15&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;8&#34;,&#34;total_cases_per_1m_population&#34;:&#34;250&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Western Sahara&#34;,&#34;cases&#34;:&#34;10&#34;,&#34;deaths&#34;:&#34;1&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;9&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;16&#34;,&#34;deaths_per_1m_population&#34;:&#34;2&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;MS Zaandam&#34;,&#34;cases&#34;:&#34;9&#34;,&#34;deaths&#34;:&#34;2&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;0&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Niue&#34;,&#34;cases&#34;:&#34;8&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;7&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;1&#34;,&#34;total_cases_per_1m_population&#34;:&#34;4,860&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Nauru&#34;,&#34;cases&#34;:&#34;3&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;3&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;274&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Saint Helena&#34;,&#34;cases&#34;:&#34;2&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;2&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;327&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;},{&#34;country_name&#34;:&#34;Micronesia&#34;,&#34;cases&#34;:&#34;1&#34;,&#34;deaths&#34;:&#34;0&#34;,&#34;region&#34;:&#34;&#34;,&#34;total_recovered&#34;:&#34;1&#34;,&#34;new_deaths&#34;:&#34;0&#34;,&#34;new_cases&#34;:&#34;0&#34;,&#34;serious_critical&#34;:&#34;0&#34;,&#34;active_cases&#34;:&#34;0&#34;,&#34;total_cases_per_1m_population&#34;:&#34;9&#34;,&#34;deaths_per_1m_population&#34;:&#34;0&#34;,&#34;total_tests&#34;:&#34;0&#34;,&#34;tests_per_1m_population&#34;:&#34;0&#34;}],&#34;statistic_taken_at&#34;:&#34;2022-04-24 11:18:01&#34;,&#34;world_total&#34;:{&#34;total_cases&#34;:&#34;509,268,964&#34;,&#34;new_cases&#34;:&#34;204,268&#34;,&#34;total_deaths&#34;:&#34;6,242,509&#34;,&#34;new_deaths&#34;:&#34;630&#34;,&#34;total_recovered&#34;:&#34;461,827,849&#34;,&#34;active_cases&#34;:&#34;41,198,606&#34;,&#34;serious_critical&#34;:&#34;42,510&#34;,&#34;total_cases_per_1m_population&#34;:&#34;65,334&#34;,&#34;deaths_per_1m_population&#34;:&#34;800.9&#34;,&#34;statistic_taken_at&#34;:&#34;2022-04-24 11:18:01&#34;}} . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . import requests url = &quot;https://api-basketball.p.rapidapi.com/leagues&quot; querystring = {&quot;search&quot;:&quot;nba&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;0bde326e5amsh275ea78168cb1c5p1be85bjsn66111b219215&quot;, &quot;X-RapidAPI-Host&quot;: &quot;api-basketball.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) . {&#34;get&#34;:&#34;leagues&#34;,&#34;parameters&#34;:{&#34;search&#34;:&#34;nba&#34;},&#34;errors&#34;:[],&#34;results&#34;:8,&#34;response&#34;:[{&#34;id&#34;:12,&#34;name&#34;:&#34;NBA&#34;,&#34;type&#34;:&#34;League&#34;,&#34;logo&#34;:&#34;https: / /media.api-sports.io /basketball /leagues /12.png&#34;,&#34;country&#34;:{&#34;id&#34;:5,&#34;name&#34;:&#34;USA&#34;,&#34;code&#34;:&#34;US&#34;,&#34;flag&#34;:&#34;https: / /media.api-sports.io /flags /us.svg&#34;},&#34;seasons&#34;:[{&#34;season&#34;:&#34;2015-2016&#34;,&#34;start&#34;:&#34;2015-10-03&#34;,&#34;end&#34;:&#34;2016-06-20&#34;},{&#34;season&#34;:&#34;2014-2015&#34;,&#34;start&#34;:&#34;2014-10-04&#34;,&#34;end&#34;:&#34;2015-06-17&#34;},{&#34;season&#34;:&#34;2021-2022&#34;,&#34;start&#34;:&#34;2021-10-03&#34;,&#34;end&#34;:&#34;2022-06-17&#34;},{&#34;season&#34;:&#34;2013-2014&#34;,&#34;start&#34;:&#34;2013-10-05&#34;,&#34;end&#34;:&#34;2014-06-16&#34;},{&#34;season&#34;:&#34;2008-2009&#34;,&#34;start&#34;:&#34;2008-10-09&#34;,&#34;end&#34;:&#34;2009-06-15&#34;},{&#34;season&#34;:&#34;2009-2010&#34;,&#34;start&#34;:&#34;2009-10-09&#34;,&#34;end&#34;:&#34;2010-06-18&#34;},{&#34;season&#34;:&#34;2010-2011&#34;,&#34;start&#34;:&#34;2010-10-04&#34;,&#34;end&#34;:&#34;2011-06-13&#34;},{&#34;season&#34;:&#34;2016-2017&#34;,&#34;start&#34;:&#34;2016-10-01&#34;,&#34;end&#34;:&#34;2017-06-13&#34;},{&#34;season&#34;:&#34;2017-2018&#34;,&#34;start&#34;:&#34;2017-10-01&#34;,&#34;end&#34;:&#34;2018-06-09&#34;},{&#34;season&#34;:&#34;2018-2019&#34;,&#34;start&#34;:&#34;2018-09-28&#34;,&#34;end&#34;:&#34;2019-05-24&#34;},{&#34;season&#34;:&#34;2019-2020&#34;,&#34;start&#34;:&#34;2019-10-04&#34;,&#34;end&#34;:&#34;2020-10-11&#34;},{&#34;season&#34;:&#34;2020-2021&#34;,&#34;start&#34;:&#34;2020-12-12&#34;,&#34;end&#34;:&#34;2021-07-21&#34;},{&#34;season&#34;:&#34;2011-2012&#34;,&#34;start&#34;:&#34;2011-12-17&#34;,&#34;end&#34;:&#34;2012-06-22&#34;},{&#34;season&#34;:&#34;2022-2023&#34;,&#34;start&#34;:&#34;2022-09-30&#34;,&#34;end&#34;:&#34;2023-04-09&#34;},{&#34;season&#34;:&#34;2012-2013&#34;,&#34;start&#34;:&#34;2012-10-07&#34;,&#34;end&#34;:&#34;2013-06-21&#34;}]},{&#34;id&#34;:20,&#34;name&#34;:&#34;NBA - G League&#34;,&#34;type&#34;:&#34;League&#34;,&#34;logo&#34;:&#34;https: / /media.api-sports.io /basketball /leagues /20.png&#34;,&#34;country&#34;:{&#34;id&#34;:5,&#34;name&#34;:&#34;USA&#34;,&#34;code&#34;:&#34;US&#34;,&#34;flag&#34;:&#34;https: / /media.api-sports.io /flags /us.svg&#34;},&#34;seasons&#34;:[{&#34;season&#34;:&#34;2012-2013&#34;,&#34;start&#34;:&#34;2012-11-24&#34;,&#34;end&#34;:&#34;2013-04-28&#34;},{&#34;season&#34;:&#34;2015-2016&#34;,&#34;start&#34;:&#34;2015-11-13&#34;,&#34;end&#34;:&#34;2016-04-28&#34;},{&#34;season&#34;:&#34;2014-2015&#34;,&#34;start&#34;:&#34;2014-11-15&#34;,&#34;end&#34;:&#34;2015-04-26&#34;},{&#34;season&#34;:&#34;2013-2014&#34;,&#34;start&#34;:&#34;2013-11-23&#34;,&#34;end&#34;:&#34;2014-04-26&#34;},{&#34;season&#34;:&#34;2016-2017&#34;,&#34;start&#34;:&#34;2016-11-12&#34;,&#34;end&#34;:&#34;2017-04-27&#34;},{&#34;season&#34;:&#34;2017-2018&#34;,&#34;start&#34;:&#34;2017-11-03&#34;,&#34;end&#34;:&#34;2018-04-11&#34;},{&#34;season&#34;:&#34;2018-2019&#34;,&#34;start&#34;:&#34;2018-11-02&#34;,&#34;end&#34;:&#34;2019-04-13&#34;},{&#34;season&#34;:&#34;2019-2020&#34;,&#34;start&#34;:&#34;2019-11-09&#34;,&#34;end&#34;:&#34;2020-03-29&#34;},{&#34;season&#34;:&#34;2020-2021&#34;,&#34;start&#34;:&#34;2021-02-10&#34;,&#34;end&#34;:&#34;2021-03-11&#34;},{&#34;season&#34;:&#34;2021-2022&#34;,&#34;start&#34;:&#34;2021-12-27&#34;,&#34;end&#34;:&#34;2022-04-18&#34;},{&#34;season&#34;:&#34;2022-2023&#34;,&#34;start&#34;:&#34;2022-11-03&#34;,&#34;end&#34;:&#34;2023-03-22&#34;}]},{&#34;id&#34;:17,&#34;name&#34;:&#34;NBA - Las Vegas Summer League&#34;,&#34;type&#34;:&#34;League&#34;,&#34;logo&#34;:&#34;https: / /media.api-sports.io /basketball /leagues /17.png&#34;,&#34;country&#34;:{&#34;id&#34;:5,&#34;name&#34;:&#34;USA&#34;,&#34;code&#34;:&#34;US&#34;,&#34;flag&#34;:&#34;https: / /media.api-sports.io /flags /us.svg&#34;},&#34;seasons&#34;:[{&#34;season&#34;:2022,&#34;start&#34;:&#34;2022-07-08&#34;,&#34;end&#34;:&#34;2022-07-18&#34;},{&#34;season&#34;:2021,&#34;start&#34;:&#34;2021-08-08&#34;,&#34;end&#34;:&#34;2021-08-18&#34;},{&#34;season&#34;:2016,&#34;start&#34;:&#34;2016-07-08&#34;,&#34;end&#34;:&#34;2016-07-19&#34;},{&#34;season&#34;:2017,&#34;start&#34;:&#34;2017-07-07&#34;,&#34;end&#34;:&#34;2017-07-18&#34;},{&#34;season&#34;:2018,&#34;start&#34;:&#34;2018-07-06&#34;,&#34;end&#34;:&#34;2018-07-18&#34;},{&#34;season&#34;:2015,&#34;start&#34;:&#34;2015-07-10&#34;,&#34;end&#34;:&#34;2015-07-21&#34;},{&#34;season&#34;:2014,&#34;start&#34;:&#34;2014-07-11&#34;,&#34;end&#34;:&#34;2014-07-22&#34;},{&#34;season&#34;:2013,&#34;start&#34;:&#34;2013-07-12&#34;,&#34;end&#34;:&#34;2013-07-23&#34;},{&#34;season&#34;:2019,&#34;start&#34;:&#34;2019-07-05&#34;,&#34;end&#34;:&#34;2019-07-16&#34;}]},{&#34;id&#34;:21,&#34;name&#34;:&#34;NBA - Sacramento Summer League&#34;,&#34;type&#34;:&#34;League&#34;,&#34;logo&#34;:&#34;https: / /media.api-sports.io /basketball /leagues /21.png&#34;,&#34;country&#34;:{&#34;id&#34;:5,&#34;name&#34;:&#34;USA&#34;,&#34;code&#34;:&#34;US&#34;,&#34;flag&#34;:&#34;https: / /media.api-sports.io /flags /us.svg&#34;},&#34;seasons&#34;:[{&#34;season&#34;:2021,&#34;start&#34;:&#34;2021-08-04&#34;,&#34;end&#34;:&#34;2021-08-05&#34;},{&#34;season&#34;:2018,&#34;start&#34;:&#34;2018-07-03&#34;,&#34;end&#34;:&#34;2018-07-05&#34;},{&#34;season&#34;:2019,&#34;start&#34;:&#34;2019-07-02&#34;,&#34;end&#34;:&#34;2019-07-03&#34;}]},{&#34;id&#34;:19,&#34;name&#34;:&#34;NBA - Utah Summer League&#34;,&#34;type&#34;:&#34;League&#34;,&#34;logo&#34;:&#34;https: / /media.api-sports.io /basketball /leagues /19.png&#34;,&#34;country&#34;:{&#34;id&#34;:5,&#34;name&#34;:&#34;USA&#34;,&#34;code&#34;:&#34;US&#34;,&#34;flag&#34;:&#34;https: / /media.api-sports.io /flags /us.svg&#34;},&#34;seasons&#34;:[{&#34;season&#34;:2019,&#34;start&#34;:&#34;2019-07-01&#34;,&#34;end&#34;:&#34;2019-07-04&#34;},{&#34;season&#34;:2015,&#34;start&#34;:&#34;2015-07-06&#34;,&#34;end&#34;:&#34;2015-07-10&#34;},{&#34;season&#34;:2016,&#34;start&#34;:&#34;2016-07-04&#34;,&#34;end&#34;:&#34;2016-07-08&#34;},{&#34;season&#34;:2017,&#34;start&#34;:&#34;2017-07-03&#34;,&#34;end&#34;:&#34;2017-07-07&#34;},{&#34;season&#34;:2018,&#34;start&#34;:&#34;2018-07-02&#34;,&#34;end&#34;:&#34;2018-07-06&#34;}]},{&#34;id&#34;:176,&#34;name&#34;:&#34;NBA Orlando Summer League&#34;,&#34;type&#34;:&#34;cup&#34;,&#34;logo&#34;:&#34;https: / /media.api-sports.io /basketball /leagues /176.png&#34;,&#34;country&#34;:{&#34;id&#34;:5,&#34;name&#34;:&#34;USA&#34;,&#34;code&#34;:&#34;US&#34;,&#34;flag&#34;:&#34;https: / /media.api-sports.io /flags /us.svg&#34;},&#34;seasons&#34;:[{&#34;season&#34;:2013,&#34;start&#34;:&#34;2013-07-07&#34;,&#34;end&#34;:&#34;2013-07-12&#34;},{&#34;season&#34;:2014,&#34;start&#34;:&#34;2014-07-05&#34;,&#34;end&#34;:&#34;2014-07-11&#34;},{&#34;season&#34;:2015,&#34;start&#34;:&#34;2015-07-04&#34;,&#34;end&#34;:&#34;2015-07-10&#34;},{&#34;season&#34;:2016,&#34;start&#34;:&#34;2016-07-02&#34;,&#34;end&#34;:&#34;2016-07-08&#34;},{&#34;season&#34;:2017,&#34;start&#34;:&#34;2017-07-01&#34;,&#34;end&#34;:&#34;2017-07-06&#34;}]},{&#34;id&#34;:274,&#34;name&#34;:&#34;NBA Salt Lake City Summer League&#34;,&#34;type&#34;:&#34;League&#34;,&#34;logo&#34;:&#34;https: / /media.api-sports.io /basketball /leagues /274.png&#34;,&#34;country&#34;:{&#34;id&#34;:5,&#34;name&#34;:&#34;USA&#34;,&#34;code&#34;:&#34;US&#34;,&#34;flag&#34;:&#34;https: / /media.api-sports.io /flags /us.svg&#34;},&#34;seasons&#34;:[{&#34;season&#34;:2022,&#34;start&#34;:&#34;2022-07-05&#34;,&#34;end&#34;:&#34;2022-07-08&#34;},{&#34;season&#34;:2021,&#34;start&#34;:&#34;2021-08-03&#34;,&#34;end&#34;:&#34;2021-08-07&#34;}]},{&#34;id&#34;:13,&#34;name&#34;:&#34;NBA W&#34;,&#34;type&#34;:&#34;League&#34;,&#34;logo&#34;:&#34;https: / /media.api-sports.io /basketball /leagues /13.png&#34;,&#34;country&#34;:{&#34;id&#34;:5,&#34;name&#34;:&#34;USA&#34;,&#34;code&#34;:&#34;US&#34;,&#34;flag&#34;:&#34;https: / /media.api-sports.io /flags /us.svg&#34;},&#34;seasons&#34;:[{&#34;season&#34;:2010,&#34;start&#34;:&#34;2010-05-15&#34;,&#34;end&#34;:&#34;2010-09-17&#34;},{&#34;season&#34;:2011,&#34;start&#34;:&#34;2011-06-04&#34;,&#34;end&#34;:&#34;2011-10-08&#34;},{&#34;season&#34;:2009,&#34;start&#34;:&#34;2009-06-06&#34;,&#34;end&#34;:&#34;2009-10-10&#34;},{&#34;season&#34;:2008,&#34;start&#34;:&#34;2008-05-17&#34;,&#34;end&#34;:&#34;2008-10-05&#34;},{&#34;season&#34;:2019,&#34;start&#34;:&#34;2019-05-10&#34;,&#34;end&#34;:&#34;2020-10-06&#34;},{&#34;season&#34;:2012,&#34;start&#34;:&#34;2012-05-19&#34;,&#34;end&#34;:&#34;2012-10-22&#34;},{&#34;season&#34;:2013,&#34;start&#34;:&#34;2013-05-25&#34;,&#34;end&#34;:&#34;2013-10-11&#34;},{&#34;season&#34;:2014,&#34;start&#34;:&#34;2014-05-16&#34;,&#34;end&#34;:&#34;2014-09-13&#34;},{&#34;season&#34;:2015,&#34;start&#34;:&#34;2015-06-05&#34;,&#34;end&#34;:&#34;2015-10-15&#34;},{&#34;season&#34;:2018,&#34;start&#34;:&#34;2018-05-06&#34;,&#34;end&#34;:&#34;2018-09-13&#34;},{&#34;season&#34;:2017,&#34;start&#34;:&#34;2017-04-29&#34;,&#34;end&#34;:&#34;2017-10-05&#34;},{&#34;season&#34;:2016,&#34;start&#34;:&#34;2016-05-14&#34;,&#34;end&#34;:&#34;2016-10-21&#34;},{&#34;season&#34;:2021,&#34;start&#34;:&#34;2021-05-14&#34;,&#34;end&#34;:&#34;2021-10-17&#34;},{&#34;season&#34;:2022,&#34;start&#34;:&#34;2022-05-06&#34;,&#34;end&#34;:&#34;2022-09-18&#34;}]}]} . import requests url = &quot;https://api-nba-v1.p.rapidapi.com/seasons&quot; headers = { &quot;X-RapidAPI-Key&quot;: &quot;0bde326e5amsh275ea78168cb1c5p1be85bjsn66111b219215&quot;, &quot;X-RapidAPI-Host&quot;: &quot;api-nba-v1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers) print(response.text) . {&#34;get&#34;:&#34;seasons /&#34;,&#34;parameters&#34;:[],&#34;errors&#34;:[],&#34;results&#34;:8,&#34;response&#34;:[2015,2016,2017,2018,2019,2020,2021,2022]} . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;jcmbea0fa2ff5msh7f14bf69be38ca6p175482jsn6c4988114560&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#34;message&#34;:&#34;You are not subscribed to this API.&#34;} . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? {&#39;message&#39;: &#39;You are not subscribed to this API.&#39;} . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post49": {
            "title": "Playing around with Java Script",
            "content": "Math.round(93.5); . 94 . const removeDuplicates = (arr) =&gt; [...new Set(arr)] removeDuplicates([31, 56, 12, 31, 45, 12, 31]) //[ 31, 56, 12, 45 ] . [ 31, 56, 12, 45 ] . const dayDif = (date1, date2) =&gt; Math.ceil(Math.abs(date1.getTime() - date2.getTime()) / 86400000) dayDif(new Date(&quot;2022-09-30&quot;), new Date(&quot;2022-10-13&quot;)) . 13 .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2022/09/30/Playing-around-Java-Script.html",
            "relUrl": "/jupyter/2022/09/30/Playing-around-Java-Script.html",
            "date": " • Sep 30, 2022"
        }
        
    
  
    
        ,"post50": {
            "title": "Playing around with Java Script",
            "content": "Math.round(93.5); . 94 . const removeDuplicates = (arr) =&gt; [...new Set(arr)] removeDuplicates([31, 56, 12, 31, 45, 12, 31]) //[ 31, 56, 12, 45 ] . [ 31, 56, 12, 45 ] . const dayDif = (date1, date2) =&gt; Math.ceil(Math.abs(date1.getTime() - date2.getTime()) / 86400000) dayDif(new Date(&quot;2022-09-30&quot;), new Date(&quot;2022-10-13&quot;)) . 13 .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2022/09/29/Playing-around-Java-Script-copy.html",
            "relUrl": "/jupyter/2022/09/29/Playing-around-Java-Script-copy.html",
            "date": " • Sep 29, 2022"
        }
        
    
  
    
        ,"post51": {
            "title": "Vocab and Agile Notes",
            "content": "",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2022/09/29/NATM.html",
            "relUrl": "/2022/09/29/NATM.html",
            "date": " • Sep 29, 2022"
        }
        
    
  
    
        ,"post52": {
            "title": "Python Lists and Dictionaries",
            "content": "print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) name = &quot;Luke Riggins&quot; print(&quot;name&quot;, name, type(name)) print() # variable of type integer print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) age = 17 print(&quot;age&quot;, age, type(age)) print() # variable of type float print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) score = 90.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) print(&quot;What is variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection?&quot;) print(&quot;What is different about the list output?&quot;) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;Bash&quot;] # *I added bash as a language* print(&quot;langs&quot;, langs, type(langs), &quot;length&quot;, len(langs)) print(&quot;- langs[3]&quot;, langs[3], type(langs[3])) # *I changed the index from 0 to 3 so that the print command will print Bash instead of Python* print() # variable of type dictionary (a group of keys and values) print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) print(&quot;What is different about the dictionary output?&quot;) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person), &quot;length&quot;, len(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . What is the variable name/key? value? type? primitive or collection, why? name Luke Riggins &lt;class &#39;str&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? age 17 &lt;class &#39;int&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? score 90.0 &lt;class &#39;float&#39;&gt; What is variable name/key? value? type? primitive or collection? What is different about the list output? langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;] &lt;class &#39;list&#39;&gt; length 4 - langs[3] Bash &lt;class &#39;str&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? What is different about the dictionary output? person {&#39;name&#39;: &#39;Luke Riggins&#39;, &#39;age&#39;: 17, &#39;score&#39;: 90.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;]} &lt;class &#39;dict&#39;&gt; length 4 - person[&#34;name&#34;] Luke Riggins &lt;class &#39;str&#39;&gt; . InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Ethan&quot;, &quot;LastName&quot;: &quot;Nyguen&quot;, &quot;DOB&quot;: &quot;October 3&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;EthanN45233@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Luke&quot;, &quot;LastName&quot;: &quot;Riggins&quot;, &quot;DOB&quot;: &quot;December 2&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;luker56233@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;Volkswagon Passat&quot;] }) # PUTTING MY INFORMATION (HACK!) InfoDb.append({ &quot;FirstName&quot;: &quot;Luke&quot;, &quot;LastName&quot;: &quot;Riggins&quot;, &quot;DOB&quot;: &quot;December 2&quot;, &quot;Residence&quot;: &quot;Rancho Bernardo&quot;, &quot;Email&quot;: &quot;luke120204@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;Toyota&quot;] }) # PUTTING MY PARTER&#39;S INFORMATION (HACK!) InfoDb.append({ &quot;FirstName&quot;: &quot;Jeffery&quot;, &quot;LastName&quot;: &quot;Lee&quot;, &quot;DOB&quot;: &quot;December 27&quot;, &quot;Residence&quot;: &quot;4S Ranch&quot;, &quot;Email&quot;: &quot;jefferyl56783@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;Honda Accord&quot;] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;Ethan&#39;, &#39;LastName&#39;: &#39;Nyguen&#39;, &#39;DOB&#39;: &#39;October 3&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;EthanN45233@stu.powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]}, {&#39;FirstName&#39;: &#39;Luke&#39;, &#39;LastName&#39;: &#39;Riggins&#39;, &#39;DOB&#39;: &#39;December 2&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;luker56233@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;Volkswagon Passat&#39;]}, {&#39;FirstName&#39;: &#39;Luke&#39;, &#39;LastName&#39;: &#39;Riggins&#39;, &#39;DOB&#39;: &#39;December 2&#39;, &#39;Residence&#39;: &#39;Rancho Bernardo&#39;, &#39;Email&#39;: &#39;luke120204@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Toyota&#39;]}, {&#39;FirstName&#39;: &#39;Jeffery&#39;, &#39;LastName&#39;: &#39;Lee&#39;, &#39;DOB&#39;: &#39;December 27&#39;, &#39;Residence&#39;: &#39;4S Ranch&#39;, &#39;Email&#39;: &#39;jefferyl56783@stu.powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;Honda Accord&#39;]}] . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Formatted output of List/Dictionary - for loop . Prepare a function to format the data . | Prepare a function to iterate through the list . | Activate your function . | . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Alternate Methods for iteration . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Recursion . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Creating a For Loop with Index . for indx, record in enumerate(InfoDb): print(&quot;Record #&quot; + str(indx+1) + &quot;: &quot;, end = &quot;&quot;) print_data(record) . Record #1: Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Record #2: Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Record #3: Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Record #4: Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Reverse Order . for record in reversed(InfoDb): print_data(record) . Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2022/09/29/Dcitionaries-Lists-and-Dictionaries.html",
            "relUrl": "/jupyter/2022/09/29/Dcitionaries-Lists-and-Dictionaries.html",
            "date": " • Sep 29, 2022"
        }
        
    
  
    
        ,"post53": {
            "title": "Vocab copy",
            "content": "Vocab and Agile Notes . toc: true layout: post description: Vocab to learn categories: [markdown] title: Vocab and Agile Notes . Vocab Definition . Vocab | Explanation | . Sequence | More than one line of code | . Static Text | Text that doesn’t change | . Input | Code that is inserted by the user | . Output | The response the computer generates from the input | . Scrum Master | Manage scrum board and ensure agile framework is followed track issues and looks for opportunities for team to improve | . DevOps | Combination of cultural philosophies, practices, and tools that increase a team’s ability to deliver applications and services at high velocity | . Frontend Developer | Develops what users interact with and what the user sees | . Backend Developer | Develops what goes on behind the scenes, what the user doesn’t see, the technical stuff | . J.son | Transport information between systems | . Agile | Practices like pair programming, planning sessions, sprints… | . Sequence | Two or more lines of code | . Array | Stores collection of multiple items under single variable name | . Agile Notes 1.Our highest priority is to satisfy the customer through early and continuous delivery of valuable software. . 2.Welcome changing requirements, even late in development. Agile processes harness change for the customer’s competitive advantage. . 3.Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale. . 4.Business people and developers must work together daily throughout the project. . 5.Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done. . 6.The most efficient and effective method of conveying information to and within a development team is face-to-face conversation. . 7.Working software is the primary measure of progress. . 8.Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely. . 9.Continuous attention to technical excellence and good design enhances agility. . 10.Simplicity–the art of maximizing the amount of work not done–is essential. . 11.The best architectures, requirements, and designs emerge from self-organizing teams. . 12.At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2022/09/28/Vocab-copy.html",
            "relUrl": "/2022/09/28/Vocab-copy.html",
            "date": " • Sep 28, 2022"
        }
        
    
  
    
        ,"post54": {
            "title": "Vocab and Agile Notes",
            "content": "",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2022/09/28/Agile-Notes-and-Vocab.html",
            "relUrl": "/2022/09/28/Agile-Notes-and-Vocab.html",
            "date": " • Sep 28, 2022"
        }
        
    
  
    
        ,"post55": {
            "title": "JavaScript Tutorial",
            "content": "Issues . This should have taken only about 30 minutes or so. It took me like 5 hours. I had so many issues and it stemmed from my kernel because it did not pop up that I had Node.Js and instead only Python. I tried redownloading it many times and using isjsinstall in my terminal. I even tried seein gif I could do it on a friends computer and it did not work.I tried putting the code on websites that could run Javascript but they would not work because the code in the table only works in vscode in specific. I finished this Wednesday morning when I checked and when I clicked on Kernels Node.Js actually showed up and I completed it. . console.log(&quot;Hello, World!&quot;); . Hello, World! . var msg = &quot;Hello Luke&quot;; console.log(msg); . Hello Luke . function logIt(output) { console.log(output); } logIt(msg); . Hello Luke . console.log(&quot;Whats Up&quot;) logIt(&quot;What year is it?&quot;); logIt(2022) . How are you doing? What day is today? 2022 . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } console.log(&quot;Different types of outputs&quot;) logItType(&quot;Whats Up&quot;); // String logItType(2022); // Number logItType([1, 2, 3]); // Object is generic for this Array, which similar to Python List . Different types of outputs string ; Whats Up number ; 2022 object ; [ 1, 2, 3 ] . // define a function to hold data for a Person function Person(name, age, classOf) { this.name = name; this.age = age; this.classOf = classOf; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, age: this.age, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable devOps var devOps = new Person(&quot;Luke&quot;, &quot;17&quot;, 2023); devOps.setRole(&quot;DevOps&quot;); // output of Object and JSON/string associated with DevOps logItType(devOps); // object type is easy to work with in JavaScript logItType(devOps.toJSON()); // json/string is useful when passing data on internet . object ; Person { name: &#39;Luke&#39;, age: &#39;17&#39;, classOf: 2023, role: &#39;DevOps&#39; } string ; {&#34;name&#34;:&#34;Luke&#34;,&#34;age&#34;:&#34;17&#34;,&#34;classOf&#34;:2023,&#34;role&#34;:&#34;DevOps&#34;} . // define a student Array of Person(s) var members = [ new Person(&quot;James&quot;, &quot;16&quot;, 2024), new Person(&quot;Ethan&quot;, &quot;16&quot;, 2024), new Person(&quot;Jeffrey&quot;, &quot;17&quot;, 2023), ]; // define a classroom and build Classroom objects and json function Group(devOps, members){ // 1 DevOps, many members // start group with DevOps devOps.setRole(&quot;DevOps&quot;); this.devOps = devOps; this.group = [devOps]; // add each member to group this.members = members; this.members.forEach(members =&gt; { members.setRole(&quot;Members&quot;); this.group.push(members); }); // build json/string format of group this.json = []; this.group.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci group from formerly defined teacher and students compsci = new Group(devOps, members); // output of Objects and JSON in CompSci group logItType(compsci.group); // constructed classroom object logItType(compsci.group[0].name); // abstract 1st objects name logItType(compsci.json[0]); // show json conversion of 1st object to string logItType(JSON.parse(compsci.json[0])); // show JSON.parse inverse of JSON.stringify . object ; [ Person { name: &#39;Luke&#39;, age: &#39;17&#39;, classOf: 2023, role: &#39;DevOps&#39; }, Person { name: &#39;James&#39;, age: &#39;16&#39;, classOf: 2024, role: &#39;Members&#39; }, Person { name: &#39;Ethan&#39;, age: &#39;16&#39;, classOf: 2024, role: &#39;Members&#39; }, Person { name: &#39;Jeffrey&#39;, age: &#39;17&#39;, classOf: 2023, role: &#39;Members&#39; } ] string ; Luke string ; {&#34;name&#34;:&#34;Luke&#34;,&#34;age&#34;:&#34;17&#34;,&#34;classOf&#34;:2023,&#34;role&#34;:&#34;DevOps&#34;} object ; { name: &#39;Luke&#39;, age: &#39;17&#39;, classOf: 2023, role: &#39;DevOps&#39; } . // define an HTML conversion &quot;method&quot; associated with Group Group.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Age&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;classOf&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.group for (var row of compsci.group) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.age + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameAgeclassOfRole . Luke | 17 | 2023 | DevOps | James | 16 | 2024 | Members | Ethan | 16 | 2024 | Members | Jeffrey | 17 | 2023 | Members | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%205/2022/09/27/Javascript-Tutorial.html",
            "relUrl": "/week%205/2022/09/27/Javascript-Tutorial.html",
            "date": " • Sep 27, 2022"
        }
        
    
  
    
        ,"post56": {
            "title": "Video Notes",
            "content": "Video Notes . I watched the video and there were a lot of clear talking points that I could take away from and learn. The first thing I realized that I had to do was to focus onreducing academic stress on myself. I should use resources like peers and teachers to help better myself and ask for help. I also need to form habits that I can carry with me later on in life because jsut because I am getting through now with my habits, does not mean I can’t improve. I also need to have the right attitude which ishaving a growth mindset. Ms Naidu says the biggest problem at Del Norte is collaboration because there are many kids who work hard and are commmitted. It could be way easier however, if they just talked. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2022/09/22/Video-Notes.html",
            "relUrl": "/2022/09/22/Video-Notes.html",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post57": {
            "title": "NATM",
            "content": "Night at the Museum Blog . . The Dark colors are what originally caught my eye, but after a few seconds of analyzing I could tell that the artists intentions behind the piece were most likely to spread awarness of global warming. This is a really cool way to merge your personal beliefs with art. The next project I visited was in the art section where I saw this beautifully painted artpiece. . . Their program tracks the stocks of a few major companies such as GOOGLE, APPLE, and Tesla, which is also the data from their API. You can see this images tracks the stock price of a GOOGL stock price. The other CSP project I visited was made by another group from MORT P4. . . Next I found myself in the ceramics section, where there were plenty of well made pieces. This plate is the piece I liked the most because they got the San Diego Padres Logo and colors perfectly. Additionally the pumpkin was made perfectly and was extremely detailed. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2022/09/22/NATM.html",
            "relUrl": "/jupyter/2022/09/22/NATM.html",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post58": {
            "title": "Notes for Video on a Happy Life",
            "content": "I watched the video and there were a lot of clear talking points that I could take away from and learn. The first thing I realized that I had to do was to focus onreducing academic stress on myself. I should use resources like peers and teachers to help better myself and ask for help. I also need to form habits that I can carry with me later on in life because jsut because I am getting through now with my habits, does not mean I can&#39;t improve. I also need to have the right attitude which ishaving a growth mindset. Ms Naidu says the biggest problem at Del Norte is collaboration because there are many kids who work hard and are commmitted. It could be way easier however, if they just talked. .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2022/09/21/Psychology-and-the-Good-Life,-by-Laurie-Santos.html",
            "relUrl": "/jupyter/2022/09/21/Psychology-and-the-Good-Life,-by-Laurie-Santos.html",
            "date": " • Sep 21, 2022"
        }
        
    
  
    
        ,"post59": {
            "title": "Docker Server",
            "content": "Hello, my name is Luke. Aloha I like to play Basketball . .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2022/09/15/Docker-Server.html",
            "relUrl": "/2022/09/15/Docker-Server.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post60": {
            "title": "Quiz Code",
            "content": "Planning: I wanted to make a Geogrpahy quiz using country outlines with 4 options per question and 3 modes: Easy, Normal, and Hard mode. I finished three of the modes. . I made the quiz completely on my own through trial and error. The first thing I did was learn how to bind buttons with screens so the user could see if they got it wrong in Easy mode. The Normal Mode I used an On Event in the Ui controls and for each button I made sure it would show up if it was correct or incorrect right away and I put a timer on the set screen so the user could see if they got it right before the screen changed to the next question. I also added an info about why I created it. I also made a Settings page were they could press the music button to turn off and on the music if they wanted to listen to it while taking the quiz. I tried to make each mode as far as code be more and more difficult to code and more complex. I did it all myself and it took about 6 hours. . https://studio.code.org/projects/applab/bYO5QNczfGnFlLXQwivUmJwkX4no5v-YHkHYyfKbc5Y . onEvent(&quot;Play&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen1&quot;); }); onEvent(&quot;Info&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen20&quot;); }); onEvent(&quot;back&quot;, &quot;click&quot;, function(event) { setScreen(&quot;HomePage&quot;); }); onEvent(&quot;easy&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen2&quot;); playSound(&quot;sound://category_achievements/peaceful_win_1.mp3&quot;, false); }); onEvent(&quot;hard&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen12&quot;); playSound(&quot;sound://category_achievements/melodic_win_1.mp3&quot;, false); }); onEvent(&quot;normal&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen7&quot;); playSound(&quot;sound://category_explosion/melodic_loss_6.mp3&quot;, false); }); onEvent(&quot;italy&quot;, &quot;click&quot;, function(event ) { setScreen(&quot;screen3&quot;); }); onEvent(&quot;netherlands&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen18&quot;); }); onEvent(&quot;germany&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen18&quot;); }); onEvent(&quot;france&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen18&quot;); }); onEvent(&quot;incorrect&quot;, &quot;click&quot;, function(event) { setScreen(&quot;HomePage&quot;); }); onEvent(&quot;UK&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen4&quot;); }); onEvent(&quot;Ireland&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen18&quot;); }); onEvent(&quot;Australia&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen18&quot;); }); onEvent(&quot;Spain&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen18&quot;); }); onEvent(&quot;SK&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen5&quot;); }); onEvent(&quot;NK&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen18&quot;); }); onEvent(&quot;Japan&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen18&quot;); }); onEvent(&quot;China&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen18&quot;); }); onEvent(&quot;Canada&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen18&quot;); }); onEvent(&quot;Brazil&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen6&quot;); }); onEvent(&quot;Mexico&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen18&quot;); }); onEvent(&quot;USA&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen18&quot;); }); onEvent(&quot;India&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen21&quot;); }); onEvent(&quot;Egypt&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen18&quot;); }); onEvent(&quot;Russia&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen18&quot;); }); onEvent(&quot;Bang&quot;, &quot;click&quot;, function(event ) { setScreen(&quot;screen18&quot;); }); onEvent(&quot;end&quot;, &quot;click&quot;, function(event) { setScreen(&quot;HomePage&quot;); }); onEvent(&quot;Malay&quot;, &quot;click&quot;, function(event) { showElement(&quot;rightt&quot;); playSound(&quot;sound://category_male_voiceover/correct_male.mp3&quot;, false); setTimeout(function() { setScreen(&quot;screenchile&quot;); }, 2000); }); onEvent(&quot;Philli&quot;, &quot;click&quot;, function(event) { showElement(&quot;wrongg&quot;); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { setScreen(&quot;screenchile&quot;); }, 2000); }); onEvent(&quot;NZ&quot;, &quot;click&quot;, function(event) { showElement(&quot;wrongg&quot;); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { setScreen(&quot;screenchile&quot;); }, 2000); }); onEvent(&quot;Indo&quot;, &quot;click&quot;, function(event) { showElement(&quot;wrongg&quot;); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { setScreen(&quot;screenchile&quot;); }, 2000); }); onEvent(&quot;chile&quot;, &quot;click&quot;, function(event) { showElement(&quot;rightt2&quot;); playSound(&quot;sound://category_male_voiceover/correct_male.mp3&quot;, false); setTimeout(function() { setScreen(&quot;screen9&quot;); }, 2000); }); onEvent(&quot;ecuador&quot;, &quot;click&quot;, function(event) { showElement(&quot;wrongg2&quot;); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { setScreen(&quot;screen9&quot;); }, 2000); }); onEvent(&quot;suriname&quot;, &quot;click&quot;, function(event) { showElement(&quot;wrongg2&quot;); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { setScreen(&quot;screen9&quot;); }, 2000); }); onEvent(&quot;peru&quot;, &quot;click&quot;, function(event) { showElement(&quot;wrongg2&quot;); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { setScreen(&quot;screen9&quot;); }, 2000); }); onEvent(&quot;pakistan&quot;, &quot;click&quot;, function(event ) { showElement(&quot;righttTwo&quot;); playSound(&quot;sound://category_male_voiceover/correct_male.mp3&quot;, false); setTimeout(function() { setScreen(&quot;swiss&quot;); }, 2000); }); onEvent(&quot;Iran&quot;, &quot;click&quot;, function(event) { showElement(&quot;wronggtwo&quot;); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { setScreen(&quot;swiss&quot;); }, 2000); }); onEvent(&quot;Iraq&quot;, &quot;click&quot;, function(event) { showElement(&quot;wronggtwo&quot;); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { setScreen(&quot;swiss&quot;); }, 2000); }); onEvent(&quot;Saudi&quot;, &quot;click&quot;, function(event ) { showElement(&quot;wronggtwo&quot;); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { setScreen(&quot;swiss&quot;); }, 2000); }); onEvent(&quot;swis&quot;, &quot;click&quot;, function(event ) { showElement(&quot;rightt3&quot;); playSound(&quot;sound://category_male_voiceover/correct_male.mp3&quot;, false); setTimeout(function() { setScreen(&quot;screen11&quot;); }, 2000); }); onEvent(&quot;Czechia&quot;, &quot;click&quot;, function(event) { showElement(&quot;wrongg3&quot;); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { setScreen(&quot;screen11&quot;); }, 2000); }); onEvent(&quot;Hungary&quot;, &quot;click&quot;, function(event) { showElement(&quot;wrongg3&quot;); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { setScreen(&quot;screen11&quot;); }, 2000); }); onEvent(&quot;romania&quot;, &quot;click&quot;, function(event) { showElement(&quot;wrongg3&quot;); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { setScreen(&quot;screen11&quot;); }, 2000); }); onEvent(&quot;tanzania&quot;, &quot;click&quot;, function(event) { showElement(&quot;rightt4&quot;); playSound(&quot;sound://category_male_voiceover/correct_male.mp3&quot;, false); setTimeout(function() { setScreen(&quot;HomePage&quot;); }, 2000); }); onEvent(&quot;morocco&quot;, &quot;click&quot;, function(event) { showElement(&quot;wrongg4&quot;); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { setScreen(&quot;HomePage&quot;); }, 2000); }); onEvent(&quot;repofcongo&quot;, &quot;click&quot;, function(event) { showElement(&quot;wrongg4&quot;); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { setScreen(&quot;HomePage&quot;); }, 2000); }); onEvent(&quot;zimbabwe&quot;, &quot;click&quot;, function(event) { showElement(&quot;wrongg4&quot;); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { setScreen(&quot;HomePage&quot;); }, 2000); }); onEvent(&quot;Settings1&quot;, &quot;click&quot;, function(event) { setScreen(&quot;screen22&quot;); }); onEvent(&quot;Back2&quot;, &quot;click&quot;, function(event) { setScreen(&quot;HomePage&quot;); }); onEvent(&quot;Musicc&quot;, &quot;click&quot;, function(event) { playSound(&quot;sound://category_background/gametime.mp3&quot;, false); textLabel(&quot;Musicc&quot;, &quot;Hi&quot;); }); var Hardscore = 0; onEvent(&quot;Cape&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+1; setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); playSound(&quot;sound://category_male_voiceover/correct_male.mp3&quot;, false); setTimeout(function() { showElement(&quot;button1&quot;); showElement(&quot;button2&quot;); showElement(&quot;button3&quot;); showElement(&quot;button4&quot;); showElement(&quot;image26&quot;); hideElement(&quot;Sey&quot;); hideElement(&quot;Mauritius&quot;); hideElement(&quot;Maldives&quot;); hideElement(&quot;Cape&quot;); hideElement(&quot;image14&quot;); }, 2000); }); onEvent(&quot;Sey&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+0; setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { showElement(&quot;button1&quot;); showElement(&quot;button2&quot;); showElement(&quot;button3&quot;); showElement(&quot;button4&quot;); showElement(&quot;image26&quot;); hideElement(&quot;Sey&quot;); hideElement(&quot;Mauritius&quot;); hideElement(&quot;Maldives&quot;); hideElement(&quot;Cape&quot;); hideElement(&quot;image14&quot;); }, 2000); }); onEvent(&quot;Mauritius&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+0; setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { showElement(&quot;button1&quot;); showElement(&quot;button2&quot;); showElement(&quot;button3&quot;); showElement(&quot;button4&quot;); showElement(&quot;image26&quot;); hideElement(&quot;Sey&quot;); hideElement(&quot;Mauritius&quot;); hideElement(&quot;Maldives&quot;); hideElement(&quot;Cape&quot;); hideElement(&quot;image14&quot;); }, 2000); }); onEvent(&quot;Maldives&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+0; setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { showElement(&quot;button1&quot;); showElement(&quot;button2&quot;); showElement(&quot;button3&quot;); showElement(&quot;button4&quot;); showElement(&quot;image26&quot;); hideElement(&quot;Sey&quot;); hideElement(&quot;Mauritius&quot;); hideElement(&quot;Maldives&quot;); hideElement(&quot;Cape&quot;); hideElement(&quot;image14&quot;); }, 2000); }); onEvent(&quot;button8&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+1; setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { showElement(&quot;button9&quot;); showElement(&quot;button10&quot;); showElement(&quot;button11&quot;); showElement(&quot;button12&quot;); showElement(&quot;image28&quot;); hideElement(&quot;button5&quot;); hideElement(&quot;button6&quot;); hideElement(&quot;button7&quot;); hideElement(&quot;button8&quot;); hideElement(&quot;image27&quot;); }, 2000); }); onEvent(&quot;button3&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+1; setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); playSound(&quot;sound://category_male_voiceover/correct_male.mp3&quot;, false); setTimeout(function() { showElement(&quot;button5&quot;); showElement(&quot;button6&quot;); showElement(&quot;button7&quot;); showElement(&quot;button8&quot;); showElement(&quot;image27&quot;); hideElement(&quot;button1&quot;); hideElement(&quot;button2&quot;); hideElement(&quot;button3&quot;); hideElement(&quot;button4&quot;); hideElement(&quot;image26&quot;); }, 2000); }); onEvent(&quot;button1&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+0; setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { showElement(&quot;button5&quot;); showElement(&quot;button6&quot;); showElement(&quot;button7&quot;); showElement(&quot;button8&quot;); showElement(&quot;image27&quot;); hideElement(&quot;button1&quot;); hideElement(&quot;button2&quot;); hideElement(&quot;button3&quot;); hideElement(&quot;button4&quot;); hideElement(&quot;image26&quot;); }, 2000); }); onEvent(&quot;button2&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+0; setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { showElement(&quot;button5&quot;); showElement(&quot;button6&quot;); showElement(&quot;button7&quot;); showElement(&quot;button8&quot;); showElement(&quot;image27&quot;); hideElement(&quot;button1&quot;); hideElement(&quot;button2&quot;); hideElement(&quot;button3&quot;); hideElement(&quot;button4&quot;); hideElement(&quot;image26&quot;); }, 2000); }); onEvent(&quot;button4&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+0; setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { showElement(&quot;button5&quot;); showElement(&quot;button6&quot;); showElement(&quot;button7&quot;); showElement(&quot;button8&quot;); showElement(&quot;image27&quot;); hideElement(&quot;button1&quot;); hideElement(&quot;button2&quot;); hideElement(&quot;button3&quot;); hideElement(&quot;button4&quot;); hideElement(&quot;image26&quot;); }, 2000); }); onEvent(&quot;button5&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+0; setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { showElement(&quot;button9&quot;); showElement(&quot;button10&quot;); showElement(&quot;button11&quot;); showElement(&quot;button12&quot;); showElement(&quot;image28&quot;); hideElement(&quot;button5&quot;); hideElement(&quot;button6&quot;); hideElement(&quot;button7&quot;); hideElement(&quot;button8&quot;); hideElement(&quot;image27&quot;); }, 2000); }); onEvent(&quot;button6&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+0; setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { showElement(&quot;button9&quot;); showElement(&quot;button10&quot;); showElement(&quot;button11&quot;); showElement(&quot;button12&quot;); showElement(&quot;image28&quot;); hideElement(&quot;button5&quot;); hideElement(&quot;button6&quot;); hideElement(&quot;button7&quot;); hideElement(&quot;button8&quot;); hideElement(&quot;image27&quot;); }, 2000); }); onEvent(&quot;button7&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+0; setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { showElement(&quot;button9&quot;); showElement(&quot;button10&quot;); showElement(&quot;button11&quot;); showElement(&quot;button12&quot;); showElement(&quot;image28&quot;); hideElement(&quot;button5&quot;); hideElement(&quot;button6&quot;); hideElement(&quot;button7&quot;); hideElement(&quot;button8&quot;); hideElement(&quot;image27&quot;); }, 2000); }); onEvent(&quot;button9&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+1; setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); playSound(&quot;sound://category_male_voiceover/correct_male.mp3&quot;, false); setTimeout(function() { showElement(&quot;button13&quot;); showElement(&quot;button14&quot;); showElement(&quot;button15&quot;); showElement(&quot;button16&quot;); showElement(&quot;image29&quot;); hideElement(&quot;button9&quot;); hideElement(&quot;button10&quot;); hideElement(&quot;button11&quot;); hideElement(&quot;button12&quot;); hideElement(&quot;image28&quot;); }, 2000); }); onEvent(&quot;button10&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+0; setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { showElement(&quot;button13&quot;); showElement(&quot;button14&quot;); showElement(&quot;button15&quot;); showElement(&quot;button16&quot;); showElement(&quot;image29&quot;); hideElement(&quot;button9&quot;); hideElement(&quot;button10&quot;); hideElement(&quot;button11&quot;); hideElement(&quot;button12&quot;); hideElement(&quot;image28&quot;); }, 2000); }); onEvent(&quot;button11&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+0; setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { showElement(&quot;button13&quot;); showElement(&quot;button14&quot;); showElement(&quot;button15&quot;); showElement(&quot;button16&quot;); showElement(&quot;image29&quot;); hideElement(&quot;button9&quot;); hideElement(&quot;button10&quot;); hideElement(&quot;button11&quot;); hideElement(&quot;button12&quot;); hideElement(&quot;image28&quot;); }, 2000); }); onEvent(&quot;button12&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+0; setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); setTimeout(function() { showElement(&quot;button13&quot;); showElement(&quot;button14&quot;); showElement(&quot;button15&quot;); showElement(&quot;button16&quot;); showElement(&quot;image29&quot;); hideElement(&quot;button9&quot;); hideElement(&quot;button10&quot;); hideElement(&quot;button11&quot;); hideElement(&quot;button12&quot;); hideElement(&quot;image28&quot;); }, 2000); }); onEvent(&quot;button13&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+0; setTimeout(function() { setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); setProperty(&quot;Scoree&quot;, &quot;font-size&quot;, 60); setProperty(&quot;zero&quot;, &quot;font-size&quot;, 60); setProperty(&quot;zero&quot;, &quot;y&quot;, 150); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); hideElement(&quot;button16&quot;); hideElement(&quot;button15&quot;); hideElement(&quot;button14&quot;); hideElement(&quot;button13&quot;); hideElement(&quot;image29&quot;); showElement(&quot;zzzz&quot;); hideElement(&quot;label12&quot;); hideElement(&quot;image9&quot;); }, 2000); }); onEvent(&quot;button14&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+1; setTimeout(function() { setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); setProperty(&quot;Scoree&quot;, &quot;font-size&quot;, 60); setProperty(&quot;zero&quot;, &quot;font-size&quot;, 60); setProperty(&quot;zero&quot;, &quot;y&quot;, 150); playSound(&quot;sound://category_male_voiceover/correct_male.mp3&quot;, false); hideElement(&quot;button16&quot;); hideElement(&quot;button15&quot;); hideElement(&quot;button14&quot;); hideElement(&quot;button13&quot;); hideElement(&quot;image29&quot;); showElement(&quot;zzzz&quot;); hideElement(&quot;label12&quot;); hideElement(&quot;image9&quot;); }, 2000); }); onEvent(&quot;button15&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+0; setTimeout(function() { setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); setProperty(&quot;Scoree&quot;, &quot;font-size&quot;, 60); setProperty(&quot;zero&quot;, &quot;font-size&quot;, 60); setProperty(&quot;zero&quot;, &quot;y&quot;, 150); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); hideElement(&quot;button16&quot;); hideElement(&quot;button15&quot;); hideElement(&quot;button14&quot;); hideElement(&quot;button13&quot;); hideElement(&quot;image29&quot;); showElement(&quot;zzzz&quot;); hideElement(&quot;label12&quot;); hideElement(&quot;image9&quot;); }, 2000); }); onEvent(&quot;button16&quot;, &quot;click&quot;, function(event) { Hardscore = Hardscore+0; setTimeout(function() { setProperty(&quot;zero&quot;, &quot;text&quot;, Hardscore); setProperty(&quot;Scoree&quot;, &quot;font-size&quot;, 60); setProperty(&quot;zero&quot;, &quot;font-size&quot;, 60); setProperty(&quot;zero&quot;, &quot;y&quot;, 150); playSound(&quot;sound://category_female_voiceover/wrong_female.mp3&quot;, false); hideElement(&quot;button16&quot;); hideElement(&quot;button15&quot;); hideElement(&quot;button14&quot;); hideElement(&quot;button13&quot;); hideElement(&quot;image29&quot;); showElement(&quot;zzzz&quot;); hideElement(&quot;label12&quot;); hideElement(&quot;image9&quot;); }, 2000); }); onEvent(&quot;zzzz&quot;, &quot;click&quot;, function( ) { setScreen(&quot;screen1&quot;); }); .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2022/09/13/Quiz.html",
            "relUrl": "/jupyter/2022/09/13/Quiz.html",
            "date": " • Sep 13, 2022"
        }
        
    
  
    
        ,"post61": {
            "title": "Youtube Channel",
            "content": "&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/rFY2X6Y4tPY&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt; .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2022/09/12/Youtube-Channel.html",
            "relUrl": "/jupyter/2022/09/12/Youtube-Channel.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post62": {
            "title": "Python Lists and Dictionaries",
            "content": "print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) name = &quot;Luke Riggins&quot; print(&quot;name&quot;, name, type(name)) print() # variable of type integer print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) age = 17 print(&quot;age&quot;, age, type(age)) print() # variable of type float print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) score = 90.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) print(&quot;What is variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection?&quot;) print(&quot;What is different about the list output?&quot;) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;Bash&quot;] # *I added bash as a language* print(&quot;langs&quot;, langs, type(langs), &quot;length&quot;, len(langs)) print(&quot;- langs[3]&quot;, langs[3], type(langs[3])) # *I changed the index from 0 to 3 so that the print command will print Bash instead of Python* print() # variable of type dictionary (a group of keys and values) print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) print(&quot;What is different about the dictionary output?&quot;) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person), &quot;length&quot;, len(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . What is the variable name/key? value? type? primitive or collection, why? name Luke Riggins &lt;class &#39;str&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? age 17 &lt;class &#39;int&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? score 90.0 &lt;class &#39;float&#39;&gt; What is variable name/key? value? type? primitive or collection? What is different about the list output? langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;] &lt;class &#39;list&#39;&gt; length 4 - langs[3] Bash &lt;class &#39;str&#39;&gt; What is the variable name/key? value? type? primitive or collection, why? What is different about the dictionary output? person {&#39;name&#39;: &#39;Luke Riggins&#39;, &#39;age&#39;: 17, &#39;score&#39;: 90.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;]} &lt;class &#39;dict&#39;&gt; length 4 - person[&#34;name&#34;] Luke Riggins &lt;class &#39;str&#39;&gt; . InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Ethan&quot;, &quot;LastName&quot;: &quot;Nyguen&quot;, &quot;DOB&quot;: &quot;October 3&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;EthanN45233@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Luke&quot;, &quot;LastName&quot;: &quot;Riggins&quot;, &quot;DOB&quot;: &quot;December 2&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;luker56233@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;Volkswagon Passat&quot;] }) # PUTTING MY INFORMATION (HACK!) InfoDb.append({ &quot;FirstName&quot;: &quot;Luke&quot;, &quot;LastName&quot;: &quot;Riggins&quot;, &quot;DOB&quot;: &quot;December 2&quot;, &quot;Residence&quot;: &quot;Rancho Bernardo&quot;, &quot;Email&quot;: &quot;luke120204@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;Toyota&quot;] }) # PUTTING MY PARTER&#39;S INFORMATION (HACK!) InfoDb.append({ &quot;FirstName&quot;: &quot;Jeffery&quot;, &quot;LastName&quot;: &quot;Lee&quot;, &quot;DOB&quot;: &quot;December 27&quot;, &quot;Residence&quot;: &quot;4S Ranch&quot;, &quot;Email&quot;: &quot;jefferyl56783@stu.powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;Honda Accord&quot;] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;Ethan&#39;, &#39;LastName&#39;: &#39;Nyguen&#39;, &#39;DOB&#39;: &#39;October 3&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;EthanN45233@stu.powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]}, {&#39;FirstName&#39;: &#39;Luke&#39;, &#39;LastName&#39;: &#39;Riggins&#39;, &#39;DOB&#39;: &#39;December 2&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;luker56233@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;Volkswagon Passat&#39;]}, {&#39;FirstName&#39;: &#39;Luke&#39;, &#39;LastName&#39;: &#39;Riggins&#39;, &#39;DOB&#39;: &#39;December 2&#39;, &#39;Residence&#39;: &#39;Rancho Bernardo&#39;, &#39;Email&#39;: &#39;luke120204@gmail.com&#39;, &#39;Owns_Cars&#39;: [&#39;Toyota&#39;]}, {&#39;FirstName&#39;: &#39;Jeffery&#39;, &#39;LastName&#39;: &#39;Lee&#39;, &#39;DOB&#39;: &#39;December 27&#39;, &#39;Residence&#39;: &#39;4S Ranch&#39;, &#39;Email&#39;: &#39;jefferyl56783@stu.powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;Honda Accord&#39;]}] . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Formatted output of List/Dictionary - for loop . Prepare a function to format the data . | Prepare a function to iterate through the list . | Activate your function . | . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Alternate Methods for iteration . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Recursion . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Creating a For Loop with Index . for indx, record in enumerate(InfoDb): print(&quot;Record #&quot; + str(indx+1) + &quot;: &quot;, end = &quot;&quot;) print_data(record) . Record #1: Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Record #2: Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Record #3: Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Record #4: Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord . Reverse Order . for record in reversed(InfoDb): print_data(record) . Jeffery Lee Residence: 4S Ranch Birth Day: December 27 Cars: Honda Accord Luke Riggins Residence: Rancho Bernardo Birth Day: December 2 Cars: Toyota Luke Riggins Residence: San Diego Birth Day: December 2 Cars: Volkswagon Passat Ethan Nyguen Residence: San Diego Birth Day: October 3 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/jupyter/2022/09/12/Dcitionaries-Lists-and-Dictionaries.html",
            "relUrl": "/jupyter/2022/09/12/Dcitionaries-Lists-and-Dictionaries.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post63": {
            "title": "Changing Remote Theme Temporarily",
            "content": "Changed value for key remote_theme . . Reverted back: . . How I did it . I went to APCSP website and copied the midnight code which is pages-themes/midnight@v0.2.0 and put it in config in place of jekyll/minima under remote themes . .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/week%202/2022/09/08/Changing-Theme-Temp.html",
            "relUrl": "/week%202/2022/09/08/Changing-Theme-Temp.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post64": {
            "title": "Vocab and Agile Notes",
            "content": "",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2022/08/28/Agile-Notes-and-vocabulary.html",
            "relUrl": "/2022/08/28/Agile-Notes-and-vocabulary.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post65": {
            "title": "College Apps Timeline",
            "content": "Python Lists and Dictionaries . toc: true layout: post description: How to use Bash. categories: [markdown] title: Lukes Second Blog . Timeline for when to finish my College APPs . UC Prompts . Letters of Rec (Completed) . UC Prompt 1 (Completed) UC Prompt 4 (Completed) UC Prompt 6 (Completed) UC Prompt 7 (Completed) . Common App . UW Complete Common App supplemental essay (Completed) Complete Common App Application (Finish by September 1st) Covid Supplement (Finish by September 1st) . University of Oregon . Complete Common App supplemental essay (Completed) Complete Common App Application (Finish by September 8th) Covid Supplement (Finish by September 8th) . Boston University . Complete Common App supplemental essay (Finish by September 15th) Complete Common App Application (Finish by September 15th) Covid Supplement (Finish by September 15th) . Santa Clara . Complete Common App supplemental essay (Finish by September 22) Complete Common App Application (Finish by September 22) Covid Supplement (Finish by September 22) Complete Essay 2 (Finish by September 22) . NYU . Complete Common App supplemental essay (Finish by September 29) Complete Common App Application (Finish by September 29) Covid Supplement (Finish by September 29) Complete Essay 2 (Finish by September 29) . Indiana Bloomington . Complete Common App supplemental essay (Finish by October 6) Complete Common App Application (Finish by October 6) Covid Supplement (Finish by October 6) . USC . Complete Common App supplemental essay (Finish by October 13) Complete Common App Application (Finish by October 13) Covid Supplement (Finish by October 13) Complete Essay 2 (Finish by October 13) . University of Virginia . Complete Common App supplemental essay (Finish by October 21) Complete Common App Application (Finish by October 21) Covid Supplement (Finish by October 21) Complete Essay 2 (Finish by October 21) Complete CSS Profile (Finish by October 21) . University of Michigan . Complete Common App supplemental essay (Finish by October 28) Complete Common App Application (Finish by October 28) Covid Supplement (Finish by October 28) Complete Essay 2 (Finish by October 28) . CMC . Complete CMC Application (Finish by November 4) . ##CSU . SDSU . COmplete CSU Application (Finish by November 11) . Cal Poly SLO . Complete CSU Application (Finish by November 18) . Mcgill Regular Decision by January 15th .",
            "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/2020/01/14/College-Apps-Timeline.html",
            "relUrl": "/2020/01/14/College-Apps-Timeline.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  

  

  

  

  
  

  
      ,"page15": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://rigtig123.github.io/Rigs-2-Ds-Blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}